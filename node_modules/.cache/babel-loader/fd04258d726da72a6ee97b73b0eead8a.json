{"ast":null,"code":"import _defineProperty from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/extensions/sweet-alert/SweetAlertTypes.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\";\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nvar SweetAlertTypes = /*#__PURE__*/function (_React$Component) {\n  _inherits(SweetAlertTypes, _React$Component);\n\n  function SweetAlertTypes() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SweetAlertTypes);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SweetAlertTypes)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      successAlert: false,\n      errorAlert: false,\n      infoAlert: false,\n      warningAlert: false\n    };\n\n    _this.handleAlert = function (state, value) {\n      _this.setState(_defineProperty({}, state, value));\n    };\n\n    return _this;\n  }\n\n  _createClass(SweetAlertTypes, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, \"Types\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, \"SweetAlert comes with 4 built-in types which will show a corresponding icon animation: \\\"warning\\\", \\\"error\\\", \\\"success\\\" and \\\"info\\\".\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mr-1 mb-1\",\n        color: \"success\",\n        onClick: function onClick() {\n          return _this2.handleAlert(\"successAlert\", true);\n        },\n        outline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, \"Success\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mr-1 mb-1\",\n        color: \"danger\",\n        onClick: function onClick() {\n          return _this2.handleAlert(\"errorAlert\", true);\n        },\n        outline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, \"Error\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mr-1 mb-1\",\n        color: \"warning\",\n        onClick: function onClick() {\n          return _this2.handleAlert(\"warningAlert\", true);\n        },\n        outline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, \"Warning\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-1\",\n        color: \"info\",\n        onClick: function onClick() {\n          return _this2.handleAlert(\"infoAlert\", true);\n        },\n        outline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"Info\"), /*#__PURE__*/React.createElement(SweetAlert, {\n        success: true,\n        title: \"Success\",\n        show: this.state.successAlert,\n        onConfirm: function onConfirm() {\n          return _this2.handleAlert(\"successAlert\", false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"sweet-alert-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, \"You clicked the button!\")), /*#__PURE__*/React.createElement(SweetAlert, {\n        error: true,\n        title: \"Error\",\n        show: this.state.errorAlert,\n        onConfirm: function onConfirm() {\n          return _this2.handleAlert(\"errorAlert\", false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"sweet-alert-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, \"You clicked the button!\")), /*#__PURE__*/React.createElement(SweetAlert, {\n        info: true,\n        title: \"Info!\",\n        show: this.state.infoAlert,\n        onConfirm: function onConfirm() {\n          return _this2.handleAlert(\"infoAlert\", false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"sweet-alert-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, \"You clicked the button!\")), /*#__PURE__*/React.createElement(SweetAlert, {\n        warning: true,\n        title: \"Warning\",\n        show: this.state.warningAlert,\n        onConfirm: function onConfirm() {\n          return _this2.handleAlert(\"warningAlert\", false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"sweet-alert-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, \"You clicked the button!\"))));\n    }\n  }]);\n\n  return SweetAlertTypes;\n}(React.Component);\n\nexport default SweetAlertTypes;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/extensions/sweet-alert/SweetAlertTypes.js"],"names":["React","Card","CardHeader","CardBody","CardTitle","Button","SweetAlert","SweetAlertTypes","state","successAlert","errorAlert","infoAlert","warningAlert","handleAlert","value","setState","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass SweetAlertTypes extends React.Component {\n  state = {\n   successAlert : false, \n   errorAlert : false, \n   infoAlert : false, \n   warningAlert : false\n  }\n\n  handleAlert = (state, value) => {\n    this.setState({ [state] : value })\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <p>\n          SweetAlert comes with 4 built-in types which will show a corresponding icon animation: \"warning\", \"error\", \"success\" and \"info\". \n        </p>\n        <Button className=\"mr-1 mb-1\" color=\"success\" onClick={() => this.handleAlert(\"successAlert\", true)} outline>Success</Button>\n        <Button className=\"mr-1 mb-1\" color=\"danger\" onClick={() => this.handleAlert(\"errorAlert\", true)} outline>Error</Button>\n        <Button className=\"mr-1 mb-1\" color=\"warning\" onClick={() => this.handleAlert(\"warningAlert\", true)} outline>Warning</Button>\n        <Button className=\"mb-1\" color=\"info\" onClick={() => this.handleAlert(\"infoAlert\", true)} outline>Info</Button>\n        \n\n        <SweetAlert success title=\"Success\"\n          show={this.state.successAlert} \n          onConfirm={() => this.handleAlert(\"successAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">You clicked the button!</p>\n        </SweetAlert>\n\n        <SweetAlert error title=\"Error\"\n          show={this.state.errorAlert} \n          onConfirm={() => this.handleAlert(\"errorAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert info title=\"Info!\"\n          show={this.state.infoAlert} \n          onConfirm={() => this.handleAlert(\"infoAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert warning title=\"Warning\"\n          show={this.state.warningAlert} \n          onConfirm={() => this.handleAlert(\"warningAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n      </CardBody>\n    </Card>\n    )\n  }\n}\n\nexport default SweetAlertTypes"]},"metadata":{},"sourceType":"module"}