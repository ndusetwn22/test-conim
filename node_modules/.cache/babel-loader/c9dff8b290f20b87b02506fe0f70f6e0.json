{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.1/src/layouts/components/navbar/Navbar.js\";\nimport React from \"react\";\nimport { Navbar } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\"; // import { useAuth0 } from \"../../../authServices/auth0/auth0Service\"\n\nimport { // logoutWithJWT,\n// logoutWithFirebase,\nlogoutWithCustom } from \"../../../redux/actions/auth/loginActions\";\nimport NavbarBookmarks from \"./NavbarBookmarks\";\nimport NavbarUser from \"./NavbarUser\";\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\";\n\nconst UserName = props => {\n  console.log('User navbar : ', props);\n  let username = \"\"; // if (props.userdata !== undefined) {\n  //   username = props.userdata.name\n  // } else if (props.user.login.values !== undefined) {\n  //   username = props.user.login.values.name\n  //   if (\n  //     props.user.login.values.loggedInWith !== undefined &&\n  //     props.user.login.values.loggedInWith === \"jwt\"\n  //   ) {\n  //     username = props.user.login.values.loggedInUser.name\n  //   }\n  // } else {\n  //   username = \"John Doe\"\n  // }\n\n  if (localStorage.getItem('account') !== undefined && localStorage.getItem('account') !== null) {\n    var myProfile = localStorage.getItem('account');\n    myProfile = JSON.parse(myProfile);\n    console.log('my profile', myProfile);\n    username = myProfile.name;\n    var departemen = myProfile.nama_departemen;\n  }\n\n  return username, departemen;\n};\n\nconst ThemeNavbar = props => {\n  // const { user } = useAuth0()\n  const colorsArr = [\"primary\", \"danger\", \"success\", \"info\", \"warning\", \"dark\"];\n  const navbarTypes = [\"floating\", \"static\", \"sticky\", \"hidden\"];\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-navbar-shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Navbar, {\n    className: classnames(\"header-navbar navbar-expand-lg navbar navbar-with-menu navbar-shadow\", {\n      \"navbar-light\": props.navbarColor === \"default\" || !colorsArr.includes(props.navbarColor),\n      \"navbar-dark\": colorsArr.includes(props.navbarColor),\n      \"bg-primary\": props.navbarColor === \"primary\" && props.navbarType !== \"static\",\n      \"bg-danger\": props.navbarColor === \"danger\" && props.navbarType !== \"static\",\n      \"bg-success\": props.navbarColor === \"success\" && props.navbarType !== \"static\",\n      \"bg-info\": props.navbarColor === \"info\" && props.navbarType !== \"static\",\n      \"bg-warning\": props.navbarColor === \"warning\" && props.navbarType !== \"static\",\n      \"bg-dark\": props.navbarColor === \"dark\" && props.navbarType !== \"static\",\n      \"d-none\": props.navbarType === \"hidden\" && !props.horizontal,\n      \"floating-nav\": props.navbarType === \"floating\" && !props.horizontal || !navbarTypes.includes(props.navbarType) && !props.horizontal,\n      \"navbar-static-top\": props.navbarType === \"static\" && !props.horizontal,\n      \"fixed-top\": props.navbarType === \"sticky\" || props.horizontal,\n      \"scrolling\": props.horizontal && props.scrolling\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-collapse d-flex justify-content-between align-items-center\",\n    id: \"navbar-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bookmark-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavbarBookmarks, {\n    sidebarVisibility: props.sidebarVisibility,\n    handleAppOverlay: props.handleAppOverlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })), props.horizontal ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"brand-logo mr-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary brand-text mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, \"Dankos Farma\")) : null, /*#__PURE__*/React.createElement(NavbarUser, {\n    handleAppOverlay: props.handleAppOverlay,\n    changeCurrentLang: props.changeCurrentLang,\n    userName: /*#__PURE__*/React.createElement(UserName, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 27\n      }\n    })),\n    userImg: props.user.login.values !== undefined && props.user.login.values.loggedInWith !== \"jwt\" && props.user.login.values.photoUrl ? props.user.login.values.photoUrl : userImg,\n    loggedInWith: props.user !== undefined && props.user.login.values !== undefined ? props.user.login.values.loggedInWith : null // logoutWithJWT={props.logoutWithJWT}\n    // logoutWithFirebase={props.logoutWithFirebase}\n    ,\n    logoutWithCustom: props.logoutWithCustom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  // logoutWithJWT,\n  // logoutWithFirebase,\n  logoutWithCustom // useAuth0\n\n})(ThemeNavbar);","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.1/src/layouts/components/navbar/Navbar.js"],"names":["React","Navbar","connect","classnames","logoutWithCustom","NavbarBookmarks","NavbarUser","userImg","UserName","props","console","log","username","localStorage","getItem","undefined","myProfile","JSON","parse","name","departemen","nama_departemen","ThemeNavbar","colorsArr","navbarTypes","navbarColor","includes","navbarType","horizontal","scrolling","sidebarVisibility","handleAppOverlay","changeCurrentLang","user","login","values","loggedInWith","photoUrl","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Navbar } from \"reactstrap\"\nimport { connect } from \"react-redux\"\nimport classnames from \"classnames\"\n// import { useAuth0 } from \"../../../authServices/auth0/auth0Service\"\nimport {\n  // logoutWithJWT,\n  // logoutWithFirebase,\n  logoutWithCustom\n} from \"../../../redux/actions/auth/loginActions\"\nimport NavbarBookmarks from \"./NavbarBookmarks\"\nimport NavbarUser from \"./NavbarUser\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\n\nconst UserName = props => {\n  console.log('User navbar : ', props)\n  let username = \"\"\n  // if (props.userdata !== undefined) {\n  //   username = props.userdata.name\n  // } else if (props.user.login.values !== undefined) {\n  //   username = props.user.login.values.name\n  //   if (\n  //     props.user.login.values.loggedInWith !== undefined &&\n  //     props.user.login.values.loggedInWith === \"jwt\"\n  //   ) {\n  //     username = props.user.login.values.loggedInUser.name\n  //   }\n\n  // } else {\n  //   username = \"John Doe\"\n  // }\n  if (localStorage.getItem('account') !== undefined && localStorage.getItem('account') !== null) {\n    var myProfile = localStorage.getItem('account')\n    myProfile = JSON.parse(myProfile)\n    console.log('my profile', myProfile)\n    username = myProfile.name\n    var departemen = myProfile.nama_departemen\n}\n\n  return username, departemen\n}\nconst ThemeNavbar = props => {\n  // const { user } = useAuth0()\n  const colorsArr = [ \"primary\", \"danger\", \"success\", \"info\", \"warning\", \"dark\"]\n  const navbarTypes = [\"floating\" , \"static\" , \"sticky\" , \"hidden\"]\n  return (\n    <React.Fragment>\n      <div className=\"content-overlay\" />\n      <div className=\"header-navbar-shadow\" />\n      <Navbar\n        className={classnames(\n          \"header-navbar navbar-expand-lg navbar navbar-with-menu navbar-shadow\",\n          {\n            \"navbar-light\": props.navbarColor === \"default\" || !colorsArr.includes(props.navbarColor),\n            \"navbar-dark\": colorsArr.includes(props.navbarColor),\n            \"bg-primary\":\n              props.navbarColor === \"primary\" && props.navbarType !== \"static\",\n            \"bg-danger\":\n              props.navbarColor === \"danger\" && props.navbarType !== \"static\",\n            \"bg-success\":\n              props.navbarColor === \"success\" && props.navbarType !== \"static\",\n            \"bg-info\":\n              props.navbarColor === \"info\" && props.navbarType !== \"static\",\n            \"bg-warning\":\n              props.navbarColor === \"warning\" && props.navbarType !== \"static\",\n            \"bg-dark\":\n              props.navbarColor === \"dark\" && props.navbarType !== \"static\",\n            \"d-none\": props.navbarType === \"hidden\" && !props.horizontal,\n            \"floating-nav\":\n              (props.navbarType === \"floating\" && !props.horizontal) || (!navbarTypes.includes(props.navbarType) && !props.horizontal),\n            \"navbar-static-top\":\n              props.navbarType === \"static\" && !props.horizontal,\n            \"fixed-top\": props.navbarType === \"sticky\" || props.horizontal,\n            \"scrolling\": props.horizontal && props.scrolling\n\n          }\n        )}\n      >\n        <div className=\"navbar-wrapper\">\n          <div className=\"navbar-container content\">\n            <div\n              className=\"navbar-collapse d-flex justify-content-between align-items-center\"\n              id=\"navbar-mobile\"\n            >\n              <div className=\"bookmark-wrapper\">\n                <NavbarBookmarks\n                  sidebarVisibility={props.sidebarVisibility}\n                  handleAppOverlay={props.handleAppOverlay}\n                />\n              </div>\n              {props.horizontal ? (\n                <div className=\"logo d-flex align-items-center\">\n                  <div className=\"brand-logo mr-50\"></div>\n                  <h2 className=\"text-primary brand-text mb-0\">Dankos Farma</h2>\n                </div>\n              ) : null}\n              <NavbarUser\n                handleAppOverlay={props.handleAppOverlay}\n                changeCurrentLang={props.changeCurrentLang}\n                userName={<UserName {...props} />}\n                userImg={\n                  props.user.login.values !== undefined &&\n                  props.user.login.values.loggedInWith !== \"jwt\" &&\n                  props.user.login.values.photoUrl\n                    ? props.user.login.values.photoUrl\n                    : userImg\n                }\n                loggedInWith={\n                  props.user !== undefined &&\n                  props.user.login.values !== undefined\n                    ? props.user.login.values.loggedInWith\n                    : null\n                }\n                // logoutWithJWT={props.logoutWithJWT}\n                // logoutWithFirebase={props.logoutWithFirebase}\n                logoutWithCustom={props.logoutWithCustom}\n              />\n            </div>\n          </div>\n        </div>\n      </Navbar>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth\n  }\n}\n\nexport default connect(mapStateToProps, {\n  // logoutWithJWT,\n  // logoutWithFirebase,\n  logoutWithCustom,\n  // useAuth0\n})(ThemeNavbar)\n"]},"metadata":{},"sourceType":"module"}