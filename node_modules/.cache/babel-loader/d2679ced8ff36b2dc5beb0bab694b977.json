{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import NumericInput from\"react-numeric-input\";import{Card,CardHeader,CardTitle,CardBody}from\"reactstrap\";import{mobileStyle}from\"./InputStyles\";var NumberInputHTML=/*#__PURE__*/function(_React$Component){_inherits(NumberInputHTML,_React$Component);var _super=_createSuper(NumberInputHTML);function NumberInputHTML(){_classCallCheck(this,NumberInputHTML);return _super.apply(this,arguments);}_createClass(NumberInputHTML,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(CardTitle,null,\"HTML Props\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",null,\"You can use any additional HTML attributes that make sence, just don't forget to camelCase them as JSX requires. Only the type attribute will be overriden to text. Following input will be auto focused.\"),/*#__PURE__*/React.createElement(NumericInput,{mobile:true,autoComplete:\"on\",autoCorrect:\"on\",autoFocus:true,value:10,style:mobileStyle})));}}]);return NumberInputHTML;}(React.Component);export default NumberInputHTML;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/forms/form-elements/number-input/NumberInputHTML.js"],"names":["React","NumericInput","Card","CardHeader","CardTitle","CardBody","mobileStyle","NumberInputHTML","Component"],"mappings":"4nBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,SAA3B,CAAsCC,QAAtC,KAAsD,YAAtD,CACA,OAASC,WAAT,KAA4B,eAA5B,C,GAEMC,CAAAA,e,sRACJ,iBAAS,CACP,mBACE,oBAAC,IAAD,mBACE,oBAAC,UAAD,mBACE,oBAAC,SAAD,mBADF,CADF,cAIE,oBAAC,QAAD,mBACE,yOADF,cAOE,oBAAC,YAAD,EACE,MAAM,KADR,CAEE,YAAY,CAAC,IAFf,CAGE,WAAW,CAAC,IAHd,CAIE,SAAS,CAAE,IAJb,CAKE,KAAK,CAAE,EALT,CAME,KAAK,CAAED,WANT,EAPF,CAJF,CADF,CAuBD,C,6BAzB2BN,KAAK,CAACQ,S,EA2BpC,cAAeD,CAAAA,eAAf","sourcesContent":["import React from \"react\"\nimport NumericInput from \"react-numeric-input\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { mobileStyle } from \"./InputStyles\"\n\nclass NumberInputHTML extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>HTML Props</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <p>\n            You can use any additional HTML attributes that make sence, just\n            don't forget to camelCase them as JSX requires. Only the type\n            attribute will be overriden to text. Following input will be auto\n            focused.\n          </p>\n          <NumericInput\n            mobile\n            autoComplete=\"on\"\n            autoCorrect=\"on\"\n            autoFocus={true}\n            value={10}\n            style={mobileStyle}\n          />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default NumberInputHTML\n"]},"metadata":{},"sourceType":"module"}