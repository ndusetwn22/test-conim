{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\template-belajar-react\\\\src\\\\utility\\\\context\\\\Layout.js\";\nimport React from \"react\";\nimport VerticalLayout from \"../../layouts/VerticalLayout\";\nimport FullLayout from \"../../layouts/FullpageLayout\";\nimport HorizontalLayout from \"../../layouts/HorizontalLayout\";\nimport themeConfig from \"../../configs/themeConfig\";\nconst layouts = {\n  vertical: VerticalLayout,\n  full: FullLayout,\n  horizontal: HorizontalLayout\n};\nconst ContextLayout = React.createContext();\n\nclass Layout extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeLayout: themeConfig.layout,\n      width: window.innerWidth,\n      lastLayout: null,\n      direction: themeConfig.direction\n    };\n\n    this.updateWidth = () => {\n      this.setState({\n        width: window.innerWidth\n      });\n    };\n\n    this.handleWindowResize = () => {\n      this.updateWidth();\n\n      if (this.state.activeLayout === \"horizontal\" && this.state.width <= 1199) {\n        this.setState({\n          activeLayout: \"vertical\",\n          lastLayout: \"horizontal\"\n        });\n      }\n\n      if (this.state.lastLayout === \"horizontal\" && this.state.width >= 1199) {\n        this.setState({\n          activeLayout: \"horizontal\",\n          lastLayout: \"vertical\"\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      if (window !== \"undefined\") {\n        window.addEventListener(\"resize\", this.handleWindowResize);\n      }\n\n      this.handleDirUpdate();\n\n      if (this.state.activeLayout === \"horizontal\" && this.state.width <= 1199) {\n        this.setState({\n          activeLayout: \"vertical\"\n        });\n      } else if (themeConfig.layout === \"horizontal\" && this.state.width >= 1200) {\n        this.setState({\n          activeLayout: \"horizontal\"\n        });\n      } else {\n        this.setState({\n          activeLayout: \"vertical\"\n        });\n      }\n    };\n\n    this.handleDirUpdate = () => {\n      let dir = this.state.direction;\n      if (dir === \"rtl\") document.getElementsByTagName(\"html\")[0].setAttribute(\"dir\", \"rtl\");else document.getElementsByTagName(\"html\")[0].setAttribute(\"dir\", \"ltr\");\n    };\n  }\n\n  componentDidUpdate() {\n    this.handleDirUpdate();\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(ContextLayout.Provider, {\n      value: {\n        state: this.state,\n        fullLayout: layouts[\"full\"],\n        VerticalLayout: layouts[\"vertical\"],\n        horizontalLayout: layouts[\"horizontal\"],\n        switchLayout: layout => {\n          this.setState({\n            activeLayout: layout\n          });\n        },\n        switchDir: dir => {\n          this.setState({\n            direction: dir\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nexport { Layout, ContextLayout };","map":{"version":3,"sources":["E:/react/template-belajar-react/src/utility/context/Layout.js"],"names":["React","VerticalLayout","FullLayout","HorizontalLayout","themeConfig","layouts","vertical","full","horizontal","ContextLayout","createContext","Layout","Component","state","activeLayout","layout","width","window","innerWidth","lastLayout","direction","updateWidth","setState","handleWindowResize","componentDidMount","addEventListener","handleDirUpdate","dir","document","getElementsByTagName","setAttribute","componentDidUpdate","render","children","props","fullLayout","horizontalLayout","switchLayout","switchDir"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport VerticalLayout from \"../../layouts/VerticalLayout\"\nimport FullLayout from \"../../layouts/FullpageLayout\"\nimport HorizontalLayout from \"../../layouts/HorizontalLayout\"\nimport themeConfig from \"../../configs/themeConfig\"\nconst layouts = {\n  vertical: VerticalLayout,\n  full: FullLayout,\n  horizontal: HorizontalLayout\n}\n\nconst ContextLayout = React.createContext()\n\nclass Layout extends React.Component {\n  state = {\n    activeLayout: themeConfig.layout,\n    width: window.innerWidth,\n    lastLayout: null,\n    direction: themeConfig.direction\n  }\n\n  updateWidth = () => {\n    this.setState({\n      width: window.innerWidth\n    })\n  }\n\n  handleWindowResize = () => {\n    this.updateWidth()\n    if (this.state.activeLayout === \"horizontal\" && this.state.width <= 1199) {\n      this.setState({\n        activeLayout: \"vertical\",\n        lastLayout: \"horizontal\"\n      })\n    }\n\n    if (this.state.lastLayout === \"horizontal\" && this.state.width >= 1199) {\n      this.setState({\n        activeLayout: \"horizontal\",\n        lastLayout: \"vertical\"\n      })\n    }\n  }\n\n  componentDidMount = () => {\n    if (window !== \"undefined\") {\n      window.addEventListener(\"resize\", this.handleWindowResize)\n    }\n    this.handleDirUpdate()\n    if (this.state.activeLayout === \"horizontal\" && this.state.width <= 1199) {\n      this.setState({\n        activeLayout: \"vertical\"\n      })\n    } else if (\n      themeConfig.layout === \"horizontal\" &&\n      this.state.width >= 1200\n    ) {\n      this.setState({\n        activeLayout: \"horizontal\"\n      })\n    } else {\n      this.setState({\n        activeLayout: \"vertical\"\n      })\n    }\n  }\n\n  componentDidUpdate() {\n    this.handleDirUpdate()\n  }\n\n  handleDirUpdate = () => {\n    let dir = this.state.direction\n    if (dir === \"rtl\")\n      document.getElementsByTagName(\"html\")[0].setAttribute(\"dir\", \"rtl\")\n    else document.getElementsByTagName(\"html\")[0].setAttribute(\"dir\", \"ltr\")\n  }\n\n\n\n  render() {\n    const { children } = this.props\n    return (\n      <ContextLayout.Provider\n        value={{\n          state: this.state,\n          fullLayout: layouts[\"full\"],\n          VerticalLayout: layouts[\"vertical\"],\n          horizontalLayout: layouts[\"horizontal\"],\n          switchLayout: layout => {\n            this.setState({ activeLayout: layout })\n          },\n          switchDir: dir => {\n            this.setState({ direction: dir })\n          }\n        }}\n      >\n        {children}\n      </ContextLayout.Provider>\n    )\n  }\n}\n\nexport { Layout, ContextLayout }\n"]},"metadata":{},"sourceType":"module"}