{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Button,Popover,PopoverHeader,PopoverBody,Card,CardHeader,CardBody,CardTitle,TabContent,TabPane,Nav,NavItem,NavLink}from\"reactstrap\";import classnames from\"classnames\";import{Eye,Code}from\"react-feather\";import{popoverControlled}from\"./PopoverSourceCode\";var PopoverControlled=/*#__PURE__*/function(_React$Component){_inherits(PopoverControlled,_React$Component);var _super=_createSuper(PopoverControlled);function PopoverControlled(){var _this;_classCallCheck(this,PopoverControlled);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeTab:\"1\",popoverOpen:false};_this.toggleTab=function(tab){if(_this.state.activeTab!==tab){_this.setState({activeTab:tab});}};_this.togglePopover=function(){_this.setState({popoverOpen:!_this.state.popoverOpen});};return _this;}_createClass(PopoverControlled,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(CardTitle,null,\"Controlled Popover\"),/*#__PURE__*/React.createElement(\"div\",{className:\"views\"},/*#__PURE__*/React.createElement(Nav,{tabs:true},/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{className:classnames({active:this.state.activeTab===\"1\"}),onClick:function onClick(){_this2.toggleTab(\"1\");}},/*#__PURE__*/React.createElement(Eye,{size:15}))),/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{className:classnames({active:this.state.activeTab===\"2\"}),onClick:function onClick(){_this2.toggleTab(\"2\");}},/*#__PURE__*/React.createElement(Code,{size:15})))))),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",null,\"For controlled Popover you'll have to manage state of component.controlled Popover require \",/*#__PURE__*/React.createElement(\"code\",null,\"isOpen\"),\" and\",\" \",/*#__PURE__*/React.createElement(\"code\",null,\"toggle\"),\" props to work.\"),/*#__PURE__*/React.createElement(TabContent,{activeTab:this.state.activeTab},/*#__PURE__*/React.createElement(TabPane,{className:\"justify-content-center d-flex\",tabId:\"1\"},/*#__PURE__*/React.createElement(Button.Ripple,{color:\"primary\",outline:true,id:\"controlledPopover\"},\"Controlled\"),/*#__PURE__*/React.createElement(Popover,{placement:\"top\",target:\"controlledPopover\",isOpen:this.state.popoverOpen,toggle:this.togglePopover},/*#__PURE__*/React.createElement(PopoverHeader,null,\"Controlled Popover\"),/*#__PURE__*/React.createElement(PopoverBody,null,\"Macaroon chocolate candy. I love carrot cake gingerbread cake lemon drops. Muffin sugar plum marzipan pie.\"))),/*#__PURE__*/React.createElement(TabPane,{className:\"component-code\",tabId:\"2\"},popoverControlled)))));}}]);return PopoverControlled;}(React.Component);export default PopoverControlled;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/components/reactstrap/popovers/PopoverControlled.js"],"names":["React","Button","Popover","PopoverHeader","PopoverBody","Card","CardHeader","CardBody","CardTitle","TabContent","TabPane","Nav","NavItem","NavLink","classnames","Eye","Code","popoverControlled","PopoverControlled","state","activeTab","popoverOpen","toggleTab","tab","setState","togglePopover","active","Component"],"mappings":"4nBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,MADF,CAEEC,OAFF,CAGEC,aAHF,CAIEC,WAJF,CAKEC,IALF,CAMEC,UANF,CAOEC,QAPF,CAQEC,SARF,CASEC,UATF,CAUEC,OAVF,CAWEC,GAXF,CAYEC,OAZF,CAaEC,OAbF,KAcO,YAdP,CAeA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,GAAT,CAAcC,IAAd,KAA0B,eAA1B,CACA,OAASC,iBAAT,KAAkC,qBAAlC,C,GAEMC,CAAAA,iB,mXACJC,K,CAAQ,CACNC,SAAS,CAAE,GADL,CAENC,WAAW,CAAE,KAFP,C,OAKRC,S,CAAY,SAAAC,GAAG,CAAI,CACjB,GAAI,MAAKJ,KAAL,CAAWC,SAAX,GAAyBG,GAA7B,CAAkC,CAChC,MAAKC,QAAL,CAAc,CAAEJ,SAAS,CAAEG,GAAb,CAAd,EACD,CACF,C,OAEDE,a,CAAgB,UAAM,CACpB,MAAKD,QAAL,CAAc,CACZH,WAAW,CAAE,CAAC,MAAKF,KAAL,CAAWE,WADb,CAAd,EAGD,C,mEAED,iBAAS,iBACP,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,oBAAC,IAAD,mBACE,oBAAC,UAAD,mBACE,oBAAC,SAAD,2BADF,cAEE,2BAAK,SAAS,CAAC,OAAf,eACE,oBAAC,GAAD,EAAK,IAAI,KAAT,eACE,oBAAC,OAAD,mBACE,oBAAC,OAAD,EACE,SAAS,CAAEP,UAAU,CAAC,CACpBY,MAAM,CAAE,KAAKP,KAAL,CAAWC,SAAX,GAAyB,GADb,CAAD,CADvB,CAIE,OAAO,CAAE,kBAAM,CACb,MAAI,CAACE,SAAL,CAAe,GAAf,EACD,CANH,eAQE,oBAAC,GAAD,EAAK,IAAI,CAAE,EAAX,EARF,CADF,CADF,cAaE,oBAAC,OAAD,mBACE,oBAAC,OAAD,EACE,SAAS,CAAER,UAAU,CAAC,CACpBY,MAAM,CAAE,KAAKP,KAAL,CAAWC,SAAX,GAAyB,GADb,CAAD,CADvB,CAIE,OAAO,CAAE,kBAAM,CACb,MAAI,CAACE,SAAL,CAAe,GAAf,EACD,CANH,eAQE,oBAAC,IAAD,EAAM,IAAI,CAAE,EAAZ,EARF,CADF,CAbF,CADF,CAFF,CADF,cAgCE,oBAAC,QAAD,mBACE,wIAEuC,yCAFvC,QAE+D,GAF/D,cAGE,yCAHF,mBADF,cAME,oBAAC,UAAD,EAAY,SAAS,CAAE,KAAKH,KAAL,CAAWC,SAAlC,eACE,oBAAC,OAAD,EAAS,SAAS,CAAC,+BAAnB,CAAmD,KAAK,CAAC,GAAzD,eACE,oBAAC,MAAD,CAAQ,MAAR,EAAe,KAAK,CAAC,SAArB,CAA+B,OAAO,KAAtC,CAAuC,EAAE,CAAC,mBAA1C,eADF,cAIE,oBAAC,OAAD,EACE,SAAS,CAAC,KADZ,CAEE,MAAM,CAAC,mBAFT,CAGE,MAAM,CAAE,KAAKD,KAAL,CAAWE,WAHrB,CAIE,MAAM,CAAE,KAAKI,aAJf,eAME,oBAAC,aAAD,2BANF,cAOE,oBAAC,WAAD,mHAPF,CAJF,CADF,cAkBE,oBAAC,OAAD,EAAS,SAAS,CAAC,gBAAnB,CAAoC,KAAK,CAAC,GAA1C,EACGR,iBADH,CAlBF,CANF,CAhCF,CADF,CADF,CAkED,C,+BArF6BjB,KAAK,CAAC2B,S,EAuFtC,cAAeT,CAAAA,iBAAf","sourcesContent":["import React from \"react\"\nimport {\n  Button,\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { popoverControlled } from \"./PopoverSourceCode\"\n\nclass PopoverControlled extends React.Component {\n  state = {\n    activeTab: \"1\",\n    popoverOpen: false\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  togglePopover = () => {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Controlled Popover</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              For controlled Popover you'll have to manage state of\n              component.controlled Popover require <code>isOpen</code> and{\" \"}\n              <code>toggle</code> props to work.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane className=\"justify-content-center d-flex\" tabId=\"1\">\n                <Button.Ripple color=\"primary\" outline id=\"controlledPopover\">\n                  Controlled\n                </Button.Ripple>\n                <Popover\n                  placement=\"top\"\n                  target=\"controlledPopover\"\n                  isOpen={this.state.popoverOpen}\n                  toggle={this.togglePopover}\n                >\n                  <PopoverHeader>Controlled Popover</PopoverHeader>\n                  <PopoverBody>\n                    Macaroon chocolate candy. I love carrot cake gingerbread\n                    cake lemon drops. Muffin sugar plum marzipan pie.\n                  </PopoverBody>\n                </Popover>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {popoverControlled}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default PopoverControlled\n"]},"metadata":{},"sourceType":"module"}