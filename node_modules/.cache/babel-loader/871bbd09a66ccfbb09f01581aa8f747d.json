{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Card,CardHeader,CardTitle,CardBody,Row,Col,Container}from\"reactstrap\";// eslint-disable-next-line\nimport prism from\"prismjs\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){_classCallCheck(this,App);return _super.apply(this,arguments);}_createClass(App,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(CardTitle,null,\"Equal-width\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",null,\"For example, here are two grid layouts that apply to every device and viewport, from \",/*#__PURE__*/React.createElement(\"code\",null,\"xs\"),\" to \",/*#__PURE__*/React.createElement(\"code\",null,\"xl\"),\". Add any number of unit-less props for each breakpoint you need and every column will be the same width.\"),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",{className:\"bd-example-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"bd-example\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,\"1 of 2\"),/*#__PURE__*/React.createElement(Col,null,\"2 of 2\")),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,\"1 of 3\"),/*#__PURE__*/React.createElement(Col,null,\"2 of 3\"),/*#__PURE__*/React.createElement(Col,null,\"3 of 3\"))))),/*#__PURE__*/React.createElement(\"pre\",{className:\"mt-2\"},/*#__PURE__*/React.createElement(\"code\",{className:\"language-html\"},\"\\n<Container>\\n  <Row>\\n    <Col>1 of 2</Col>\\n    <Col>2 of 2</Col>\\n  </Row>\\n  <Row>\\n    <Col>1 of 3</Col>\\n    <Col>2 of 3</Col>\\n    <Col>3 of 3</Col>\\n  </Row>\\n</Container>\\n  \"))));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/ui-elements/grid/EqualWidth.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Row","Col","Container","prism","App","Component"],"mappings":"4nBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,IADF,CAEEC,UAFF,CAGEC,SAHF,CAIEC,QAJF,CAKEC,GALF,CAMEC,GANF,CAOEC,SAPF,KAQO,YARP,CASA;AACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,C,GAEMC,CAAAA,G,0NACJ,iBAAS,CACP,mBACE,oBAAC,IAAD,mBACE,oBAAC,UAAD,mBACE,oBAAC,SAAD,oBADF,CADF,cAIE,oBAAC,QAAD,mBACE,kIAEqB,qCAFrB,qBAEwC,qCAFxC,6GADF,cAOE,oBAAC,SAAD,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACE,2BAAK,SAAS,CAAC,YAAf,eACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,eADF,cAEE,oBAAC,GAAD,eAFF,CADF,cAKE,oBAAC,GAAD,mBACE,oBAAC,GAAD,eADF,cAEE,oBAAC,GAAD,eAFF,cAGE,oBAAC,GAAD,eAHF,CALF,CADF,CADF,CAPF,cAsBE,2BAAK,SAAS,CAAC,MAAf,eACE,4BAAM,SAAS,CAAC,eAAhB,6LADF,CAtBF,CAJF,CADF,CAiDD,C,iBAnDeT,KAAK,CAACU,S,EAqDxB,cAAeD,CAAAA,GAAf","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Row,\n  Col,\n  Container\n} from \"reactstrap\"\n// eslint-disable-next-line\nimport prism from \"prismjs\"\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Equal-width</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <p>\n            For example, here are two grid layouts that apply to every device\n            and viewport, from <code>xs</code> to <code>xl</code>. Add any\n            number of unit-less props for each breakpoint you need and every\n            column will be the same width.\n          </p>\n          <Container>\n            <div className=\"bd-example-row\">\n              <div className=\"bd-example\">\n                <Row>\n                  <Col>1 of 2</Col>\n                  <Col>2 of 2</Col>\n                </Row>\n                <Row>\n                  <Col>1 of 3</Col>\n                  <Col>2 of 3</Col>\n                  <Col>3 of 3</Col>\n                </Row>\n              </div>\n            </div>\n          </Container>\n          <pre className=\"mt-2\">\n            <code className=\"language-html\">\n              {\n                `\n<Container>\n  <Row>\n    <Col>1 of 2</Col>\n    <Col>2 of 2</Col>\n  </Row>\n  <Row>\n    <Col>1 of 3</Col>\n    <Col>2 of 3</Col>\n    <Col>3 of 3</Col>\n  </Row>\n</Container>\n  `\n              }\n            </code>\n          </pre>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}