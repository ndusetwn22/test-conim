{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\rombak-react-vuexy2\\\\src\\\\layouts\\\\HorizontalLayout.js\";\nimport React, { PureComponent } from \"react\";\nimport classnames from \"classnames\";\nimport Customizer from \"../components/@vuexy/customizer/Customizer\";\nimport Sidebar from \"./components/menu/horizontal-menu/HorizontalMenu\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Footer from \"./components/footer/Footer\";\nimport themeConfig from \"../configs/themeConfig\";\nimport { connect } from \"react-redux\";\nimport { changeNavbarColor, changeNavbarType, changeFooterType, changeMenuColor, hideScrollToTop, changeMode } from \"../redux/actions/customizer/index\";\n\nclass HorizontalLayout extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: window.innerWidth,\n      sidebarState: false,\n      layout: this.props.app.customizer.theme,\n      collapsedContent: false,\n      sidebarHidden: false,\n      currentLang: \"en\",\n      appOverlay: false,\n      customizer: false,\n      currRoute: this.props.location.pathname,\n      menuOpen: themeConfig.menuOpen\n    };\n    this.mounted = false;\n\n    this.updateWidth = () => {\n      if (this.mounted) {\n        this.setState(prevState => ({\n          width: window.innerWidth\n        }));\n      }\n    };\n\n    this.updateScroll = () => {\n      if (this.mounted) {\n        this.setState({\n          scroll: window.pageYOffset\n        });\n      }\n    };\n\n    this.handleCustomizer = bool => {\n      this.setState({\n        customizer: bool\n      });\n    };\n\n    this.handleRouteChange = () => {\n      if (this.props.location.pathname === \"/pages/profile\") {\n        this.setState({\n          collapsedContent: true\n        });\n      } else {\n        this.setState({\n          sidebarState: false,\n          collapsedContent: false\n        });\n      }\n    };\n\n    this.toggleSidebarMenu = () => {\n      this.setState({\n        sidebarState: !this.state.sidebarState,\n        collapsedContent: !this.state.collapsedContent\n      });\n    };\n\n    this.sidebarMenuHover = () => {\n      this.setState({\n        sidebarState: !this.state.sidebarState\n      });\n    };\n\n    this.handleSidebarVisibility = () => {\n      if (this.mounted) {\n        if (window !== undefined) {\n          window.addEventListener(\"resize\", () => {\n            if (this.state.sidebarHidden) {\n              this.setState({\n                sidebarHidden: !this.state.sidebarHidden\n              });\n            }\n          });\n        }\n\n        this.setState({\n          sidebarHidden: !this.state.sidebarHidden\n        });\n      }\n    };\n\n    this.handleCurrentLanguage = lang => {\n      this.setState({\n        currentLang: lang\n      });\n    };\n\n    this.handleAppOverlay = value => {\n      if (value.length > 0) this.setState({\n        appOverlay: true\n      });else if (value.length > 0 || value === \"\") {\n        this.setState({\n          appOverlay: false\n        });\n      }\n    };\n\n    this.handleAppOverlayClick = () => {\n      this.setState({\n        appOverlay: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    if (this.mounted) {\n      if (window !== \"undefined\") {\n        window.addEventListener(\"resize\", this.updateWidth, false);\n        window.addEventListener(\"scroll\", this.updateScroll, false);\n      }\n\n      if (this.props.location.pathname === \"/pages/profile\") {\n        this.setState({\n          sidebarState: true,\n          collapsedContent: true\n        });\n      }\n\n      let layout = this.props.app.customizer.theme;\n      return layout === \"dark\" ? document.body.classList.add(\"dark-layout\") : layout === \"semi-dark\" ? document.body.classList.add(\"semi-dark-layout\") : null;\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.mounted) {\n      if (this.state.currRoute !== this.props.location.pathname) {\n        this.handleRouteChange();\n        this.setState({\n          currRoute: this.props.location.pathname\n        });\n      }\n\n      let layout = this.props.app.customizer.theme;\n\n      if (layout === \"dark\") {\n        document.body.classList.remove(\"semi-dark-layout\");\n        document.body.classList.add(\"dark-layout\");\n      } else if (layout === \"semi-dark\") {\n        document.body.classList.remove(\"dark-layout\");\n        document.body.classList.add(\"semi-dark-layout\");\n      } else {\n        return document.body.classList.remove(\"dark-layout\", \"semi-dark-layout\");\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let customizerProps = this.props.app.customizer;\n    let navbarTypeArr = [\"sticky\", \"static\", \"sticky\", \"floating\", \"hidden\"];\n    let menuThemeArr = [\"primary\", \"success\", \"danger\", \"info\", \"warning\", \"dark\"];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classnames(`wrapper horizontal-layout theme-${customizerProps.menuTheme}`, {\n        \"menu-collapsed\": this.state.collapsedContent === true && this.state.width > 1200,\n        \"fixed-footer\": customizerProps.footerType === \"sticky\",\n        \"navbar-static\": customizerProps.navbarType === \"static\",\n        \"navbar-sticky\": customizerProps.navbarType === \"sticky\",\n        \"navbar-floating\": customizerProps.navbarType === \"floating\" || !navbarTypeArr.includes(customizerProps.navbarType),\n        \"navbar-hidden\": customizerProps.navbarType === \"hidden\",\n        \"theme-primary\": !menuThemeArr.includes(customizerProps.menuTheme)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      toggleSidebarMenu: this.toggleSidebarMenu,\n      sidebarState: this.state.sidebarState,\n      sidebarHover: this.sidebarMenuHover,\n      sidebarVisibility: this.handleSidebarVisibility,\n      visibilityState: this.state.sidebarHidden,\n      activePath: this.props.match.path,\n      currentLang: this.state.currentLang,\n      activeTheme: customizerProps.menuTheme,\n      collapsed: this.state.collapsedContent,\n      menuOpen: this.state.menuOpen,\n      navbarType: customizerProps.navbarType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classnames(\"app-content content\", {\n        \"show-overlay\": this.state.appOverlay === true\n      }),\n      onClick: this.handleAppOverlayClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      horizontal: true,\n      scrolling: this.state.scroll > 50 ? true : false,\n      toggleSidebarMenu: this.toggleSidebarMenu,\n      sidebarState: this.state.sidebarState,\n      sidebarVisibility: this.handleSidebarVisibility,\n      currentLang: this.state.currentLang,\n      changeCurrentLang: this.handleCurrentLanguage,\n      handleAppOverlay: this.handleAppOverlay,\n      appOverlayState: this.state.appOverlay,\n      navbarColor: customizerProps.navbarColor,\n      navbarType: customizerProps.navbarType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, this.props.children)), /*#__PURE__*/React.createElement(Footer, {\n      footerType: customizerProps.footerType,\n      hideScrollToTop: customizerProps.hideScrollToTop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }), customizerProps.disableCustomizer !== true ? /*#__PURE__*/React.createElement(Customizer, {\n      scrollToTop: customizerProps.hideScrollToTop,\n      activeNavbar: customizerProps.navbarColor,\n      activeMode: customizerProps.theme,\n      navbarType: customizerProps.navbarType,\n      footerType: customizerProps.footerType,\n      menuTheme: customizerProps.menuTheme,\n      customizerState: this.state.customizer,\n      handleCustomizer: this.handleCustomizer,\n      changeNavbar: this.props.changeNavbarColor,\n      changeNavbarType: this.props.changeNavbarType,\n      changeFooterType: this.props.changeFooterType,\n      changeMenuTheme: this.props.changeMenuColor,\n      hideScrollToTop: this.props.hideScrollToTop,\n      changeMode: this.props.changeMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidenav-overlay\",\n      onClick: this.handleSidebarVisibility,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    app: state.customizer\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeNavbarColor,\n  changeNavbarType,\n  changeFooterType,\n  changeMenuColor,\n  hideScrollToTop,\n  changeMode\n})(HorizontalLayout);","map":{"version":3,"sources":["E:/react/rombak-react-vuexy2/src/layouts/HorizontalLayout.js"],"names":["React","PureComponent","classnames","Customizer","Sidebar","Navbar","Footer","themeConfig","connect","changeNavbarColor","changeNavbarType","changeFooterType","changeMenuColor","hideScrollToTop","changeMode","HorizontalLayout","state","width","window","innerWidth","sidebarState","layout","props","app","customizer","theme","collapsedContent","sidebarHidden","currentLang","appOverlay","currRoute","location","pathname","menuOpen","mounted","updateWidth","setState","prevState","updateScroll","scroll","pageYOffset","handleCustomizer","bool","handleRouteChange","toggleSidebarMenu","sidebarMenuHover","handleSidebarVisibility","undefined","addEventListener","handleCurrentLanguage","lang","handleAppOverlay","value","length","handleAppOverlayClick","componentDidMount","document","body","classList","add","componentDidUpdate","remove","componentWillUnmount","render","customizerProps","navbarTypeArr","menuThemeArr","menuTheme","footerType","navbarType","includes","match","path","navbarColor","children","disableCustomizer","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,OAAOC,OAAP,MAAoB,kDAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,eAJF,EAKEC,eALF,EAMEC,UANF,QAOO,mCAPP;;AASA,MAAMC,gBAAN,SAA+Bd,aAA/B,CAA6C;AAAA;AAAA;AAAA,SAC3Ce,KAD2C,GACnC;AACNC,MAAAA,KAAK,EAAEC,MAAM,CAACC,UADR;AAENC,MAAAA,YAAY,EAAE,KAFR;AAGNC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,GAAX,CAAeC,UAAf,CAA0BC,KAH5B;AAINC,MAAAA,gBAAgB,EAAE,KAJZ;AAKNC,MAAAA,aAAa,EAAE,KALT;AAMNC,MAAAA,WAAW,EAAE,IANP;AAONC,MAAAA,UAAU,EAAE,KAPN;AAQNL,MAAAA,UAAU,EAAE,KARN;AASNM,MAAAA,SAAS,EAAE,KAAKR,KAAL,CAAWS,QAAX,CAAoBC,QATzB;AAUNC,MAAAA,QAAQ,EAAE1B,WAAW,CAAC0B;AAVhB,KADmC;AAAA,SAc3CC,OAd2C,GAcjC,KAdiC;;AAAA,SAgB3CC,WAhB2C,GAgB7B,MAAM;AAClB,UAAI,KAAKD,OAAT,EAAkB;AAChB,aAAKE,QAAL,CAAcC,SAAS,KAAK;AAC1BpB,UAAAA,KAAK,EAAEC,MAAM,CAACC;AADY,SAAL,CAAvB;AAGD;AACF,KAtB0C;;AAAA,SAwB3CmB,YAxB2C,GAwB5B,MAAM;AACnB,UAAI,KAAKJ,OAAT,EAAkB;AAChB,aAAKE,QAAL,CAAc;AAAEG,UAAAA,MAAM,EAAErB,MAAM,CAACsB;AAAjB,SAAd;AACD;AACF,KA5B0C;;AAAA,SA8B3CC,gBA9B2C,GA8BxBC,IAAI,IAAI;AACzB,WAAKN,QAAL,CAAc;AACZZ,QAAAA,UAAU,EAAEkB;AADA,OAAd;AAGD,KAlC0C;;AAAA,SAgF3CC,iBAhF2C,GAgFvB,MAAM;AACxB,UAAI,KAAKrB,KAAL,CAAWS,QAAX,CAAoBC,QAApB,KAAiC,gBAArC,EAAuD;AACrD,aAAKI,QAAL,CAAc;AACZV,UAAAA,gBAAgB,EAAE;AADN,SAAd;AAGD,OAJD,MAIO;AACL,aAAKU,QAAL,CAAc;AACZhB,UAAAA,YAAY,EAAE,KADF;AAEZM,UAAAA,gBAAgB,EAAE;AAFN,SAAd;AAID;AACF,KA3F0C;;AAAA,SA6F3CkB,iBA7F2C,GA6FvB,MAAM;AACxB,WAAKR,QAAL,CAAc;AACZhB,QAAAA,YAAY,EAAE,CAAC,KAAKJ,KAAL,CAAWI,YADd;AAEZM,QAAAA,gBAAgB,EAAE,CAAC,KAAKV,KAAL,CAAWU;AAFlB,OAAd;AAID,KAlG0C;;AAAA,SAoG3CmB,gBApG2C,GAoGxB,MAAM;AACvB,WAAKT,QAAL,CAAc;AACZhB,QAAAA,YAAY,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AADd,OAAd;AAGD,KAxG0C;;AAAA,SA0G3C0B,uBA1G2C,GA0GjB,MAAM;AAC9B,UAAI,KAAKZ,OAAT,EAAkB;AAChB,YAAIhB,MAAM,KAAK6B,SAAf,EAA0B;AACxB7B,UAAAA,MAAM,CAAC8B,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACtC,gBAAI,KAAKhC,KAAL,CAAWW,aAAf,EAA8B;AAC5B,mBAAKS,QAAL,CAAc;AACZT,gBAAAA,aAAa,EAAE,CAAC,KAAKX,KAAL,CAAWW;AADf,eAAd;AAGD;AACF,WAND;AAOD;;AACD,aAAKS,QAAL,CAAc;AACZT,UAAAA,aAAa,EAAE,CAAC,KAAKX,KAAL,CAAWW;AADf,SAAd;AAGD;AACF,KAzH0C;;AAAA,SA2H3CsB,qBA3H2C,GA2HnBC,IAAI,IAAI;AAC9B,WAAKd,QAAL,CAAc;AACZR,QAAAA,WAAW,EAAEsB;AADD,OAAd;AAGD,KA/H0C;;AAAA,SAiI3CC,gBAjI2C,GAiIxBC,KAAK,IAAI;AAC1B,UAAIA,KAAK,CAACC,MAAN,GAAe,CAAnB,EACE,KAAKjB,QAAL,CAAc;AACZP,QAAAA,UAAU,EAAE;AADA,OAAd,EADF,KAIK,IAAIuB,KAAK,CAACC,MAAN,GAAe,CAAf,IAAoBD,KAAK,KAAK,EAAlC,EAAsC;AACzC,aAAKhB,QAAL,CAAc;AACZP,UAAAA,UAAU,EAAE;AADA,SAAd;AAGD;AACF,KA3I0C;;AAAA,SA6I3CyB,qBA7I2C,GA6InB,MAAM;AAC5B,WAAKlB,QAAL,CAAc;AACZP,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,KAjJ0C;AAAA;;AAoC3C0B,EAAAA,iBAAiB,GAAG;AAClB,SAAKrB,OAAL,GAAe,IAAf;;AACA,QAAI,KAAKA,OAAT,EAAkB;AAChB,UAAIhB,MAAM,KAAK,WAAf,EAA4B;AAC1BA,QAAAA,MAAM,CAAC8B,gBAAP,CAAwB,QAAxB,EAAkC,KAAKb,WAAvC,EAAoD,KAApD;AACAjB,QAAAA,MAAM,CAAC8B,gBAAP,CAAwB,QAAxB,EAAkC,KAAKV,YAAvC,EAAqD,KAArD;AACD;;AACD,UAAI,KAAKhB,KAAL,CAAWS,QAAX,CAAoBC,QAApB,KAAiC,gBAArC,EAAuD;AACrD,aAAKI,QAAL,CAAc;AACZhB,UAAAA,YAAY,EAAE,IADF;AAEZM,UAAAA,gBAAgB,EAAE;AAFN,SAAd;AAID;;AACD,UAAIL,MAAM,GAAG,KAAKC,KAAL,CAAWC,GAAX,CAAeC,UAAf,CAA0BC,KAAvC;AACA,aAAOJ,MAAM,KAAK,MAAX,GACHmC,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,aAA5B,CADG,GAEHtC,MAAM,KAAK,WAAX,GACAmC,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,kBAA5B,CADA,GAEA,IAJJ;AAKD;AACF;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAK1B,OAAT,EAAkB;AAChB,UAAI,KAAKlB,KAAL,CAAWc,SAAX,KAAyB,KAAKR,KAAL,CAAWS,QAAX,CAAoBC,QAAjD,EAA2D;AACzD,aAAKW,iBAAL;AACA,aAAKP,QAAL,CAAc;AACZN,UAAAA,SAAS,EAAE,KAAKR,KAAL,CAAWS,QAAX,CAAoBC;AADnB,SAAd;AAGD;;AAED,UAAIX,MAAM,GAAG,KAAKC,KAAL,CAAWC,GAAX,CAAeC,UAAf,CAA0BC,KAAvC;;AACA,UAAIJ,MAAM,KAAK,MAAf,EAAuB;AACrBmC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+B,kBAA/B;AACAL,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,aAA5B;AACD,OAHD,MAGO,IAAItC,MAAM,KAAK,WAAf,EAA4B;AACjCmC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+B,aAA/B;AACAL,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,kBAA5B;AACD,OAHM,MAGA;AACL,eAAOH,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+B,aAA/B,EAA8C,kBAA9C,CAAP;AACD;AACF;AACF;;AAqEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAK5B,OAAL,GAAe,KAAf;AACD;;AAED6B,EAAAA,MAAM,GAAG;AACP,QAAIC,eAAe,GAAG,KAAK1C,KAAL,CAAWC,GAAX,CAAeC,UAArC;AACA,QAAIyC,aAAa,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,UAA/B,EAA2C,QAA3C,CAApB;AACA,QAAIC,YAAY,GAAG,CACjB,SADiB,EAEjB,SAFiB,EAGjB,QAHiB,EAIjB,MAJiB,EAKjB,SALiB,EAMjB,MANiB,CAAnB;AAQA,wBACE;AACE,MAAA,SAAS,EAAEhE,UAAU,CAClB,mCAAkC8D,eAAe,CAACG,SAAU,EAD1C,EAEnB;AACE,0BACE,KAAKnD,KAAL,CAAWU,gBAAX,KAAgC,IAAhC,IAAwC,KAAKV,KAAL,CAAWC,KAAX,GAAmB,IAF/D;AAGE,wBAAgB+C,eAAe,CAACI,UAAhB,KAA+B,QAHjD;AAIE,yBAAiBJ,eAAe,CAACK,UAAhB,KAA+B,QAJlD;AAKE,yBAAiBL,eAAe,CAACK,UAAhB,KAA+B,QALlD;AAME,2BACEL,eAAe,CAACK,UAAhB,KAA+B,UAA/B,IACA,CAACJ,aAAa,CAACK,QAAd,CAAuBN,eAAe,CAACK,UAAvC,CARL;AASE,yBAAiBL,eAAe,CAACK,UAAhB,KAA+B,QATlD;AAUE,yBAAiB,CAACH,YAAY,CAACI,QAAb,CAAsBN,eAAe,CAACG,SAAtC;AAVpB,OAFmB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAgBE,oBAAC,OAAD;AACE,MAAA,iBAAiB,EAAE,KAAKvB,iBAD1B;AAEE,MAAA,YAAY,EAAE,KAAK5B,KAAL,CAAWI,YAF3B;AAGE,MAAA,YAAY,EAAE,KAAKyB,gBAHrB;AAIE,MAAA,iBAAiB,EAAE,KAAKC,uBAJ1B;AAKE,MAAA,eAAe,EAAE,KAAK9B,KAAL,CAAWW,aAL9B;AAME,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAWiD,KAAX,CAAiBC,IAN/B;AAOE,MAAA,WAAW,EAAE,KAAKxD,KAAL,CAAWY,WAP1B;AAQE,MAAA,WAAW,EAAEoC,eAAe,CAACG,SAR/B;AASE,MAAA,SAAS,EAAE,KAAKnD,KAAL,CAAWU,gBATxB;AAUE,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWiB,QAVvB;AAWE,MAAA,UAAU,EAAE+B,eAAe,CAACK,UAX9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,eA6BE;AACE,MAAA,SAAS,EAAEnE,UAAU,CAAC,qBAAD,EAAwB;AAC3C,wBAAgB,KAAKc,KAAL,CAAWa,UAAX,KAA0B;AADC,OAAxB,CADvB;AAIE,MAAA,OAAO,EAAE,KAAKyB,qBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,MAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,SAAS,EAAE,KAAKtC,KAAL,CAAWuB,MAAX,GAAoB,EAApB,GAAyB,IAAzB,GAAgC,KAF7C;AAGE,MAAA,iBAAiB,EAAE,KAAKK,iBAH1B;AAIE,MAAA,YAAY,EAAE,KAAK5B,KAAL,CAAWI,YAJ3B;AAKE,MAAA,iBAAiB,EAAE,KAAK0B,uBAL1B;AAME,MAAA,WAAW,EAAE,KAAK9B,KAAL,CAAWY,WAN1B;AAOE,MAAA,iBAAiB,EAAE,KAAKqB,qBAP1B;AAQE,MAAA,gBAAgB,EAAE,KAAKE,gBARzB;AASE,MAAA,eAAe,EAAE,KAAKnC,KAAL,CAAWa,UAT9B;AAUE,MAAA,WAAW,EAAEmC,eAAe,CAACS,WAV/B;AAWE,MAAA,UAAU,EAAET,eAAe,CAACK,UAX9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAkBE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAK/C,KAAL,CAAWoD,QAA7C,CAlBF,CA7BF,eAkDE,oBAAC,MAAD;AACE,MAAA,UAAU,EAAEV,eAAe,CAACI,UAD9B;AAEE,MAAA,eAAe,EAAEJ,eAAe,CAACnD,eAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlDF,EAsDGmD,eAAe,CAACW,iBAAhB,KAAsC,IAAtC,gBACC,oBAAC,UAAD;AACE,MAAA,WAAW,EAAEX,eAAe,CAACnD,eAD/B;AAEE,MAAA,YAAY,EAAEmD,eAAe,CAACS,WAFhC;AAGE,MAAA,UAAU,EAAET,eAAe,CAACvC,KAH9B;AAIE,MAAA,UAAU,EAAEuC,eAAe,CAACK,UAJ9B;AAKE,MAAA,UAAU,EAAEL,eAAe,CAACI,UAL9B;AAME,MAAA,SAAS,EAAEJ,eAAe,CAACG,SAN7B;AAOE,MAAA,eAAe,EAAE,KAAKnD,KAAL,CAAWQ,UAP9B;AAQE,MAAA,gBAAgB,EAAE,KAAKiB,gBARzB;AASE,MAAA,YAAY,EAAE,KAAKnB,KAAL,CAAWb,iBAT3B;AAUE,MAAA,gBAAgB,EAAE,KAAKa,KAAL,CAAWZ,gBAV/B;AAWE,MAAA,gBAAgB,EAAE,KAAKY,KAAL,CAAWX,gBAX/B;AAYE,MAAA,eAAe,EAAE,KAAKW,KAAL,CAAWV,eAZ9B;AAaE,MAAA,eAAe,EAAE,KAAKU,KAAL,CAAWT,eAb9B;AAcE,MAAA,UAAU,EAAE,KAAKS,KAAL,CAAWR,UAdzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAiBG,IAvEN,eAwEE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAE,KAAKgC,uBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxEF,CADF;AA+ED;;AAjP0C;;AAmP7C,MAAM8B,eAAe,GAAG5D,KAAK,IAAI;AAC/B,SAAO;AACLO,IAAAA,GAAG,EAAEP,KAAK,CAACQ;AADN,GAAP;AAGD,CAJD;;AAKA,eAAehB,OAAO,CAACoE,eAAD,EAAkB;AACtCnE,EAAAA,iBADsC;AAEtCC,EAAAA,gBAFsC;AAGtCC,EAAAA,gBAHsC;AAItCC,EAAAA,eAJsC;AAKtCC,EAAAA,eALsC;AAMtCC,EAAAA;AANsC,CAAlB,CAAP,CAOZC,gBAPY,CAAf","sourcesContent":["import React, { PureComponent } from \"react\"\nimport classnames from \"classnames\"\nimport Customizer from \"../components/@vuexy/customizer/Customizer\"\nimport Sidebar from \"./components/menu/horizontal-menu/HorizontalMenu\"\nimport Navbar from \"./components/navbar/Navbar\"\nimport Footer from \"./components/footer/Footer\"\nimport themeConfig from \"../configs/themeConfig\"\nimport { connect } from \"react-redux\"\nimport {\n  changeNavbarColor,\n  changeNavbarType,\n  changeFooterType,\n  changeMenuColor,\n  hideScrollToTop,\n  changeMode\n} from \"../redux/actions/customizer/index\"\n\nclass HorizontalLayout extends PureComponent {\n  state = {\n    width: window.innerWidth,\n    sidebarState: false,\n    layout: this.props.app.customizer.theme,\n    collapsedContent: false,\n    sidebarHidden: false,\n    currentLang: \"en\",\n    appOverlay: false,\n    customizer: false,\n    currRoute: this.props.location.pathname,\n    menuOpen: themeConfig.menuOpen\n  }\n\n  mounted = false\n\n  updateWidth = () => {\n    if (this.mounted) {\n      this.setState(prevState => ({\n        width: window.innerWidth\n      }))\n    }\n  }\n\n  updateScroll = () => {\n    if (this.mounted) {\n      this.setState({ scroll: window.pageYOffset })\n    }\n  }\n\n  handleCustomizer = bool => {\n    this.setState({\n      customizer: bool\n    })\n  }\n\n  componentDidMount() {\n    this.mounted = true\n    if (this.mounted) {\n      if (window !== \"undefined\") {\n        window.addEventListener(\"resize\", this.updateWidth, false)\n        window.addEventListener(\"scroll\", this.updateScroll, false)\n      }\n      if (this.props.location.pathname === \"/pages/profile\") {\n        this.setState({\n          sidebarState: true,\n          collapsedContent: true\n        })\n      }\n      let layout = this.props.app.customizer.theme\n      return layout === \"dark\"\n        ? document.body.classList.add(\"dark-layout\")\n        : layout === \"semi-dark\"\n        ? document.body.classList.add(\"semi-dark-layout\")\n        : null\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.mounted) {\n      if (this.state.currRoute !== this.props.location.pathname) {\n        this.handleRouteChange()\n        this.setState({\n          currRoute: this.props.location.pathname\n        })\n      }\n\n      let layout = this.props.app.customizer.theme\n      if (layout === \"dark\") {\n        document.body.classList.remove(\"semi-dark-layout\")\n        document.body.classList.add(\"dark-layout\")\n      } else if (layout === \"semi-dark\") {\n        document.body.classList.remove(\"dark-layout\")\n        document.body.classList.add(\"semi-dark-layout\")\n      } else {\n        return document.body.classList.remove(\"dark-layout\", \"semi-dark-layout\")\n      }\n    }\n  }\n\n  handleRouteChange = () => {\n    if (this.props.location.pathname === \"/pages/profile\") {\n      this.setState({\n        collapsedContent: true\n      })\n    } else {\n      this.setState({\n        sidebarState: false,\n        collapsedContent: false\n      })\n    }\n  }\n\n  toggleSidebarMenu = () => {\n    this.setState({\n      sidebarState: !this.state.sidebarState,\n      collapsedContent: !this.state.collapsedContent\n    })\n  }\n\n  sidebarMenuHover = () => {\n    this.setState({\n      sidebarState: !this.state.sidebarState\n    })\n  }\n\n  handleSidebarVisibility = () => {\n    if (this.mounted) {\n      if (window !== undefined) {\n        window.addEventListener(\"resize\", () => {\n          if (this.state.sidebarHidden) {\n            this.setState({\n              sidebarHidden: !this.state.sidebarHidden\n            })\n          }\n        })\n      }\n      this.setState({\n        sidebarHidden: !this.state.sidebarHidden\n      })\n    }\n  }\n\n  handleCurrentLanguage = lang => {\n    this.setState({\n      currentLang: lang\n    })\n  }\n\n  handleAppOverlay = value => {\n    if (value.length > 0)\n      this.setState({\n        appOverlay: true\n      })\n    else if (value.length > 0 || value === \"\") {\n      this.setState({\n        appOverlay: false\n      })\n    }\n  }\n\n  handleAppOverlayClick = () => {\n    this.setState({\n      appOverlay: false\n    })\n  }\n\n  componentWillUnmount() {\n    this.mounted = false\n  }\n\n  render() {\n    let customizerProps = this.props.app.customizer\n    let navbarTypeArr = [\"sticky\", \"static\", \"sticky\", \"floating\", \"hidden\"]\n    let menuThemeArr = [\n      \"primary\",\n      \"success\",\n      \"danger\",\n      \"info\",\n      \"warning\",\n      \"dark\"\n    ]\n    return (\n      <div\n        className={classnames(\n          `wrapper horizontal-layout theme-${customizerProps.menuTheme}`,\n          {\n            \"menu-collapsed\":\n              this.state.collapsedContent === true && this.state.width > 1200,\n            \"fixed-footer\": customizerProps.footerType === \"sticky\",\n            \"navbar-static\": customizerProps.navbarType === \"static\",\n            \"navbar-sticky\": customizerProps.navbarType === \"sticky\",\n            \"navbar-floating\":\n              customizerProps.navbarType === \"floating\" ||\n              !navbarTypeArr.includes(customizerProps.navbarType),\n            \"navbar-hidden\": customizerProps.navbarType === \"hidden\",\n            \"theme-primary\": !menuThemeArr.includes(customizerProps.menuTheme)\n          }\n        )}>\n        <Sidebar\n          toggleSidebarMenu={this.toggleSidebarMenu}\n          sidebarState={this.state.sidebarState}\n          sidebarHover={this.sidebarMenuHover}\n          sidebarVisibility={this.handleSidebarVisibility}\n          visibilityState={this.state.sidebarHidden}\n          activePath={this.props.match.path}\n          currentLang={this.state.currentLang}\n          activeTheme={customizerProps.menuTheme}\n          collapsed={this.state.collapsedContent}\n          menuOpen={this.state.menuOpen}\n          navbarType={customizerProps.navbarType}\n        />\n        <div\n          className={classnames(\"app-content content\", {\n            \"show-overlay\": this.state.appOverlay === true\n          })}\n          onClick={this.handleAppOverlayClick}>\n          <Navbar\n            horizontal\n            scrolling={this.state.scroll > 50 ? true : false}\n            toggleSidebarMenu={this.toggleSidebarMenu}\n            sidebarState={this.state.sidebarState}\n            sidebarVisibility={this.handleSidebarVisibility}\n            currentLang={this.state.currentLang}\n            changeCurrentLang={this.handleCurrentLanguage}\n            handleAppOverlay={this.handleAppOverlay}\n            appOverlayState={this.state.appOverlay}\n            navbarColor={customizerProps.navbarColor}\n            navbarType={customizerProps.navbarType}\n          />\n          <div className=\"content-wrapper\">{this.props.children}</div>\n        </div>\n\n        <Footer\n          footerType={customizerProps.footerType}\n          hideScrollToTop={customizerProps.hideScrollToTop}\n        />\n        {customizerProps.disableCustomizer !== true ? (\n          <Customizer\n            scrollToTop={customizerProps.hideScrollToTop}\n            activeNavbar={customizerProps.navbarColor}\n            activeMode={customizerProps.theme}\n            navbarType={customizerProps.navbarType}\n            footerType={customizerProps.footerType}\n            menuTheme={customizerProps.menuTheme}\n            customizerState={this.state.customizer}\n            handleCustomizer={this.handleCustomizer}\n            changeNavbar={this.props.changeNavbarColor}\n            changeNavbarType={this.props.changeNavbarType}\n            changeFooterType={this.props.changeFooterType}\n            changeMenuTheme={this.props.changeMenuColor}\n            hideScrollToTop={this.props.hideScrollToTop}\n            changeMode={this.props.changeMode}\n          />\n        ) : null}\n        <div\n          className=\"sidenav-overlay\"\n          onClick={this.handleSidebarVisibility}\n        />\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    app: state.customizer\n  }\n}\nexport default connect(mapStateToProps, {\n  changeNavbarColor,\n  changeNavbarType,\n  changeFooterType,\n  changeMenuColor,\n  hideScrollToTop,\n  changeMode\n})(HorizontalLayout)\n"]},"metadata":{},"sourceType":"module"}