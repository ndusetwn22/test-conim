{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.1/src/extensions/import-export/Import.js\";\nimport React from \"react\";\nimport ExtensionsHeader from \"../extensionsHeader\";\nimport { Row, Col, Card, CardBody, Table, CardHeader, CardTitle, Input } from \"reactstrap\";\nimport XLSX from \"xlsx\";\nimport { DownloadCloud, Search } from \"react-feather\";\nimport { useDropzone } from \"react-dropzone\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../../assets/scss/plugins/extensions/toastr.scss\";\nimport \"../../assets/scss/plugins/extensions/dropzone.scss\";\n\nfunction Uploader(props) {\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \".xlsx, .xls, .csv\",\n    onDrop: acceptedFiles => {\n      var reader = new FileReader();\n\n      reader.onload = function () {\n        var fileData = reader.result;\n        var wb = XLSX.read(fileData, {\n          type: \"binary\"\n        });\n        wb.SheetNames.forEach(function (sheetName) {\n          var rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);\n          props.getTableData(rowObj, acceptedFiles[0].name);\n        });\n      };\n\n      if (acceptedFiles.length) {\n        reader.readAsBinaryString(acceptedFiles[0]);\n      } else {\n        toast.error(\"You can only upload .xlsx, .xls, .csv Files!\");\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"pb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n    className: \"dropzone py-3 flex-column\"\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DownloadCloud, {\n    className: \"text-light\",\n    size: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-0 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Drop Excel File or Browse\")));\n}\n\nclass Import extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableData: [],\n      filteredData: [],\n      value: \"\",\n      name: \"\"\n    };\n\n    this.getTableData = (arr, name) => {\n      this.setState({\n        tableData: arr,\n        name\n      });\n    };\n\n    this.handleFilter = e => {\n      let data = this.state.tableData;\n      let filteredData = [];\n      let value = e.target.value;\n      this.setState({\n        value\n      });\n\n      if (value.length) {\n        filteredData = data.filter(col => {\n          let keys = Object.keys(col);\n          let startsWithCondition = keys.filter(key => {\n            return col[key].toString().toLowerCase().startsWith(value.toLowerCase());\n          });\n          let includesCondition = keys.filter(key => col[key].toString().toLowerCase().includes(value.toLowerCase()));\n          if (startsWithCondition.length) return col[startsWithCondition];else if (!startsWithCondition && includesCondition.length) return col[includesCondition];else return null;\n        });\n        this.setState({\n          value,\n          filteredData\n        });\n      } else {\n        return null;\n      }\n    };\n  }\n\n  render() {\n    let headArr = this.state.tableData.length ? this.state.tableData.map((col, index) => {\n      if (index === 0) return [...Object.keys(col)];else return null;\n    }) : [];\n    let dataArr = this.state.value.length ? this.state.filteredData : this.state.tableData.length && !this.state.value.length ? this.state.tableData : null;\n    let renderTableBody = dataArr !== null && dataArr.length ? dataArr.map((col, index) => {\n      let keys = Object.keys(col);\n      let renderTd = keys.map((key, index) => /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }, col[key]));\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 20\n        }\n      }, renderTd);\n    }) : null;\n    let renderTableHead = headArr.length ? headArr[0].map((head, index) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 18\n        }\n      }, head);\n    }) : null;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExtensionsHeader, {\n      title: \"XLSX\",\n      subTitle: \"Xlsx is a parser and writer for various spreadsheet formats\",\n      link: \"https://github.com/AdeleD/react-paginate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"import-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Uploader, {\n      getTableData: this.getTableData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    })))))), this.state.tableData.length ? /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: \"justify-content-between flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, this.state.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter position-relative has-icon-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      value: this.state.value,\n      onChange: e => this.handleFilter(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control-position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      size: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"table-hover-animation\",\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 23\n      }\n    }, renderTableHead)), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, renderTableBody))))) : null, /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Import;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.1/src/extensions/import-export/Import.js"],"names":["React","ExtensionsHeader","Row","Col","Card","CardBody","Table","CardHeader","CardTitle","Input","XLSX","DownloadCloud","Search","useDropzone","toast","ToastContainer","Uploader","props","getRootProps","getInputProps","accept","onDrop","acceptedFiles","reader","FileReader","onload","fileData","result","wb","read","type","SheetNames","forEach","sheetName","rowObj","utils","sheet_to_row_object_array","Sheets","getTableData","name","length","readAsBinaryString","error","className","Import","Component","state","tableData","filteredData","value","arr","setState","handleFilter","e","data","target","filter","col","keys","Object","startsWithCondition","key","toString","toLowerCase","startsWith","includesCondition","includes","render","headArr","map","index","dataArr","renderTableBody","renderTd","renderTableHead","head"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport ExtensionsHeader from \"../extensionsHeader\"\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Table,\n  CardHeader,\n  CardTitle,\n  Input\n} from \"reactstrap\"\nimport XLSX from \"xlsx\"\nimport { DownloadCloud, Search } from \"react-feather\"\nimport { useDropzone } from \"react-dropzone\"\nimport { toast, ToastContainer } from \"react-toastify\"\n\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"../../assets/scss/plugins/extensions/toastr.scss\"\nimport \"../../assets/scss/plugins/extensions/dropzone.scss\"\n\nfunction Uploader(props) {\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \".xlsx, .xls, .csv\",\n    onDrop: acceptedFiles => {\n      var reader = new FileReader()\n      reader.onload = function() {\n        var fileData = reader.result\n        var wb = XLSX.read(fileData, { type: \"binary\" })\n\n        wb.SheetNames.forEach(function(sheetName) {\n          var rowObj = XLSX.utils.sheet_to_row_object_array(\n            wb.Sheets[sheetName]\n          )\n          props.getTableData(rowObj, acceptedFiles[0].name)\n        })\n      }\n      if (acceptedFiles.length) {\n        reader.readAsBinaryString(acceptedFiles[0])\n      } else {\n        toast.error(\"You can only upload .xlsx, .xls, .csv Files!\")\n      }\n    }\n  })\n  return (\n    <section className=\"pb-1\">\n      <div {...getRootProps({ className: \"dropzone py-3 flex-column\" })}>\n        <input {...getInputProps()} />\n        <DownloadCloud className=\"text-light\" size={50} />\n        <h4 className=\"mb-0 mt-2\">Drop Excel File or Browse</h4>\n      </div>\n    </section>\n  )\n}\n\nclass Import extends React.Component {\n  state = {\n    tableData: [],\n    filteredData: [],\n    value: \"\",\n    name: \"\"\n  }\n\n  getTableData = (arr, name) => {\n    this.setState({ tableData: arr, name })\n  }\n\n  handleFilter = e => {\n    let data = this.state.tableData\n    let filteredData = []\n    let value = e.target.value\n    this.setState({ value })\n\n    if (value.length) {\n      filteredData = data.filter(col => {\n        let keys = Object.keys(col)\n\n        let startsWithCondition = keys.filter(key => {\n          return col[key]\n            .toString()\n            .toLowerCase()\n            .startsWith(value.toLowerCase())\n        })\n\n        let includesCondition = keys.filter(key =>\n          col[key]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        )\n\n        if (startsWithCondition.length) return col[startsWithCondition]\n        else if (!startsWithCondition && includesCondition.length)\n          return col[includesCondition]\n        else return null\n      })\n      this.setState({ value, filteredData })\n    } else {\n      return null\n    }\n  }\n\n  render() {\n    let headArr = this.state.tableData.length\n      ? this.state.tableData.map((col, index) => {\n          if (index === 0) return [...Object.keys(col)]\n          else return null\n        })\n      : []\n    let dataArr = this.state.value.length\n      ? this.state.filteredData\n      : this.state.tableData.length && !this.state.value.length\n      ? this.state.tableData\n      : null\n    let renderTableBody =\n      dataArr !== null && dataArr.length\n        ? dataArr.map((col, index) => {\n            let keys = Object.keys(col)\n            let renderTd = keys.map((key, index) => (\n              <td key={index}>{col[key]}</td>\n            ))\n            return <tr key={index}>{renderTd}</tr>\n          })\n        : null\n\n    let renderTableHead = headArr.length\n      ? headArr[0].map((head, index) => {\n          return <th key={index}>{head}</th>\n        })\n      : null\n\n    return (\n      <React.Fragment>\n        <ExtensionsHeader\n          title=\"XLSX\"\n          subTitle=\"Xlsx is a parser and writer for various spreadsheet formats\"\n          link=\"https://github.com/AdeleD/react-paginate\"\n        />\n        <Row className=\"import-component\">\n          <Col sm=\"12\">\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col sm=\"12\">\n                    <Uploader getTableData={this.getTableData} />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n          {this.state.tableData.length ? (\n            <Col sm=\"12\">\n              <Card>\n                <CardHeader className=\"justify-content-between flex-wrap\">\n                  <CardTitle>{this.state.name}</CardTitle>\n                  <div className=\"filter position-relative has-icon-left\">\n                    <Input\n                      type=\"text\"\n                      value={this.state.value}\n                      onChange={e => this.handleFilter(e)}\n                    />\n                    <div className=\"form-control-position\">\n                      <Search size={15} />\n                    </div>\n                  </div>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"table-hover-animation\" responsive>\n                    <thead>\n                      <tr>{renderTableHead}</tr>\n                    </thead>\n                    <tbody>{renderTableBody}</tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          ) : null}\n          <ToastContainer />\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Import\n"]},"metadata":{},"sourceType":"module"}