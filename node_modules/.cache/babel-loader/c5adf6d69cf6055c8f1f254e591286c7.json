{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/views/forms/formik/FormikValidation.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody, FormGroup, Button, Label } from \"reactstrap\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nconst formSchema = Yup.object().shape({\n  required: Yup.string().required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  number: Yup.number().required(\"Required\"),\n  url: Yup.string().url().required(\"Required\"),\n  date: Yup.date().required(\"Required\"),\n  minlength: Yup.string().min(4, \"Too Short!\").required(\"Required\"),\n  maxlength: Yup.string().max(5, \"Too Long!\").required(\"Required\")\n});\n\nclass FormValidation extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \" Validation\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        required: \"\",\n        email: \"\",\n        url: \"\",\n        number: \"\",\n        date: \"\",\n        minlength: \"\",\n        maxlength: \"\"\n      },\n      validationSchema: formSchema,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, ({\n      errors,\n      touched\n    }) => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"required\",\n      id: \"required\",\n      className: `form-control ${errors.required && touched.required && \"is-invalid\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }), errors.required && touched.required ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-tooltip mt-25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, errors.required) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      className: `form-control ${errors.email && touched.email && \"is-invalid\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-tooltip mt-25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, errors.email) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"url\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, \"Website URL\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"url\",\n      id: \"url\",\n      className: `form-control ${errors.url && touched.url && \"is-invalid\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }), errors.url && touched.url ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-tooltip mt-25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, errors.url) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, \"Number\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"number\",\n      id: \"number\",\n      className: `form-control ${errors.number && touched.number && \"is-invalid\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }), errors.number && touched.number ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-tooltip mt-25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, errors.number) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"date\",\n      name: \"date\",\n      id: \"date\",\n      className: `form-control ${errors.date && touched.date && \"is-invalid\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }), errors.date && touched.date ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-tooltip mt-25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, errors.date) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"minlength\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, \"Min Length (Minimum 4 Characters)\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"minlength\",\n      id: \"minlength\",\n      className: `form-control ${errors.minlength && touched.minlength && \"is-invalid\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }), errors.minlength && touched.minlength ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-tooltip mt-25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, errors.minlength) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"maxlength\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, \"Max Length (Maximum 5 Characters)\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"maxlength\",\n      id: \"maxlength\",\n      className: `form-control ${errors.maxlength && touched.maxlength && \"is-invalid\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }), errors.maxlength && touched.maxlength ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-tooltip mt-25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, errors.maxlength) : null), /*#__PURE__*/React.createElement(Button.Ripple, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default FormValidation;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/forms/formik/FormikValidation.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","FormGroup","Button","Label","Formik","Field","Form","Yup","formSchema","object","shape","required","string","email","number","url","date","minlength","min","maxlength","max","FormValidation","Component","render","errors","touched"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Button,\n  Label\n} from \"reactstrap\"\nimport { Formik, Field, Form } from \"formik\"\nimport * as Yup from \"yup\"\n\nconst formSchema = Yup.object().shape({\n  required: Yup.string().required(\"Required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  number: Yup.number().required(\"Required\"),\n  url: Yup.string()\n    .url()\n    .required(\"Required\"),\n  date: Yup.date().required(\"Required\"),\n  minlength: Yup.string()\n    .min(4, \"Too Short!\")\n    .required(\"Required\"),\n  maxlength: Yup.string()\n    .max(5, \"Too Long!\")\n    .required(\"Required\")\n})\n\nclass FormValidation extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle> Validation</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Formik\n            initialValues={{\n              required: \"\",\n              email: \"\",\n              url: \"\",\n              number: \"\",\n              date: \"\",\n              minlength: \"\",\n              maxlength: \"\"\n            }}\n            validationSchema={formSchema}\n          >\n            {({ errors, touched }) => (\n              <Form>\n                <FormGroup className=\"my-3\">\n                  <Label for=\"required\">Name</Label>\n                  <Field\n                    name=\"required\"\n                    id=\"required\"\n                    className={`form-control ${errors.required &&\n                      touched.required &&\n                      \"is-invalid\"}`}\n                  />\n                  {errors.required && touched.required ? (\n                    <div className=\"invalid-tooltip mt-25\">{errors.required}</div>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className=\"my-3\">\n                  <Label for=\"email\">Email</Label>\n                  <Field\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    className={`form-control ${errors.email &&\n                      touched.email &&\n                      \"is-invalid\"}`}\n                  />\n                  {errors.email && touched.email ? (\n                    <div className=\"invalid-tooltip mt-25\">{errors.email}</div>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className=\"my-3\">\n                  <Label for=\"url\">Website URL</Label>\n                  <Field\n                    name=\"url\"\n                    id=\"url\"\n                    className={`form-control ${errors.url &&\n                      touched.url &&\n                      \"is-invalid\"}`}\n                  />\n                  {errors.url && touched.url ? (\n                    <div className=\"invalid-tooltip mt-25\">{errors.url}</div>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className=\"my-3\">\n                  <Label for=\"number\">Number</Label>\n                  <Field\n                    name=\"number\"\n                    id=\"number\"\n                    className={`form-control ${errors.number &&\n                      touched.number &&\n                      \"is-invalid\"}`}\n                  />\n                  {errors.number && touched.number ? (\n                    <div className=\"invalid-tooltip mt-25\">{errors.number}</div>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className=\"my-3\">\n                  <Label for=\"date\">Date</Label>\n                  <Field\n                    type=\"date\"\n                    name=\"date\"\n                    id=\"date\"\n                    className={`form-control ${errors.date &&\n                      touched.date &&\n                      \"is-invalid\"}`}\n                  />\n                  {errors.date && touched.date ? (\n                    <div className=\"invalid-tooltip mt-25\">{errors.date}</div>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className=\"my-3\">\n                  <Label for=\"minlength\">\n                    Min Length (Minimum 4 Characters)\n                  </Label>\n                  <Field\n                    name=\"minlength\"\n                    id=\"minlength\"\n                    className={`form-control ${errors.minlength &&\n                      touched.minlength &&\n                      \"is-invalid\"}`}\n                  />\n                  {errors.minlength && touched.minlength ? (\n                    <div className=\"invalid-tooltip mt-25\">{errors.minlength}</div>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className=\"my-3\">\n                  <Label for=\"maxlength\">\n                    Max Length (Maximum 5 Characters)\n                  </Label>\n                  <Field\n                    name=\"maxlength\"\n                    id=\"maxlength\"\n                    className={`form-control ${errors.maxlength &&\n                      touched.maxlength &&\n                      \"is-invalid\"}`}\n                  />\n                  {errors.maxlength && touched.maxlength ? (\n                    <div className=\"invalid-tooltip mt-25\">{errors.maxlength}</div>\n                  ) : null}\n                </FormGroup>\n                <Button.Ripple color=\"primary\" type=\"submit\">\n                  Submit\n                </Button.Ripple>\n              </Form>\n            )}\n          </Formik>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default FormValidation\n"]},"metadata":{},"sourceType":"module"}