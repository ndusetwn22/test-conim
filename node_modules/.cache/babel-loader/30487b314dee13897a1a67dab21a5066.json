{"ast":null,"code":"import mock from \"../mock\";\nlet data = {\n  tasks: [{\n    id: 10,\n    title: \"Refactor Code\",\n    desc: \"Pie liquorice wafer cotton candy danish. Icing topping jelly-o halvah pastry lollipop.\",\n    isImportant: true,\n    isStarred: false,\n    tags: [\"doc\", \"backend\"],\n    isCompleted: false,\n    isTrashed: false\n  }, {\n    id: 11,\n    title: \"Submit Report\",\n    desc: \"Donut tart toffee cake cookie gingerbread. Sesame snaps brownie sugar plum candy canes muffin cotton candy.\",\n    isImportant: false,\n    isStarred: true,\n    tags: [\"frontend\", \"doc\"],\n    isCompleted: false,\n    isTrashed: false\n  }, {\n    id: 15,\n    title: \"Send PPT 🎁\",\n    desc: \"Dragée gummi bears tiramisu brownie cookie. Jelly beans pudding marzipan fruitcake muffin. Wafer gummi bears lollipop pudding lollipop biscuit.\",\n    isImportant: true,\n    isStarred: true,\n    tags: [\"backend\", \"doc\"],\n    isCompleted: false,\n    isTrashed: false\n  }, {\n    id: 18,\n    title: \"Skype Tommy\",\n    desc: \"Tart oat cake sesame snaps lollipop croissant cake biscuit.\",\n    isImportant: false,\n    isStarred: false,\n    tags: [\"bug\"],\n    isCompleted: true,\n    isTrashed: false\n  }, {\n    id: 20,\n    title: \"Pick up Natasha 😁\",\n    desc: \"Sweet roll toffee dragée cotton candy jelly beans halvah gingerbread jelly-o. Ice cream bear claw sugar plum powder.\",\n    isImportant: true,\n    isStarred: true,\n    tags: [],\n    isCompleted: false,\n    isTrashed: false\n  }, {\n    id: 23,\n    title: \"Meet Jane ❤️\",\n    desc: \"Toffee sugar plum oat cake tiramisu tart bonbon gingerbread cheesecake cake. \",\n    isImportant: true,\n    isStarred: true,\n    tags: [\"frontend\", \"backend\", \"doc\"],\n    isCompleted: false,\n    isTrashed: false\n  }, {\n    id: 25,\n    title: \"Promot Products\",\n    desc: \"Gummi bears bear claw cake tiramisu gummies tiramisu apple pie chocolate jujubes. \",\n    isImportant: true,\n    isStarred: false,\n    tags: [],\n    isCompleted: false,\n    isTrashed: true\n  }, {\n    id: 28,\n    title: \"Fix Project\",\n    desc: \"Cookie fruitcake macaroon muffin apple pie chocolate bar toffee oat cake. Icing chocolate danish.\",\n    isImportant: false,\n    isStarred: false,\n    tags: [\"backend\"],\n    isCompleted: false,\n    isTrashed: true\n  }, {\n    id: 29,\n    title: \"Remove redundant files\",\n    desc: \"Brownie jelly beans tootsie roll brownie marshmallow. Sesame snaps halvah marzipan chocolate cake. Icing bear claw pie apple pie.\",\n    isImportant: false,\n    isStarred: false,\n    tags: [],\n    isCompleted: true,\n    isTrashed: true\n  }, {\n    id: 33,\n    title: \"Fix Responsiveness 💻\",\n    desc: \"Jelly topping toffee bear claw. Sesame snaps lollipop macaroon croissant cheesecake pastry cupcake.\",\n    isImportant: true,\n    isStarred: false,\n    tags: [\"frontend\"],\n    isCompleted: false,\n    isTrashed: false\n  }],\n  taskTags: [{\n    id: 5,\n    text: \"Frontend\",\n    value: \"frontend\",\n    color: \"primary\"\n  }, {\n    id: 7,\n    text: \"Backend\",\n    value: \"backend\",\n    color: \"warning\"\n  }, {\n    id: 8,\n    text: \"Doc\",\n    value: \"doc\",\n    color: \"success\"\n  }, {\n    id: 11,\n    text: \"Bug\",\n    value: \"bug\",\n    color: \"danger\"\n  }]\n}; // GET: Fetch Todos\n\nmock.onGet(\"api/apps/todo\").reply(request => {\n  const filter = request.params.filter;\n  const filteredTasks = data.tasks.filter(task => {\n    // If filter == all\n    if (filter === \"all\") return !task.isTrashed; // If filter == starred\n\n    if (filter === \"starred\") return !task.isTrashed && task.isStarred; // If filter == important\n\n    if (filter === \"important\") return !task.isTrashed && task.isImportant; // If filter == completed\n\n    if (filter === \"completed\") return !task.isTrashed && task.isCompleted; // If filter == trashed\n\n    if (filter === \"trashed\") return task.isTrashed;else return task.tags.includes(filter);\n  }).reverse();\n  return [200, JSON.parse(JSON.stringify(filteredTasks))];\n}); // POST : Add new Tasks\n\nmock.onPost(\"/api/apps/todo/new-task\").reply(request => {\n  // Get task from post data\n  let task = JSON.parse(request.data).task;\n  const length = data.tasks.length;\n  let lastIndex = 0;\n\n  if (length) {\n    lastIndex = data.tasks[length - 1].id;\n  }\n\n  task.id = lastIndex + 1;\n  data.tasks.push(task);\n  return [201, {\n    id: task.id\n  }];\n}); // Trash Todo\n\nmock.onPost(\"/api/app/todo/trash-todo\").reply(request => {\n  const todoId = request.data;\n  data.tasks = data.tasks.map(_todo => {\n    if (_todo.id === todoId) {\n      _todo.isTrashed = true;\n    }\n\n    return _todo;\n  });\n  return [200, todoId];\n});","map":{"version":3,"sources":["E:/react/rombak-react-vuexy/src/@fake-db/apps/todo.js"],"names":["mock","data","tasks","id","title","desc","isImportant","isStarred","tags","isCompleted","isTrashed","taskTags","text","value","color","onGet","reply","request","filter","params","filteredTasks","task","includes","reverse","JSON","parse","stringify","onPost","length","lastIndex","push","todoId","map","_todo"],"mappings":"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","sourcesContent":["import mock from \"../mock\"\n\nlet data = {\n  tasks: [\n    {\n      id: 10,\n      title: \"Refactor Code\",\n      desc:\n        \"Pie liquorice wafer cotton candy danish. Icing topping jelly-o halvah pastry lollipop.\",\n      isImportant: true,\n      isStarred: false,\n      tags: [\"doc\", \"backend\"],\n      isCompleted: false,\n      isTrashed: false\n    },\n    {\n      id: 11,\n      title: \"Submit Report\",\n      desc:\n        \"Donut tart toffee cake cookie gingerbread. Sesame snaps brownie sugar plum candy canes muffin cotton candy.\",\n      isImportant: false,\n      isStarred: true,\n      tags: [\"frontend\", \"doc\"],\n      isCompleted: false,\n      isTrashed: false\n    },\n    {\n      id: 15,\n      title: \"Send PPT 🎁\",\n      desc:\n        \"Dragée gummi bears tiramisu brownie cookie. Jelly beans pudding marzipan fruitcake muffin. Wafer gummi bears lollipop pudding lollipop biscuit.\",\n      isImportant: true,\n      isStarred: true,\n      tags: [\"backend\", \"doc\"],\n      isCompleted: false,\n      isTrashed: false\n    },\n    {\n      id: 18,\n      title: \"Skype Tommy\",\n      desc: \"Tart oat cake sesame snaps lollipop croissant cake biscuit.\",\n      isImportant: false,\n      isStarred: false,\n      tags: [\"bug\"],\n      isCompleted: true,\n      isTrashed: false\n    },\n    {\n      id: 20,\n      title: \"Pick up Natasha 😁\",\n      desc:\n        \"Sweet roll toffee dragée cotton candy jelly beans halvah gingerbread jelly-o. Ice cream bear claw sugar plum powder.\",\n      isImportant: true,\n      isStarred: true,\n      tags: [],\n      isCompleted: false,\n      isTrashed: false\n    },\n    {\n      id: 23,\n      title: \"Meet Jane ❤️\",\n      desc:\n        \"Toffee sugar plum oat cake tiramisu tart bonbon gingerbread cheesecake cake. \",\n      isImportant: true,\n      isStarred: true,\n      tags: [\"frontend\", \"backend\", \"doc\"],\n      isCompleted: false,\n      isTrashed: false\n    },\n    {\n      id: 25,\n      title: \"Promot Products\",\n      desc:\n        \"Gummi bears bear claw cake tiramisu gummies tiramisu apple pie chocolate jujubes. \",\n      isImportant: true,\n      isStarred: false,\n      tags: [],\n      isCompleted: false,\n      isTrashed: true\n    },\n    {\n      id: 28,\n      title: \"Fix Project\",\n      desc:\n        \"Cookie fruitcake macaroon muffin apple pie chocolate bar toffee oat cake. Icing chocolate danish.\",\n      isImportant: false,\n      isStarred: false,\n      tags: [\"backend\"],\n      isCompleted: false,\n      isTrashed: true\n    },\n    {\n      id: 29,\n      title: \"Remove redundant files\",\n      desc:\n        \"Brownie jelly beans tootsie roll brownie marshmallow. Sesame snaps halvah marzipan chocolate cake. Icing bear claw pie apple pie.\",\n      isImportant: false,\n      isStarred: false,\n      tags: [],\n      isCompleted: true,\n      isTrashed: true\n    },\n    {\n      id: 33,\n      title: \"Fix Responsiveness 💻\",\n      desc:\n        \"Jelly topping toffee bear claw. Sesame snaps lollipop macaroon croissant cheesecake pastry cupcake.\",\n      isImportant: true,\n      isStarred: false,\n      tags: [\"frontend\"],\n      isCompleted: false,\n      isTrashed: false\n    }\n  ],\n  taskTags: [\n    { id: 5, text: \"Frontend\", value: \"frontend\", color: \"primary\" },\n    { id: 7, text: \"Backend\", value: \"backend\", color: \"warning\" },\n    { id: 8, text: \"Doc\", value: \"doc\", color: \"success\" },\n    { id: 11, text: \"Bug\", value: \"bug\", color: \"danger\" }\n  ]\n}\n\n// GET: Fetch Todos\nmock.onGet(\"api/apps/todo\").reply(request => {\n  const filter = request.params.filter\n\n  const filteredTasks = data.tasks\n    .filter(task => {\n      // If filter == all\n      if (filter === \"all\") return !task.isTrashed\n\n      // If filter == starred\n      if (filter === \"starred\") return !task.isTrashed && task.isStarred\n\n      // If filter == important\n      if (filter === \"important\") return !task.isTrashed && task.isImportant\n\n      // If filter == completed\n      if (filter === \"completed\") return !task.isTrashed && task.isCompleted\n\n      // If filter == trashed\n      if (filter === \"trashed\") return task.isTrashed\n      else return task.tags.includes(filter)\n    })\n    .reverse()\n\n  return [200, JSON.parse(JSON.stringify(filteredTasks))]\n})\n\n// POST : Add new Tasks\nmock.onPost(\"/api/apps/todo/new-task\").reply(request => {\n  // Get task from post data\n  let task = JSON.parse(request.data).task\n\n  const length = data.tasks.length\n  let lastIndex = 0\n  if (length) {\n    lastIndex = data.tasks[length - 1].id\n  }\n  task.id = lastIndex + 1\n\n  data.tasks.push(task)\n\n  return [201, { id: task.id }]\n})\n\n\n// Trash Todo\nmock.onPost(\"/api/app/todo/trash-todo\").reply(request => {\n  const todoId = request.data\n  data.tasks = data.tasks.map(_todo => {\n    if (_todo.id === todoId) {\n      _todo.isTrashed = true\n    }\n    return _todo\n  })\n  return [200, todoId]\n})\n"]},"metadata":{},"sourceType":"module"}