{"ast":null,"code":"(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n    return;\n  }\n  /**\n   * @param {string} selector\n   * @param {ParentNode} [container]\n   * @returns {HTMLElement[]}\n   */\n\n\n  function $$(selector, container) {\n    return Array.prototype.slice.call((container || document).querySelectorAll(selector));\n  }\n  /**\n   * Returns whether the given element has the given class.\n   *\n   * @param {Element} element\n   * @param {string} className\n   * @returns {boolean}\n   */\n\n\n  function hasClass(element, className) {\n    className = \" \" + className + \" \";\n    return (\" \" + element.className + \" \").replace(/[\\n\\t]/g, \" \").indexOf(className) > -1;\n  }\n  /**\n   * Calls the given function.\n   *\n   * @param {() => any} func\n   * @returns {void}\n   */\n\n\n  function callFunction(func) {\n    func();\n  } // Some browsers round the line-height, others don't.\n  // We need to test for it to position the elements properly.\n\n\n  var isLineHeightRounded = function () {\n    var res;\n    return function () {\n      if (typeof res === 'undefined') {\n        var d = document.createElement('div');\n        d.style.fontSize = '13px';\n        d.style.lineHeight = '1.5';\n        d.style.padding = '0';\n        d.style.border = '0';\n        d.innerHTML = '&nbsp;<br />&nbsp;';\n        document.body.appendChild(d); // Browsers that round the line-height should have offsetHeight === 38\n        // The others should have 39.\n\n        res = d.offsetHeight === 38;\n        document.body.removeChild(d);\n      }\n\n      return res;\n    };\n  }();\n  /**\n   * Highlights the lines of the given pre.\n   *\n   * This function is split into a DOM measuring and mutate phase to improve performance.\n   * The returned function mutates the DOM when called.\n   *\n   * @param {HTMLElement} pre\n   * @param {string} [lines]\n   * @param {string} [classes='']\n   * @returns {() => void}\n   */\n\n\n  function highlightLines(pre, lines, classes) {\n    lines = typeof lines === 'string' ? lines : pre.getAttribute('data-line');\n    var ranges = lines.replace(/\\s+/g, '').split(',').filter(Boolean);\n    var offset = +pre.getAttribute('data-line-offset') || 0;\n    var parseMethod = isLineHeightRounded() ? parseInt : parseFloat;\n    var lineHeight = parseMethod(getComputedStyle(pre).lineHeight);\n    var hasLineNumbers = hasClass(pre, 'line-numbers');\n    var parentElement = hasLineNumbers ? pre : pre.querySelector('code') || pre;\n    var mutateActions =\n    /** @type {(() => void)[]} */\n    [];\n    ranges.forEach(function (currentRange) {\n      var range = currentRange.split('-');\n      var start = +range[0];\n      var end = +range[1] || start;\n      /** @type {HTMLElement} */\n\n      var line = pre.querySelector('.line-highlight[data-range=\"' + currentRange + '\"]') || document.createElement('div');\n      mutateActions.push(function () {\n        line.setAttribute('aria-hidden', 'true');\n        line.setAttribute('data-range', currentRange);\n        line.className = (classes || '') + ' line-highlight';\n      }); // if the line-numbers plugin is enabled, then there is no reason for this plugin to display the line numbers\n\n      if (hasLineNumbers && Prism.plugins.lineNumbers) {\n        var startNode = Prism.plugins.lineNumbers.getLine(pre, start);\n        var endNode = Prism.plugins.lineNumbers.getLine(pre, end);\n\n        if (startNode) {\n          var top = startNode.offsetTop + 'px';\n          mutateActions.push(function () {\n            line.style.top = top;\n          });\n        }\n\n        if (endNode) {\n          var height = endNode.offsetTop - startNode.offsetTop + endNode.offsetHeight + 'px';\n          mutateActions.push(function () {\n            line.style.height = height;\n          });\n        }\n      } else {\n        mutateActions.push(function () {\n          line.setAttribute('data-start', start);\n\n          if (end > start) {\n            line.setAttribute('data-end', end);\n          }\n\n          line.style.top = (start - offset - 1) * lineHeight + 'px';\n          line.textContent = new Array(end - start + 2).join(' \\n');\n        });\n      }\n\n      mutateActions.push(function () {\n        // allow this to play nicely with the line-numbers plugin\n        // need to attack to pre as when line-numbers is enabled, the code tag is relatively which screws up the positioning\n        parentElement.appendChild(line);\n      });\n    });\n    var id = pre.id;\n\n    if (hasLineNumbers && id) {\n      // This implements linkable line numbers. Linkable line numbers use Line Highlight to create a link to a\n      // specific line. For this to work, the pre element has to:\n      //  1) have line numbers,\n      //  2) have the `linkable-line-numbers` class or an ascendant that has that class, and\n      //  3) have an id.\n      var linkableLineNumbersClass = 'linkable-line-numbers';\n      var linkableLineNumbers = false;\n      var node = pre;\n\n      while (node) {\n        if (hasClass(node, linkableLineNumbersClass)) {\n          linkableLineNumbers = true;\n          break;\n        }\n\n        node = node.parentElement;\n      }\n\n      if (linkableLineNumbers) {\n        if (!hasClass(pre, linkableLineNumbersClass)) {\n          // add class to pre\n          mutateActions.push(function () {\n            pre.className = (pre.className + ' ' + linkableLineNumbersClass).trim();\n          });\n        }\n\n        var start = parseInt(pre.getAttribute('data-start') || '1'); // iterate all line number spans\n\n        $$('.line-numbers-rows > span', pre).forEach(function (lineSpan, i) {\n          var lineNumber = i + start;\n\n          lineSpan.onclick = function () {\n            var hash = id + '.' + lineNumber; // this will prevent scrolling since the span is obviously in view\n\n            scrollIntoView = false;\n            location.hash = hash;\n            setTimeout(function () {\n              scrollIntoView = true;\n            }, 1);\n          };\n        });\n      }\n    }\n\n    return function () {\n      mutateActions.forEach(callFunction);\n    };\n  }\n\n  var scrollIntoView = true;\n\n  function applyHash() {\n    var hash = location.hash.slice(1); // Remove pre-existing temporary lines\n\n    $$('.temporary.line-highlight').forEach(function (line) {\n      line.parentNode.removeChild(line);\n    });\n    var range = (hash.match(/\\.([\\d,-]+)$/) || [, ''])[1];\n\n    if (!range || document.getElementById(hash)) {\n      return;\n    }\n\n    var id = hash.slice(0, hash.lastIndexOf('.')),\n        pre = document.getElementById(id);\n\n    if (!pre) {\n      return;\n    }\n\n    if (!pre.hasAttribute('data-line')) {\n      pre.setAttribute('data-line', '');\n    }\n\n    var mutateDom = highlightLines(pre, range, 'temporary ');\n    mutateDom();\n\n    if (scrollIntoView) {\n      document.querySelector('.temporary.line-highlight').scrollIntoView();\n    }\n  }\n\n  var fakeTimer = 0; // Hack to limit the number of times applyHash() runs\n\n  Prism.hooks.add('before-sanity-check', function (env) {\n    var pre = env.element.parentNode;\n    var lines = pre && pre.getAttribute('data-line');\n\n    if (!pre || !lines || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n    /*\n     * Cleanup for other plugins (e.g. autoloader).\n     *\n     * Sometimes <code> blocks are highlighted multiple times. It is necessary\n     * to cleanup any left-over tags, because the whitespace inside of the <div>\n     * tags change the content of the <code> tag.\n     */\n\n\n    var num = 0;\n    $$('.line-highlight', pre).forEach(function (line) {\n      num += line.textContent.length;\n      line.parentNode.removeChild(line);\n    }); // Remove extra whitespace\n\n    if (num && /^( \\n)+$/.test(env.code.slice(-num))) {\n      env.code = env.code.slice(0, -num);\n    }\n  });\n  Prism.hooks.add('complete', function completeHook(env) {\n    var pre = env.element.parentNode;\n    var lines = pre && pre.getAttribute('data-line');\n\n    if (!pre || !lines || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n\n    clearTimeout(fakeTimer);\n    var hasLineNumbers = Prism.plugins.lineNumbers;\n    var isLineNumbersLoaded = env.plugins && env.plugins.lineNumbers;\n\n    if (hasClass(pre, 'line-numbers') && hasLineNumbers && !isLineNumbersLoaded) {\n      Prism.hooks.add('line-numbers', completeHook);\n    } else {\n      var mutateDom = highlightLines(pre, lines);\n      mutateDom();\n      fakeTimer = setTimeout(applyHash, 1);\n    }\n  });\n  window.addEventListener('hashchange', applyHash);\n  window.addEventListener('resize', function () {\n    var actions = $$('pre[data-line]').map(function (pre) {\n      return highlightLines(pre);\n    });\n    actions.forEach(callFunction);\n  });\n})();","map":{"version":3,"sources":["E:/react/rombak-react-vuexy/node_modules/prismjs/plugins/line-highlight/prism-line-highlight.js"],"names":["self","Prism","document","querySelector","$$","selector","container","Array","prototype","slice","call","querySelectorAll","hasClass","element","className","replace","indexOf","callFunction","func","isLineHeightRounded","res","d","createElement","style","fontSize","lineHeight","padding","border","innerHTML","body","appendChild","offsetHeight","removeChild","highlightLines","pre","lines","classes","getAttribute","ranges","split","filter","Boolean","offset","parseMethod","parseInt","parseFloat","getComputedStyle","hasLineNumbers","parentElement","mutateActions","forEach","currentRange","range","start","end","line","push","setAttribute","plugins","lineNumbers","startNode","getLine","endNode","top","offsetTop","height","textContent","join","id","linkableLineNumbersClass","linkableLineNumbers","node","trim","lineSpan","i","lineNumber","onclick","hash","scrollIntoView","location","setTimeout","applyHash","parentNode","match","getElementById","lastIndexOf","hasAttribute","mutateDom","fakeTimer","hooks","add","env","test","nodeName","num","length","code","completeHook","clearTimeout","isLineNumbersLoaded","window","addEventListener","actions","map"],"mappings":"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","sourcesContent":["(function () {\n\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\t/**\n\t * @param {string} selector\n\t * @param {ParentNode} [container]\n\t * @returns {HTMLElement[]}\n\t */\n\tfunction $$(selector, container) {\n\t\treturn Array.prototype.slice.call((container || document).querySelectorAll(selector));\n\t}\n\n\t/**\n\t * Returns whether the given element has the given class.\n\t *\n\t * @param {Element} element\n\t * @param {string} className\n\t * @returns {boolean}\n\t */\n\tfunction hasClass(element, className) {\n\t\tclassName = \" \" + className + \" \";\n\t\treturn (\" \" + element.className + \" \").replace(/[\\n\\t]/g, \" \").indexOf(className) > -1\n\t}\n\n\t/**\n\t * Calls the given function.\n\t *\n\t * @param {() => any} func\n\t * @returns {void}\n\t */\n\tfunction callFunction(func) {\n\t\tfunc();\n\t}\n\n\t// Some browsers round the line-height, others don't.\n\t// We need to test for it to position the elements properly.\n\tvar isLineHeightRounded = (function () {\n\t\tvar res;\n\t\treturn function () {\n\t\t\tif (typeof res === 'undefined') {\n\t\t\t\tvar d = document.createElement('div');\n\t\t\t\td.style.fontSize = '13px';\n\t\t\t\td.style.lineHeight = '1.5';\n\t\t\t\td.style.padding = '0';\n\t\t\t\td.style.border = '0';\n\t\t\t\td.innerHTML = '&nbsp;<br />&nbsp;';\n\t\t\t\tdocument.body.appendChild(d);\n\t\t\t\t// Browsers that round the line-height should have offsetHeight === 38\n\t\t\t\t// The others should have 39.\n\t\t\t\tres = d.offsetHeight === 38;\n\t\t\t\tdocument.body.removeChild(d);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}());\n\n\t/**\n\t * Highlights the lines of the given pre.\n\t *\n\t * This function is split into a DOM measuring and mutate phase to improve performance.\n\t * The returned function mutates the DOM when called.\n\t *\n\t * @param {HTMLElement} pre\n\t * @param {string} [lines]\n\t * @param {string} [classes='']\n\t * @returns {() => void}\n\t */\n\tfunction highlightLines(pre, lines, classes) {\n\t\tlines = typeof lines === 'string' ? lines : pre.getAttribute('data-line');\n\n\t\tvar ranges = lines.replace(/\\s+/g, '').split(',').filter(Boolean);\n\t\tvar offset = +pre.getAttribute('data-line-offset') || 0;\n\n\t\tvar parseMethod = isLineHeightRounded() ? parseInt : parseFloat;\n\t\tvar lineHeight = parseMethod(getComputedStyle(pre).lineHeight);\n\t\tvar hasLineNumbers = hasClass(pre, 'line-numbers');\n\t\tvar parentElement = hasLineNumbers ? pre : pre.querySelector('code') || pre;\n\t\tvar mutateActions = /** @type {(() => void)[]} */ ([]);\n\n\t\tranges.forEach(function (currentRange) {\n\t\t\tvar range = currentRange.split('-');\n\n\t\t\tvar start = +range[0];\n\t\t\tvar end = +range[1] || start;\n\n\t\t\t/** @type {HTMLElement} */\n\t\t\tvar line = pre.querySelector('.line-highlight[data-range=\"' + currentRange + '\"]') || document.createElement('div');\n\n\t\t\tmutateActions.push(function () {\n\t\t\t\tline.setAttribute('aria-hidden', 'true');\n\t\t\t\tline.setAttribute('data-range', currentRange);\n\t\t\t\tline.className = (classes || '') + ' line-highlight';\n\t\t\t});\n\n\t\t\t// if the line-numbers plugin is enabled, then there is no reason for this plugin to display the line numbers\n\t\t\tif (hasLineNumbers && Prism.plugins.lineNumbers) {\n\t\t\t\tvar startNode = Prism.plugins.lineNumbers.getLine(pre, start);\n\t\t\t\tvar endNode = Prism.plugins.lineNumbers.getLine(pre, end);\n\n\t\t\t\tif (startNode) {\n\t\t\t\t\tvar top = startNode.offsetTop + 'px';\n\t\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\t\tline.style.top = top;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (endNode) {\n\t\t\t\t\tvar height = (endNode.offsetTop - startNode.offsetTop) + endNode.offsetHeight + 'px';\n\t\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\t\tline.style.height = height;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\tline.setAttribute('data-start', start);\n\n\t\t\t\t\tif (end > start) {\n\t\t\t\t\t\tline.setAttribute('data-end', end);\n\t\t\t\t\t}\n\n\t\t\t\t\tline.style.top = (start - offset - 1) * lineHeight + 'px';\n\n\t\t\t\t\tline.textContent = new Array(end - start + 2).join(' \\n');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tmutateActions.push(function () {\n\t\t\t\t// allow this to play nicely with the line-numbers plugin\n\t\t\t\t// need to attack to pre as when line-numbers is enabled, the code tag is relatively which screws up the positioning\n\t\t\t\tparentElement.appendChild(line);\n\t\t\t});\n\t\t});\n\n\t\tvar id = pre.id;\n\t\tif (hasLineNumbers && id) {\n\t\t\t// This implements linkable line numbers. Linkable line numbers use Line Highlight to create a link to a\n\t\t\t// specific line. For this to work, the pre element has to:\n\t\t\t//  1) have line numbers,\n\t\t\t//  2) have the `linkable-line-numbers` class or an ascendant that has that class, and\n\t\t\t//  3) have an id.\n\n\t\t\tvar linkableLineNumbersClass = 'linkable-line-numbers';\n\t\t\tvar linkableLineNumbers = false;\n\t\t\tvar node = pre;\n\t\t\twhile (node) {\n\t\t\t\tif (hasClass(node, linkableLineNumbersClass)) {\n\t\t\t\t\tlinkableLineNumbers = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnode = node.parentElement;\n\t\t\t}\n\n\t\t\tif (linkableLineNumbers) {\n\t\t\t\tif (!hasClass(pre, linkableLineNumbersClass)) {\n\t\t\t\t\t// add class to pre\n\t\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\t\tpre.className = (pre.className + ' ' + linkableLineNumbersClass).trim();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tvar start = parseInt(pre.getAttribute('data-start') || '1');\n\n\t\t\t\t// iterate all line number spans\n\t\t\t\t$$('.line-numbers-rows > span', pre).forEach(function (lineSpan, i) {\n\t\t\t\t\tvar lineNumber = i + start;\n\t\t\t\t\tlineSpan.onclick = function () {\n\t\t\t\t\t\tvar hash = id + '.' + lineNumber;\n\n\t\t\t\t\t\t// this will prevent scrolling since the span is obviously in view\n\t\t\t\t\t\tscrollIntoView = false;\n\t\t\t\t\t\tlocation.hash = hash;\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\tscrollIntoView = true;\n\t\t\t\t\t\t}, 1);\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn function () {\n\t\t\tmutateActions.forEach(callFunction);\n\t\t};\n\t}\n\n\tvar scrollIntoView = true;\n\tfunction applyHash() {\n\t\tvar hash = location.hash.slice(1);\n\n\t\t// Remove pre-existing temporary lines\n\t\t$$('.temporary.line-highlight').forEach(function (line) {\n\t\t\tline.parentNode.removeChild(line);\n\t\t});\n\n\t\tvar range = (hash.match(/\\.([\\d,-]+)$/) || [, ''])[1];\n\n\t\tif (!range || document.getElementById(hash)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar id = hash.slice(0, hash.lastIndexOf('.')),\n\t\t\tpre = document.getElementById(id);\n\n\t\tif (!pre) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!pre.hasAttribute('data-line')) {\n\t\t\tpre.setAttribute('data-line', '');\n\t\t}\n\n\t\tvar mutateDom = highlightLines(pre, range, 'temporary ');\n\t\tmutateDom();\n\n\t\tif (scrollIntoView) {\n\t\t\tdocument.querySelector('.temporary.line-highlight').scrollIntoView();\n\t\t}\n\t}\n\n\tvar fakeTimer = 0; // Hack to limit the number of times applyHash() runs\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = env.element.parentNode;\n\t\tvar lines = pre && pre.getAttribute('data-line');\n\n\t\tif (!pre || !lines || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * Cleanup for other plugins (e.g. autoloader).\n\t\t *\n\t\t * Sometimes <code> blocks are highlighted multiple times. It is necessary\n\t\t * to cleanup any left-over tags, because the whitespace inside of the <div>\n\t\t * tags change the content of the <code> tag.\n\t\t */\n\t\tvar num = 0;\n\t\t$$('.line-highlight', pre).forEach(function (line) {\n\t\t\tnum += line.textContent.length;\n\t\t\tline.parentNode.removeChild(line);\n\t\t});\n\t\t// Remove extra whitespace\n\t\tif (num && /^( \\n)+$/.test(env.code.slice(-num))) {\n\t\t\tenv.code = env.code.slice(0, -num);\n\t\t}\n\t});\n\n\tPrism.hooks.add('complete', function completeHook(env) {\n\t\tvar pre = env.element.parentNode;\n\t\tvar lines = pre && pre.getAttribute('data-line');\n\n\t\tif (!pre || !lines || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearTimeout(fakeTimer);\n\n\t\tvar hasLineNumbers = Prism.plugins.lineNumbers;\n\t\tvar isLineNumbersLoaded = env.plugins && env.plugins.lineNumbers;\n\n\t\tif (hasClass(pre, 'line-numbers') && hasLineNumbers && !isLineNumbersLoaded) {\n\t\t\tPrism.hooks.add('line-numbers', completeHook);\n\t\t} else {\n\t\t\tvar mutateDom = highlightLines(pre, lines);\n\t\t\tmutateDom();\n\t\t\tfakeTimer = setTimeout(applyHash, 1);\n\t\t}\n\t});\n\n\twindow.addEventListener('hashchange', applyHash);\n\twindow.addEventListener('resize', function () {\n\t\tvar actions = $$('pre[data-line]').map(function (pre) {\n\t\t\treturn highlightLines(pre);\n\t\t});\n\t\tactions.forEach(callFunction);\n\t});\n\n})();\n"]},"metadata":{},"sourceType":"script"}