{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/rombak-react-vuexy2/src/components/@vuexy/wizard/WizardComponent.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Nav, NavItem, NavLink, TabContent, TabPane, Form, Button } from \"reactstrap\";\nimport { AvForm } from \"availity-reactstrap-validation\";\n\nclass VuexyWizard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: this.props.activeStep ? this.props.activeStep : 0,\n      errors: [],\n      values: []\n    };\n\n    this.handleNextStep = (index, total, errors = []) => {\n      let activeStep = this.state.activeStep;\n      let validation = this.props.validate;\n\n      if (!validation) {\n        if (activeStep <= index && activeStep !== total) {\n          this.setState({\n            activeStep: activeStep + 1\n          });\n        }\n      } else {\n        if (errors.length === 0 && activeStep <= index && activeStep !== total) {\n          this.setState({\n            activeStep: activeStep + 1\n          });\n        } else if (errors.length && this.props.onValidationError) {\n          this.props.onValidationError(this.state.errors);\n        } else {\n          return;\n        }\n      }\n    };\n\n    this.handlePreviousStep = index => {\n      let activeStep = this.state.activeStep;\n      if (activeStep >= index) this.setState({\n        activeStep: activeStep - 1\n      });\n    };\n\n    this.handleEnableAllSteps = index => {\n      if (this.props.enableAllSteps) {\n        this.setState({\n          activeStep: index\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      if (this.props.steps.length - 1 === this.state.activeStep && this.props.onFinish) {\n        this.props.onFinish(e);\n      }\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.activeStep) {\n      if (props.activeStep !== state.activeStep) {\n        if (props.validate) {\n          if (state.errors.length === 0 && state.submitted) return {\n            activeStep: props.activeStep\n          };\n        } else return {\n          activeStep: props.activeStep\n        };\n      }\n    }\n\n    return null;\n  }\n\n  render() {\n    let FormTag = this.props.validate ? AvForm : Form;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      className: `vx-wizard ${this.props.className ? this.props.className : \"\"}`,\n      tabs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, this.props.steps.map((item, i) => {\n      return /*#__PURE__*/React.createElement(NavItem, {\n        className: \"step-wrapper\",\n        key: i,\n        onClick: () => this.handleEnableAllSteps(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames(`step step-${i}`, {\n          active: this.state.activeStep === i ? true : false,\n          done: i < this.state.activeStep\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"step-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      }, item.title)));\n    })), /*#__PURE__*/React.createElement(TabContent, {\n      className: `vx-wizard-content ${this.props.tabPaneClass ? this.props.tabPaneClass : \"\"}`,\n      activeTab: this.state.activeStep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, this.props.steps.map((item, i) => {\n      return /*#__PURE__*/React.createElement(TabPane, {\n        className: `step-content step-${i}-content`,\n        key: i,\n        tabId: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormTag, {\n        className: \"form-horizontal\",\n        onSubmit: (e, errors, values) => {\n          this.setState({\n            errors,\n            values\n          });\n          if (!this.props.validate) e.preventDefault();\n          this.handleNextStep(i, this.props.steps.length - 1, errors);\n          this.handleSubmit(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, item.content, this.props.pagination ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wizard-actions d-flex justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        disabled: this.state.activeStep === 0,\n        onClick: () => this.handlePreviousStep(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 23\n        }\n      }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 23\n        }\n      }, this.props.steps.length - 1 === i && !this.props.finishBtnText ? \"Submit\" : this.props.steps.length - 1 === i && this.props.finishBtnText ? this.props.finishBtnText : \"Next\")) : null));\n    })));\n  }\n\n}\n\nVuexyWizard.propTypes = {\n  className: PropTypes.string,\n  steps: PropTypes.array.isRequired,\n  validate: PropTypes.bool,\n  enableAllSteps: PropTypes.bool,\n  finishBtnText: PropTypes.string,\n  onFinish: PropTypes.func,\n  pagination: PropTypes.bool,\n  onValidationError: PropTypes.func,\n  activeStep: PropTypes.number\n};\nVuexyWizard.defaultProps = {\n  pagination: true\n};\nexport default VuexyWizard;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/rombak-react-vuexy2/src/components/@vuexy/wizard/WizardComponent.js"],"names":["React","PropTypes","classnames","Nav","NavItem","NavLink","TabContent","TabPane","Form","Button","AvForm","VuexyWizard","Component","state","activeStep","props","errors","values","handleNextStep","index","total","validation","validate","setState","length","onValidationError","handlePreviousStep","handleEnableAllSteps","enableAllSteps","handleSubmit","e","steps","onFinish","getDerivedStateFromProps","submitted","render","FormTag","className","map","item","i","active","done","title","tabPaneClass","preventDefault","content","pagination","finishBtnText","propTypes","string","array","isRequired","bool","func","number","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classnames from \"classnames\"\nimport {\n  Nav,\n  NavItem,\n  NavLink,\n  TabContent,\n  TabPane,\n  Form,\n  Button\n} from \"reactstrap\"\nimport { AvForm } from \"availity-reactstrap-validation\"\n\nclass VuexyWizard extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.activeStep) {\n      if (props.activeStep !== state.activeStep) {\n        if (props.validate) {\n          if (state.errors.length === 0 && state.submitted)\n            return { activeStep: props.activeStep }\n        } else return { activeStep: props.activeStep }\n      }\n    }\n    return null\n  }\n\n  state = {\n    activeStep: this.props.activeStep ? this.props.activeStep : 0,\n    errors: [],\n    values: []\n  }\n\n  handleNextStep = (index, total, errors = []) => {\n    let activeStep = this.state.activeStep\n    let validation = this.props.validate\n\n    if (!validation) {\n      if (activeStep <= index && activeStep !== total) {\n        this.setState({\n          activeStep: activeStep + 1\n        })\n      }\n    } else {\n      if (errors.length === 0 && activeStep <= index && activeStep !== total) {\n        this.setState({\n          activeStep: activeStep + 1\n        })\n      } else if (errors.length && this.props.onValidationError) {\n        this.props.onValidationError(this.state.errors)\n      } else {\n        return\n      }\n    }\n  }\n\n  handlePreviousStep = index => {\n    let activeStep = this.state.activeStep\n    if (activeStep >= index)\n      this.setState({\n        activeStep: activeStep - 1\n      })\n  }\n\n  handleEnableAllSteps = index => {\n    if (this.props.enableAllSteps) {\n      this.setState({ activeStep: index })\n    }\n  }\n\n  handleSubmit = e => {\n    if (\n      this.props.steps.length - 1 === this.state.activeStep &&\n      this.props.onFinish\n    ) {\n      this.props.onFinish(e)\n    }\n  }\n\n  render() {\n    let FormTag = this.props.validate ? AvForm : Form\n\n    return (\n      <React.Fragment>\n        <Nav\n          className={`vx-wizard ${\n            this.props.className ? this.props.className : \"\"\n          }`}\n          tabs>\n          {this.props.steps.map((item, i) => {\n            return (\n              <NavItem\n                className=\"step-wrapper\"\n                key={i}\n                onClick={() => this.handleEnableAllSteps(i)}>\n                <NavLink\n                  className={classnames(`step step-${i}`, {\n                    active: this.state.activeStep === i ? true : false,\n                    done: i < this.state.activeStep\n                  })}>\n                  <span className=\"step-text\">{item.title}</span>\n                </NavLink>\n              </NavItem>\n            )\n          })}\n        </Nav>\n        <TabContent\n          className={`vx-wizard-content ${\n            this.props.tabPaneClass ? this.props.tabPaneClass : \"\"\n          }`}\n          activeTab={this.state.activeStep}>\n          {this.props.steps.map((item, i) => {\n            return (\n              <TabPane\n                className={`step-content step-${i}-content`}\n                key={i}\n                tabId={i}>\n                <FormTag\n                  className=\"form-horizontal\"\n                  onSubmit={(e, errors, values) => {\n                    this.setState({ errors, values })\n                    if (!this.props.validate) e.preventDefault()\n                    this.handleNextStep(i, this.props.steps.length - 1, errors)\n                    this.handleSubmit(e)\n                  }}>\n                  {item.content}\n                  {this.props.pagination ? (\n                    <div className=\"wizard-actions d-flex justify-content-between\">\n                      <Button\n                        color=\"primary\"\n                        disabled={this.state.activeStep === 0}\n                        onClick={() => this.handlePreviousStep(i)}>\n                        Prev\n                      </Button>\n                      <Button type=\"submit\" color=\"primary\">\n                        {this.props.steps.length - 1 === i &&\n                        !this.props.finishBtnText\n                          ? \"Submit\"\n                          : this.props.steps.length - 1 === i &&\n                            this.props.finishBtnText\n                          ? this.props.finishBtnText\n                          : \"Next\"}\n                      </Button>\n                    </div>\n                  ) : null}\n                </FormTag>\n              </TabPane>\n            )\n          })}\n        </TabContent>\n      </React.Fragment>\n    )\n  }\n}\n\nVuexyWizard.propTypes = {\n  className: PropTypes.string,\n  steps: PropTypes.array.isRequired,\n  validate: PropTypes.bool,\n  enableAllSteps: PropTypes.bool,\n  finishBtnText: PropTypes.string,\n  onFinish: PropTypes.func,\n  pagination: PropTypes.bool,\n  onValidationError: PropTypes.func,\n  activeStep: PropTypes.number\n}\n\nVuexyWizard.defaultProps = {\n  pagination: true\n}\n\nexport default VuexyWizard\n"]},"metadata":{},"sourceType":"module"}