{"ast":null,"code":"import React from\"react\";export var defaultAlert=/*#__PURE__*/React.createElement(\"pre\",{className:\"language-jsx\"},/*#__PURE__*/React.createElement(\"code\",{className:\"language-jsx\"},\"\\n  import React from \\\"react\\\"\\n  import {Alert} from \\\"reactstrap\\\"\\n\\n  class DefaultAlert extends React.Component {\\n    render() {\\n      return  <Alert color=\\\"primary\\\">This is a primary alert \\u2014 check it out!</Alert>\\n    }\\n  }\\n  export default DefaultAlert\\n  \"));export var alertTitle=/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-jsx\"},\"\\n import React from \\\"react\\\"\\n import {Alert} from \\\"reactstrap\\\"\\n\\n class AlertTitle extends React.Component {\\n  render() {\\n    return  (\\n      <Alert color=\\\"warning\\\">\\n        <div className=\\\"alert-heading\\\">\\n        Lorem ipsum dolor sit amet\\n        </div>\\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus, laborum!.\\n      </Alert>\\n    )\\n  }\\n}\\nexport default AlertTitle\\n\\n\"));export var alertColors=/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-jsx\"},\"\\nimport React from \\\"react\\\"\\nimport {Alert} from \\\"reactstrap\\\"\\n\\nclass AlertColors extends React.Component {\\n render() {\\n   return  (\\n    <Alert color=\\\"primary\\\">\\n      <div className=\\\"alert-heading\\\">Primary</div>\\n      Tootsie roll lollipop lollipop icing. Wafer cookie danish\\n      macaroon. Liquorice fruitcake apple pie I love cupcake\\n      cupcake.\\n    </Alert>\\n\\n    <Alert color=\\\"success\\\">\\n      <div className=\\\"alert-heading\\\">Success</div>\\n      Tootsie roll lollipop lollipop icing. Wafer cookie danish\\n      macaroon. Liquorice fruitcake apple pie I love cupcake\\n      cupcake.\\n    </Alert>\\n\\n    <Alert color=\\\"danger\\\">\\n      <div className=\\\"alert-heading\\\">Danger</div>\\n      Tootsie roll lollipop lollipop icing. Wafer cookie danish\\n      macaroon. Liquorice fruitcake apple pie I love cupcake\\n      cupcake.\\n    </Alert>\\n\\n    <Alert color=\\\"warning\\\">\\n      <div className=\\\"alert-heading\\\">Warning</div>\\n      Tootsie roll lollipop lollipop icing. Wafer cookie danish\\n      macaroon. Liquorice fruitcake apple pie I love cupcake\\n      cupcake.\\n    </Alert>\\n\\n    <Alert color=\\\"dark\\\">\\n      <div className=\\\"alert-heading\\\">Dark</div>\\n      Tootsie roll lollipop lollipop icing. Wafer cookie danish\\n      macaroon. Liquorice fruitcake apple pie I love cupcake\\n      cupcake.\\n    </Alert>\\n\\n    <Alert color=\\\"info\\\">\\n      <div className=\\\"alert-heading\\\">Info</div>\\n      Tootsie roll lollipop lollipop icing. Wafer cookie danish\\n      macaroon. Liquorice fruitcake apple pie I love cupcake\\n      cupcake.\\n    </Alert>\\n\\n    <Alert color=\\\"light\\\">\\n      <div className=\\\"alert-heading\\\">Light</div>\\n      Tootsie roll lollipop lollipop icing. Wafer cookie danish\\n      macaroon. Liquorice fruitcake apple pie I love cupcake\\n      cupcake.\\n    </Alert>\\n   )\\n }\\n}\\nexport default AlertColors\\n\"));export var alertDismissable=/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-jsx\"},\"\\n  import React from \\\"react\\\"\\n  import {Alert} from \\\"reactstrap\\\"\\n\\n  class AlertDismissable extends React.Component {\\n    render() {\\n\\n      state = {\\n        activeTab: \\\"1\\\",\\n        visible: true\\n      }\\n\\n      dismissAlert = () => {\\n        this.setState({ visible: false })\\n      }\\n      return (\\n      <Alert color=\\\"info\\\" isOpen={this.state.visible} toggle={this.dismissAlert}>\\n        Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I\\n        love wafer I love wafer.\\n      </Alert>\\n      )\\n    }\\n  }\\n  export default AlertDismissable\\n    \"));export var alertUncontrolled=/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-jsx\"},\"\\n  import React from \\\"react\\\"\\n  import {UncontrolledAlert} from \\\"reactstrap\\\"\\n\\n  class AlertUncontrolled extends React.Component {\\n    render(){\\n      return(\\n      <UncontrolledAlert color=\\\"danger\\\">\\n        Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I\\n        love wafer.\\n      </UncontrolledAlert>\\n      )\\n    }\\n  }\\n  export default AlertUncontrolled\\n      \"));export var alertIcon=/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-jsx\"},\"\\n  import React from \\\"react\\\"\\n  import {Alert} from \\\"reactstrap\\\"\\n\\n  class AlertIcon extends React.Component {\\n    render(){\\n      return(\\n      <Alert color=\\\"primary\\\">\\n        <Star size={10} /> Chupa chups topping bonbon. Jelly-o toffee\\n        I love. Sweet I love wafer I love wafer.\\n      </Alert>\\n      )\\n    }\\n  }\\n  export default AlertIcon\\n        \"));export var alertExample=/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-jsx\"},\"\\n  import React from \\\"react\\\"\\n  import {Alert} from \\\"reactstrap\\\"\\n\\n  class AlertExample extends React.Component {\\n\\n    state = {\\n      visible: true\\n    }\\n\\n    handleInput = e => {\\n      this.setState({ inputTerm: e.target.value })\\n      if (isNaN(this.state.inputTerm)) {\\n        this.setState({ visible: true })\\n      } else {\\n        this.setState({ visible: false })\\n      }\\n    }\\n\\n    render(){\\n      return(\\n        <React.Fragment>\\n          <FormGroup>\\n          <Label htmlFor=\\\"numbers\\\">Enter numbers only</Label>\\n          <Input\\n            className=\\\"w-25 h-25 pl-1\\\"\\n            placeholder=\\\"0123456789\\\"\\n            value={this.state.inputTerm}\\n            onChange={this.handleInput}\\n          />\\n        </FormGroup>\\n        <Alert color=\\\"danger\\\" isOpen={this.state.visible}>\\n          <AlertCircle size={15} />\\n          <span>\\n            the value is <strong>invalid</strong> you can only enter\\n            numbers\\n          </span>\\n        </Alert>\\n        </React.Fragment>\\n      )\\n    }\\n  }\\n  export default AlertExample\\n        \"));","map":null,"metadata":{},"sourceType":"module"}