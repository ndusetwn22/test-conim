{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/rombak-react-vuexy2/src/views/apps/chat/ChatLog.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Input, Button } from \"reactstrap\";\nimport { MessageSquare, Menu, Star, Send } from \"react-feather\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { connect } from \"react-redux\";\nimport { togglePinned, sendMessage } from \"../../../redux/actions/chat/index\";\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\";\n\nclass ChatLog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      msg: \"\",\n      activeUser: null,\n      activeChat: null\n    };\n\n    this.handleSendMessage = (id, isPinned, text) => {\n      if (text.length > 0) {\n        this.props.sendMessage(id, isPinned, text);\n        this.setState({\n          msg: \"\"\n        });\n      }\n    };\n\n    this.handleTime = (time_to, time_from) => {\n      const date_time_to = new Date(Date.parse(time_to));\n      const date_time_from = new Date(Date.parse(time_from));\n      return date_time_to.getFullYear() === date_time_from.getFullYear() && date_time_to.getMonth() === date_time_from.getMonth() && date_time_to.getDate() === date_time_from.getDate();\n    };\n\n    this.scrollToBottom = () => {\n      const chatContainer = ReactDOM.findDOMNode(this.chatArea);\n      chatContainer.scrollTop = chatContainer.scrollHeight;\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.activeUser !== state.activeChat || props.activeChat !== state.activeChat) {\n      return {\n        activeUser: props.activeUser,\n        activeChat: props.activeChat\n      };\n    } // Return null if the state hasn't changed\n\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    const {\n      activeUser\n    } = this.state;\n    let activeUserUid = activeUser && activeUser.uid ? activeUser.uid : null,\n        activeChat = activeUser && activeUser.uid ? this.props.chat.chats[activeUserUid] : null;\n    let renderChats = activeChat && activeChat !== undefined && activeChat.msg ? activeChat.msg.map((chat, i) => {\n      let renderSentTime = () => {\n        if (i > 0 && !this.handleTime(chat.time, activeChat.msg[i - 1].time)) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"divider\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"divider-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }\n          }, new Date().getDate() + \" \" + new Date().toLocaleString(\"default\", {\n            month: \"short\"\n          })));\n        }\n      };\n\n      let renderAvatar = () => {\n        if (i > 0) {\n          if (chat.isSent === true && activeChat.msg[i - 1].isSent !== true) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"chat-avatar\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"avatar m-0\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: userImg,\n              alt: \"chat avatar\",\n              height: \"40\",\n              width: \"40\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }\n            })));\n          } else if (chat.isSent !== true) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"chat-avatar\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"avatar m-0\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: activeUser.photoURL,\n              alt: \"chat avatar\",\n              height: \"40\",\n              width: \"40\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 25\n              }\n            })));\n          } else {\n            return \"\";\n          }\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"chat-avatar\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"avatar m-0\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: chat.isSent ? userImg : activeUser.photoURL,\n            alt: \"chat avatar\",\n            height: \"40\",\n            width: \"40\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 23\n            }\n          })));\n        }\n      };\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, renderSentTime(), /*#__PURE__*/React.createElement(\"div\", {\n        className: `chat ${chat.isSent !== true ? \"chat-left\" : \"chat-right\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, renderAvatar(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, chat.textContent))));\n    }) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-app-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `start-chat-area ${activeUser !== null ? \"d-none\" : \"d-flex\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"mb-1 start-chat-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MessageSquare, {\n      size: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"py-50 px-1 sidebar-toggle start-chat-text\",\n      onClick: () => {\n        if (this.props.mql.matches === false) {\n          this.props.mainSidebar(true);\n        } else {\n          return null;\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, \"Start Conversation\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: `active-chat ${activeUser === null ? \"d-none\" : \"d-block\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat_navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"chat_header d-flex justify-content-between align-items-center p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-toggle d-block d-lg-none mr-1\",\n      onClick: () => this.props.mainSidebar(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"avatar user-profile-toggle m-0 m-0 mr-1\",\n      onClick: () => this.props.handleReceiverSidebar(\"open\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: activeUser !== null ? activeUser.photoURL : \"\",\n      alt: activeUser !== null ? activeUser.displayName : \"\",\n      height: \"40\",\n      width: \"40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: `\n                    ${activeUser !== null && activeUser.status === \"do not disturb\" ? \"avatar-status-busy\" : activeUser !== null && activeUser.status === \"away\" ? \"avatar-status-away\" : activeUser !== null && activeUser.status === \"offline\" ? \"avatar-status-offline\" : \"avatar-status-online\"}\n                    `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }, activeUser !== null ? activeUser.displayName : \"\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"favorite\",\n      onClick: () => {\n        if (activeChat) {\n          this.props.togglePinned(activeUser.uid, !activeChat.isPinned);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Star, {\n      size: 22,\n      stroke: activeChat && activeChat.isPinned === true ? \"#FF9F43\" : \"#626262\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      className: \"user-chats\",\n      options: {\n        wheelPropagation: false\n      },\n      ref: el => {\n        this.chatArea = el;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, renderChats)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-app-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"chat-app-input d-flex align-items-center\",\n      onSubmit: e => {\n        e.preventDefault();\n        this.handleSendMessage(activeUser.uid, false, this.state.msg, activeUser);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      className: \"message mr-1 ml-50\",\n      placeholder: \"Type your message\",\n      value: this.state.msg,\n      onChange: e => {\n        e.preventDefault();\n        this.setState({\n          msg: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Send, {\n      className: \"d-lg-none\",\n      size: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-lg-block d-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 19\n      }\n    }, \"Send\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  togglePinned,\n  sendMessage\n})(ChatLog);","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/rombak-react-vuexy2/src/views/apps/chat/ChatLog.js"],"names":["React","ReactDOM","Input","Button","MessageSquare","Menu","Star","Send","PerfectScrollbar","connect","togglePinned","sendMessage","userImg","ChatLog","Component","state","msg","activeUser","activeChat","handleSendMessage","id","isPinned","text","length","props","setState","handleTime","time_to","time_from","date_time_to","Date","parse","date_time_from","getFullYear","getMonth","getDate","scrollToBottom","chatContainer","findDOMNode","chatArea","scrollTop","scrollHeight","getDerivedStateFromProps","componentDidMount","componentDidUpdate","render","activeUserUid","uid","chat","chats","renderChats","undefined","map","i","renderSentTime","time","toLocaleString","month","renderAvatar","isSent","photoURL","textContent","mql","matches","mainSidebar","handleReceiverSidebar","displayName","status","wheelPropagation","el","e","preventDefault","target","value","mapStateToProps","chatApp"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Input, Button } from \"reactstrap\"\nimport { MessageSquare, Menu, Star, Send } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport { togglePinned, sendMessage } from \"../../../redux/actions/chat/index\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\n\nclass ChatLog extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.activeUser !== state.activeChat ||\n      props.activeChat !== state.activeChat\n    ) {\n      return {\n        activeUser: props.activeUser,\n        activeChat: props.activeChat\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    msg: \"\",\n    activeUser: null,\n    activeChat: null\n  }\n\n  handleSendMessage = (id, isPinned, text) => {\n    if (text.length > 0) {\n      this.props.sendMessage(id, isPinned, text)\n      this.setState({\n        msg: \"\"\n      })\n    }\n  }\n  componentDidMount() {\n    this.scrollToBottom()\n  }\n  componentDidUpdate() {\n    this.scrollToBottom()\n  }\n\n  handleTime = (time_to, time_from) => {\n    const date_time_to = new Date(Date.parse(time_to))\n    const date_time_from = new Date(Date.parse(time_from))\n    return (\n      date_time_to.getFullYear() === date_time_from.getFullYear() &&\n      date_time_to.getMonth() === date_time_from.getMonth() &&\n      date_time_to.getDate() === date_time_from.getDate()\n    )\n  }\n\n  scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(this.chatArea)\n    chatContainer.scrollTop = chatContainer.scrollHeight\n  }\n\n  render() {\n    const { activeUser } = this.state\n    let activeUserUid = activeUser && activeUser.uid ? activeUser.uid : null,\n      activeChat =\n        activeUser && activeUser.uid\n          ? this.props.chat.chats[activeUserUid]\n          : null\n\n    let renderChats =\n      activeChat && activeChat !== undefined && activeChat.msg\n        ? activeChat.msg.map((chat, i) => {\n            let renderSentTime = () => {\n              if (\n                i > 0 &&\n                !this.handleTime(chat.time, activeChat.msg[i - 1].time)\n              ) {\n                return (\n                  <div className=\"divider\">\n                    <div className=\"divider-text\">\n                      {new Date().getDate() +\n                        \" \" +\n                        new Date().toLocaleString(\"default\", {\n                          month: \"short\"\n                        })}\n                    </div>\n                  </div>\n                )\n              }\n            }\n            let renderAvatar = () => {\n              if (i > 0) {\n                if (\n                  chat.isSent === true &&\n                  activeChat.msg[i - 1].isSent !== true\n                ) {\n                  return (\n                    <div className=\"chat-avatar\">\n                      <div className=\"avatar m-0\">\n                        <img\n                          src={userImg}\n                          alt=\"chat avatar\"\n                          height=\"40\"\n                          width=\"40\"\n                        />\n                      </div>\n                    </div>\n                  )\n                } else if (chat.isSent !== true) {\n                  return (\n                    <div className=\"chat-avatar\">\n                      <div className=\"avatar m-0\">\n                        <img\n                          src={activeUser.photoURL}\n                          alt=\"chat avatar\"\n                          height=\"40\"\n                          width=\"40\"\n                        />\n                      </div>\n                    </div>\n                  )\n                } else {\n                  return \"\"\n                }\n              } else {\n                return (\n                  <div className=\"chat-avatar\">\n                    <div className=\"avatar m-0\">\n                      <img\n                        src={chat.isSent ? userImg : activeUser.photoURL}\n                        alt=\"chat avatar\"\n                        height=\"40\"\n                        width=\"40\"\n                      />\n                    </div>\n                  </div>\n                )\n              }\n            }\n            return (\n              <React.Fragment key={i}>\n                {renderSentTime()}\n                <div\n                  className={`chat ${\n                    chat.isSent !== true ? \"chat-left\" : \"chat-right\"\n                  }`}>\n                  {renderAvatar()}\n                  <div className=\"chat-body\">\n                    <div className=\"chat-content\">{chat.textContent}</div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )\n          })\n        : null\n\n    return (\n      <div className=\"content-right\">\n        <div className=\"chat-app-window\">\n          <div\n            className={`start-chat-area ${\n              activeUser !== null ? \"d-none\" : \"d-flex\"\n            }`}>\n            <span className=\"mb-1 start-chat-icon\">\n              <MessageSquare size={50} />\n            </span>\n            <h4\n              className=\"py-50 px-1 sidebar-toggle start-chat-text\"\n              onClick={() => {\n                if (this.props.mql.matches === false) {\n                  this.props.mainSidebar(true)\n                } else {\n                  return null\n                }\n              }}>\n              Start Conversation\n            </h4>\n          </div>\n          <div\n            className={`active-chat ${\n              activeUser === null ? \"d-none\" : \"d-block\"\n            }`}>\n            <div className=\"chat_navbar\">\n              <header className=\"chat_header d-flex justify-content-between align-items-center p-1\">\n                <div className=\"d-flex align-items-center\">\n                  <div\n                    className=\"sidebar-toggle d-block d-lg-none mr-1\"\n                    onClick={() => this.props.mainSidebar(true)}>\n                    <Menu size={24} />\n                  </div>\n                  <div\n                    className=\"avatar user-profile-toggle m-0 m-0 mr-1\"\n                    onClick={() => this.props.handleReceiverSidebar(\"open\")}>\n                    <img\n                      src={activeUser !== null ? activeUser.photoURL : \"\"}\n                      alt={activeUser !== null ? activeUser.displayName : \"\"}\n                      height=\"40\"\n                      width=\"40\"\n                    />\n                    <span\n                      className={`\n                    ${\n                      activeUser !== null &&\n                      activeUser.status === \"do not disturb\"\n                        ? \"avatar-status-busy\"\n                        : activeUser !== null && activeUser.status === \"away\"\n                        ? \"avatar-status-away\"\n                        : activeUser !== null && activeUser.status === \"offline\"\n                        ? \"avatar-status-offline\"\n                        : \"avatar-status-online\"\n                    }\n                    `}\n                    />\n                  </div>\n                  <h6 className=\"mb-0\">\n                    {activeUser !== null ? activeUser.displayName : \"\"}\n                  </h6>\n                </div>\n                <span\n                  className=\"favorite\"\n                  onClick={() => {\n                    if (activeChat) {\n                      this.props.togglePinned(\n                        activeUser.uid,\n                        !activeChat.isPinned\n                      )\n                    }\n                  }}>\n                  <Star\n                    size={22}\n                    stroke={\n                      activeChat && activeChat.isPinned === true\n                        ? \"#FF9F43\"\n                        : \"#626262\"\n                    }\n                  />\n                </span>\n              </header>\n            </div>\n            <PerfectScrollbar\n              className=\"user-chats\"\n              options={{\n                wheelPropagation: false\n              }}\n              ref={el => {\n                this.chatArea = el\n              }}>\n              <div className=\"chats\">{renderChats}</div>\n            </PerfectScrollbar>\n            <div className=\"chat-app-form\">\n              <form\n                className=\"chat-app-input d-flex align-items-center\"\n                onSubmit={e => {\n                  e.preventDefault()\n                  this.handleSendMessage(\n                    activeUser.uid,\n                    false,\n                    this.state.msg,\n                    activeUser\n                  )\n                }}>\n                <Input\n                  type=\"text\"\n                  className=\"message mr-1 ml-50\"\n                  placeholder=\"Type your message\"\n                  value={this.state.msg}\n                  onChange={e => {\n                    e.preventDefault()\n                    this.setState({\n                      msg: e.target.value\n                    })\n                  }}\n                />\n                <Button color=\"primary\">\n                  <Send className=\"d-lg-none\" size={15} />\n                  <span className=\"d-lg-block d-none\">Send</span>\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, { togglePinned, sendMessage })(ChatLog)\n"]},"metadata":{},"sourceType":"module"}