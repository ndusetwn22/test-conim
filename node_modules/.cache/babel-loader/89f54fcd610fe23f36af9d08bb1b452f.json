{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Card,CardHeader,CardTitle,CardBody,Button,FormGroup}from\"reactstrap\";import{Formik,Field,Form,ErrorMessage}from\"formik\";import*as Yup from\"yup\";var SignUpSchema=Yup.object().shape({email:Yup.string().email(\"Invalid email address\").required(\"Required\"),firstName:Yup.string().min(2,\"Must be longer than 2 characters\").max(20,\"Nice try, nobody has a first name that long\").required(\"Required\"),lastName:Yup.string().min(2,\"Must be longer than 2 characters\").max(20,\"Nice try, nobody has a last name that long\").required(\"Required\")});var FormikErrorMsg=/*#__PURE__*/function(_React$Component){_inherits(FormikErrorMsg,_React$Component);var _super=_createSuper(FormikErrorMsg);function FormikErrorMsg(){_classCallCheck(this,FormikErrorMsg);return _super.apply(this,arguments);}_createClass(FormikErrorMsg,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(CardTitle,null,\"Error Msg\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",null,\"You can show error messages with formik using\",\" \",/*#__PURE__*/React.createElement(\"code\",null,\"validationSchema\"),\" prop with formik tag.\"),/*#__PURE__*/React.createElement(Formik,{initialValues:{email:\"\",firstName:\"\",lastName:\"\"},validationSchema:SignUpSchema,render:function render(_ref){var errors=_ref.errors,touched=_ref.touched;return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"firstName\"},\"First Name\"),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"firstName\",placeholder:\"Jane\",type:\"text\"}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"firstName\",component:\"div\",className:\"field-error text-danger\"})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"lastName\"},\"Last Name\"),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"lastName\",placeholder:\"Doe\",type:\"text\"}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"firstName\"},function(msg/** this is the same as the above */){return/*#__PURE__*/React.createElement(\"div\",{className:\"field-error text-danger\"},msg);})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"email\",placeholder:\"jane@acme.com\",type:\"email\"}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"email\"},function(msg/** this is the same as the above */){return/*#__PURE__*/React.createElement(\"div\",{className:\"field-error text-danger\"},msg);})),/*#__PURE__*/React.createElement(Button.Ripple,{color:\"primary\",className:\"mt-1\",type:\"submit\"},\"Submit\"));}})));}}]);return FormikErrorMsg;}(React.Component);export default FormikErrorMsg;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/forms/formik/FormikErrorMsg.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Button","FormGroup","Formik","Field","Form","ErrorMessage","Yup","SignUpSchema","object","shape","email","string","required","firstName","min","max","lastName","FormikErrorMsg","errors","touched","msg","Component"],"mappings":"4nBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,IADF,CAEEC,UAFF,CAGEC,SAHF,CAIEC,QAJF,CAKEC,MALF,CAMEC,SANF,KAOO,YAPP,CAQA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,IAAxB,CAA8BC,YAA9B,KAAkD,QAAlD,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CAEA,GAAMC,CAAAA,YAAY,CAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB,CACtCC,KAAK,CAAEJ,GAAG,CAACK,MAAJ,GACJD,KADI,CACE,uBADF,EAEJE,QAFI,CAEK,UAFL,CAD+B,CAItCC,SAAS,CAAEP,GAAG,CAACK,MAAJ,GACRG,GADQ,CACJ,CADI,CACD,kCADC,EAERC,GAFQ,CAEJ,EAFI,CAEA,6CAFA,EAGRH,QAHQ,CAGC,UAHD,CAJ2B,CAQtCI,QAAQ,CAAEV,GAAG,CAACK,MAAJ,GACPG,GADO,CACH,CADG,CACA,kCADA,EAEPC,GAFO,CAEH,EAFG,CAEC,4CAFD,EAGPH,QAHO,CAGE,UAHF,CAR4B,CAAnB,CAArB,C,GAcMK,CAAAA,c,iRACJ,iBAAS,CACP,mBACE,oBAAC,IAAD,mBACE,oBAAC,UAAD,mBACE,oBAAC,SAAD,kBADF,CADF,cAIE,oBAAC,QAAD,mBACE,6EACgD,GADhD,cAEE,mDAFF,0BADF,cAKE,oBAAC,MAAD,EACE,aAAa,CAAE,CACbP,KAAK,CAAE,EADM,CAEbG,SAAS,CAAE,EAFE,CAGbG,QAAQ,CAAE,EAHG,CADjB,CAME,gBAAgB,CAAET,YANpB,CAOE,MAAM,CAAE,yBAAGW,CAAAA,MAAH,MAAGA,MAAH,CAAWC,OAAX,MAAWA,OAAX,oBACN,oBAAC,IAAD,mBACE,oBAAC,SAAD,mBACE,6BAAO,OAAO,CAAC,WAAf,eADF,cAEE,oBAAC,KAAD,EACE,SAAS,CAAC,cADZ,CAEE,IAAI,CAAC,WAFP,CAGE,WAAW,CAAC,MAHd,CAIE,IAAI,CAAC,MAJP,EAFF,cAQE,oBAAC,YAAD,EACE,IAAI,CAAC,WADP,CAEE,SAAS,CAAC,KAFZ,CAGE,SAAS,CAAC,yBAHZ,EARF,CADF,cAgBE,oBAAC,SAAD,mBACE,6BAAO,OAAO,CAAC,UAAf,cADF,cAEE,oBAAC,KAAD,EACE,SAAS,CAAC,cADZ,CAEE,IAAI,CAAC,UAFP,CAGE,WAAW,CAAC,KAHd,CAIE,IAAI,CAAC,MAJP,EAFF,cAQE,oBAAC,YAAD,EAAc,IAAI,CAAC,WAAnB,EACG,SAACC,GAAI,oCAAL,qBACC,2BAAK,SAAS,CAAC,yBAAf,EAA0CA,GAA1C,CADD,EADH,CARF,CAhBF,cA+BE,oBAAC,SAAD,mBACE,6BAAO,OAAO,CAAC,OAAf,UADF,cAEE,oBAAC,KAAD,EACE,SAAS,CAAC,cADZ,CAEE,IAAI,CAAC,OAFP,CAGE,WAAW,CAAC,eAHd,CAIE,IAAI,CAAC,OAJP,EAFF,cASE,oBAAC,YAAD,EAAc,IAAI,CAAC,OAAnB,EACG,SAACA,GAAI,oCAAL,qBACC,2BAAK,SAAS,CAAC,yBAAf,EAA0CA,GAA1C,CADD,EADH,CATF,CA/BF,cA+CE,oBAAC,MAAD,CAAQ,MAAR,EAAe,KAAK,CAAC,SAArB,CAA+B,SAAS,CAAC,MAAzC,CAAgD,IAAI,CAAC,QAArD,WA/CF,CADM,EAPV,EALF,CAJF,CADF,CA0ED,C,4BA5E0BzB,KAAK,CAAC0B,S,EA8EnC,cAAeJ,CAAAA,cAAf","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Button,\n  FormGroup\n} from \"reactstrap\"\nimport { Formik, Field, Form, ErrorMessage } from \"formik\"\nimport * as Yup from \"yup\"\n\nconst SignUpSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email address\")\n    .required(\"Required\"),\n  firstName: Yup.string()\n    .min(2, \"Must be longer than 2 characters\")\n    .max(20, \"Nice try, nobody has a first name that long\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Must be longer than 2 characters\")\n    .max(20, \"Nice try, nobody has a last name that long\")\n    .required(\"Required\")\n})\n\nclass FormikErrorMsg extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Error Msg</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <p>\n            You can show error messages with formik using{\" \"}\n            <code>validationSchema</code> prop with formik tag.\n          </p>\n          <Formik\n            initialValues={{\n              email: \"\",\n              firstName: \"\",\n              lastName: \"\"\n            }}\n            validationSchema={SignUpSchema}\n            render={({ errors, touched }) => (\n              <Form>\n                <FormGroup>\n                  <label htmlFor=\"firstName\">First Name</label>\n                  <Field\n                    className=\"form-control\"\n                    name=\"firstName\"\n                    placeholder=\"Jane\"\n                    type=\"text\"\n                  />\n                  <ErrorMessage\n                    name=\"firstName\"\n                    component=\"div\"\n                    className=\"field-error text-danger\"\n                  />\n                </FormGroup>\n\n                <FormGroup>\n                  <label htmlFor=\"lastName\">Last Name</label>\n                  <Field\n                    className=\"form-control\"\n                    name=\"lastName\"\n                    placeholder=\"Doe\"\n                    type=\"text\"\n                  />\n                  <ErrorMessage name=\"firstName\">\n                    {(msg /** this is the same as the above */) => (\n                      <div className=\"field-error text-danger\">{msg}</div>\n                    )}\n                  </ErrorMessage>\n                </FormGroup>\n\n                <FormGroup>\n                  <label htmlFor=\"email\">Email</label>\n                  <Field\n                    className=\"form-control\"\n                    name=\"email\"\n                    placeholder=\"jane@acme.com\"\n                    type=\"email\"\n                  />\n                  {/* This will render a string */}\n                  <ErrorMessage name=\"email\">\n                    {(msg /** this is the same as the above */) => (\n                      <div className=\"field-error text-danger\">{msg}</div>\n                    )}\n                  </ErrorMessage>\n                </FormGroup>\n\n                <Button.Ripple color=\"primary\" className=\"mt-1\" type=\"submit\">\n                  Submit\n                </Button.Ripple>\n              </Form>\n            )}\n          />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default FormikErrorMsg\n"]},"metadata":{},"sourceType":"module"}