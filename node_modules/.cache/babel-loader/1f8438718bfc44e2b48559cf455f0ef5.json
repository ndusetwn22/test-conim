{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _slicedToArray from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Card,CardHeader,CardBody,CardTitle}from\"reactstrap\";import{DragDropContext,Droppable,Draggable}from\"react-beautiful-dnd\";var dragItems=[{id:\"1\",title:\"Draggable Card 1\",content:\"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"},{id:\"2\",title:\"Draggable Card 2\",content:\"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"},{id:\"3\",title:\"Draggable Card 3\",content:\"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"},{id:\"4\",title:\"Draggable Card 4\",content:\"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"}];// get data from array\nvar getItems=function getItems(count){return dragItems.map(function(k){return{id:k.id,title:k.title,content:k.content};});};// a little function to help us with reordering the result\nvar reorder=function reorder(list,startIndex,endIndex){var result=Array.from(list);var _result$splice=result.splice(startIndex,1),_result$splice2=_slicedToArray(_result$splice,1),removed=_result$splice2[0];result.splice(endIndex,0,removed);return result;};var DndHorizontal=/*#__PURE__*/function(_React$Component){_inherits(DndHorizontal,_React$Component);var _super=_createSuper(DndHorizontal);function DndHorizontal(){var _this;_classCallCheck(this,DndHorizontal);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={items:getItems(),direction:\"horizontal\",deviceWidth:window.width};_this.updateDnd=function(){_this.setState({deviceWidth:window.innerWidth});if(_this.state.deviceWidth<=992){_this.setState({direction:\"vertical\"});}else{_this.setState({direction:\"horizontal\"});}};_this.onDragEnd=function(result){// dropped outside the list\nif(!result.destination){return;}var items=reorder(_this.state.items,result.source.index,result.destination.index);_this.setState({items:items});};return _this;}_createClass(DndHorizontal,[{key:\"componentDidMount\",value:function componentDidMount(){this.updateDnd();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){window.addEventListener(\"resize\",this.updateDnd);}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(DragDropContext,{onDragEnd:this.onDragEnd},/*#__PURE__*/React.createElement(Droppable,{droppableId:\"droppable\",direction:this.state.direction},function(provided,snapshot){return/*#__PURE__*/React.createElement(\"div\",Object.assign({ref:provided.innerRef},provided.droppableProps,{className:\"d-flex flex-sm-wrap flex-lg-nowrap draggable-cards\"}),_this2.state.items.map(function(item,index){return/*#__PURE__*/React.createElement(Draggable,{key:item.id,draggableId:item.id,index:index},function(provided,snapshot){return/*#__PURE__*/React.createElement(\"div\",Object.assign({ref:provided.innerRef},provided.draggableProps,provided.dragHandleProps),/*#__PURE__*/React.createElement(Card,{className:\"draggable-cards \".concat(item.id!==4?\"mr-1\":null)},/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(CardTitle,null,item.title)),/*#__PURE__*/React.createElement(CardBody,null,item.content)));});}),provided.placeholder);}));}}]);return DndHorizontal;}(React.Component);export default DndHorizontal;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/extensions/drag-and-drop/DndCards.js"],"names":["React","Card","CardHeader","CardBody","CardTitle","DragDropContext","Droppable","Draggable","dragItems","id","title","content","getItems","count","map","k","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","DndHorizontal","state","items","direction","deviceWidth","window","width","updateDnd","setState","innerWidth","onDragEnd","destination","source","index","prevProps","prevState","addEventListener","provided","snapshot","innerRef","droppableProps","item","draggableProps","dragHandleProps","placeholder","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\n\nconst dragItems = [\n  {\n    id: \"1\",\n    title: \"Draggable Card 1\",\n    content:\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n  },\n  {\n    id: \"2\",\n    title: \"Draggable Card 2\",\n    content:\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n  },\n  {\n    id: \"3\",\n    title: \"Draggable Card 3\",\n    content:\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n  },\n  {\n    id: \"4\",\n    title: \"Draggable Card 4\",\n    content:\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n  }\n]\n\n// get data from array\nconst getItems = count =>\n  dragItems.map(k => ({\n    id: k.id,\n    title: k.title,\n    content: k.content\n  }))\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n  return result\n}\n\nclass DndHorizontal extends React.Component {\n  state = {\n    items: getItems(),\n    direction: \"horizontal\",\n    deviceWidth: window.width\n  }\n\n  updateDnd = () => {\n    this.setState({\n      deviceWidth: window.innerWidth\n    })\n    if (this.state.deviceWidth <= 992) {\n      this.setState({\n        direction: \"vertical\"\n      })\n    } else {\n      this.setState({\n        direction: \"horizontal\"\n      })\n    }\n  }\n  componentDidMount() {\n    this.updateDnd()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    window.addEventListener(\"resize\", this.updateDnd)\n  }\n\n  onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return\n    }\n\n    const items = reorder(\n      this.state.items,\n      result.source.index,\n      result.destination.index\n    )\n\n    this.setState({\n      items\n    })\n  }\n\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"droppable\" direction={this.state.direction}>\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              className=\"d-flex flex-sm-wrap flex-lg-nowrap draggable-cards\"\n            >\n              {this.state.items.map((item, index) => (\n                <Draggable key={item.id} draggableId={item.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                      <Card\n                        className={`draggable-cards ${\n                          item.id !== 4 ? \"mr-1\" : null\n                        }`}\n                      >\n                        <CardHeader>\n                          <CardTitle>{item.title}</CardTitle>\n                        </CardHeader>\n                        <CardBody>{item.content}</CardBody>\n                      </Card>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    )\n  }\n}\n\nexport default DndHorizontal\n"]},"metadata":{},"sourceType":"module"}