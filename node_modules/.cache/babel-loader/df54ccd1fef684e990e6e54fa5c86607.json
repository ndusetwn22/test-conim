{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/views/tables/react-tables/NestedTable.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport ReactTable from \"react-table\";\nimport treeTableHOC from \"react-table/lib/hoc/treeTable\";\nimport { nestedData } from \"./TableData\";\nvar TreeTable = treeTableHOC(ReactTable);\n\nvar NestedTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(NestedTable, _React$Component);\n\n  function NestedTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NestedTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NestedTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: nestedData\n    };\n    return _this;\n  }\n\n  _createClass(NestedTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.state.data;\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, \"Nested\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TreeTable, {\n        filterable: true,\n        className: \"nested-table\",\n        defaultFilterMethod: function defaultFilterMethod(filter, row, column) {\n          var id = filter.pivotId || filter.id;\n          return row[id] !== undefined ? String(row[id]).toLowerCase().includes(filter.value.toLowerCase()) : true;\n        },\n        data: data,\n        columns: [// we only require the accessor so TreeTable\n        // can handle the pivot automatically\n        // any other columns we want to display\n        {\n          Header: \"First Name\",\n          accessor: \"first_name\"\n        }, {\n          Header: \"Last Name\",\n          accessor: \"last_name\"\n        }, {\n          Header: \"Company Name\",\n          accessor: \"company_name\"\n        }, {\n          Header: \"Address\",\n          accessor: \"address\"\n        }, {\n          Header: \"Phone 1\",\n          accessor: \"phone1\"\n        }, {\n          Header: \"Email\",\n          accessor: \"email\"\n        }],\n        defaultPageSize: 10,\n        SubComponent: function SubComponent(row) {\n          // a SubComponent just for the final detail\n          var columns = [{\n            Header: \"Property\",\n            accessor: \"property\",\n            width: 200,\n            Cell: function Cell(ci) {\n              return \"\".concat(ci.value, \":\");\n            },\n            style: {\n              backgroundColor: \"#DDD\",\n              textAlign: \"right\",\n              fontWeight: \"bold\"\n            }\n          }, {\n            Header: \"Value\",\n            accessor: \"value\"\n          }];\n          var rowData = Object.keys(row.original).map(function (key) {\n            return {\n              property: key,\n              value: row.original[key].toString()\n            };\n          });\n          return /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              padding: \"10px\"\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(ReactTable, {\n            data: rowData,\n            columns: columns,\n            pageSize: rowData.length,\n            showPagination: false,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return NestedTable;\n}(React.Component);\n\nexport default NestedTable;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/tables/react-tables/NestedTable.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","ReactTable","treeTableHOC","nestedData","TreeTable","NestedTable","state","data","filter","row","column","id","pivotId","undefined","String","toLowerCase","includes","value","Header","accessor","columns","width","Cell","ci","style","backgroundColor","textAlign","fontWeight","rowData","Object","keys","original","map","key","property","toString","padding","length","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport ReactTable from \"react-table\"\nimport treeTableHOC from \"react-table/lib/hoc/treeTable\"\nimport { nestedData } from \"./TableData\"\nconst TreeTable = treeTableHOC(ReactTable)\nclass NestedTable extends React.Component {\n  state = {\n    data: nestedData\n  }\n  render() {\n    const { data } = this.state\n\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Nested</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <TreeTable\n            filterable\n            className=\"nested-table\"\n            defaultFilterMethod={(filter, row, column) => {\n              const id = filter.pivotId || filter.id\n              return row[id] !== undefined\n                ? String(row[id])\n                    .toLowerCase()\n                    .includes(filter.value.toLowerCase())\n                : true\n            }}\n            data={data}\n            columns={[\n              // we only require the accessor so TreeTable\n              // can handle the pivot automatically\n\n              // any other columns we want to display\n              {\n                Header: \"First Name\",\n                accessor: \"first_name\"\n              },\n              {\n                Header: \"Last Name\",\n                accessor: \"last_name\"\n              },\n              {\n                Header: \"Company Name\",\n                accessor: \"company_name\"\n              },\n              {\n                Header: \"Address\",\n                accessor: \"address\"\n              },\n              {\n                Header: \"Phone 1\",\n                accessor: \"phone1\"\n              },\n              {\n                Header: \"Email\",\n                accessor: \"email\"\n              }\n            ]}\n            defaultPageSize={10}\n            SubComponent={row => {\n              // a SubComponent just for the final detail\n              const columns = [\n                {\n                  Header: \"Property\",\n                  accessor: \"property\",\n                  width: 200,\n                  Cell: ci => {\n                    return `${ci.value}:`\n                  },\n                  style: {\n                    backgroundColor: \"#DDD\",\n                    textAlign: \"right\",\n                    fontWeight: \"bold\"\n                  }\n                },\n                { Header: \"Value\", accessor: \"value\" }\n              ]\n              const rowData = Object.keys(row.original).map(key => {\n                return {\n                  property: key,\n                  value: row.original[key].toString()\n                }\n              })\n              return (\n                <div style={{ padding: \"10px\" }}>\n                  <ReactTable\n                    data={rowData}\n                    columns={columns}\n                    pageSize={rowData.length}\n                    showPagination={false}\n                  />\n                </div>\n              )\n            }}\n          />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default NestedTable\n"]},"metadata":{},"sourceType":"module"}