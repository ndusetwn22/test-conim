{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";export var fetchEvents=function fetchEvents(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/api/apps/calendar/events\").then(function(response){dispatch({type:\"FETCH_EVENTS\",events:response.data});}).catch(function(err){return console.log(err);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var handleSidebar=function handleSidebar(bool){return function(dispatch){return dispatch({type:\"HANDLE_SIDEBAR\",status:bool});};};export var addEvent=function addEvent(event){return function(dispatch){dispatch({type:\"ADD_EVENT\",event:event});};};export var updateEvent=function updateEvent(event){return function(dispatch){dispatch({type:\"UPDATE_EVENT\",event:event});};};export var updateDrag=function updateDrag(event){return function(dispatch){dispatch({type:\"UPDATE_DRAG\",event:event});};};export var updateResize=function updateResize(event){return function(dispatch){dispatch({type:\"EVENT_RESIZE\",event:event});};};export var handleSelectedEvent=function handleSelectedEvent(event){return function(dispatch){return dispatch({type:\"HANDLE_SELECTED_EVENT\",event:event});};};","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/redux/actions/calendar/index.js"],"names":["axios","fetchEvents","dispatch","get","then","response","type","events","data","catch","err","console","log","handleSidebar","bool","status","addEvent","event","updateEvent","updateDrag","updateResize","handleSelectedEvent"],"mappings":"mUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAC/B,+FAAO,iBAAMC,QAAN,wIACCF,CAAAA,KAAK,CACRG,GADG,CACC,2BADD,EAEHC,IAFG,CAEE,SAAAC,QAAQ,CAAI,CAChBH,QAAQ,CAAC,CAAEI,IAAI,CAAE,cAAR,CAAwBC,MAAM,CAAEF,QAAQ,CAACG,IAAzC,CAAD,CAAR,CACD,CAJG,EAKHC,KALG,CAKG,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EALN,CADD,uDAAP,+DAQD,CATM,CAWP,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,CAAI,CACnC,MAAO,UAAAZ,QAAQ,QAAIA,CAAAA,QAAQ,CAAC,CAAEI,IAAI,CAAE,gBAAR,CAA0BS,MAAM,CAAED,IAAlC,CAAD,CAAZ,EAAf,CACD,CAFM,CAIP,MAAO,IAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CAC/B,MAAO,UAAAf,QAAQ,CAAI,CACjBA,QAAQ,CAAC,CAAEI,IAAI,CAAE,WAAR,CAAqBW,KAAK,CAALA,KAArB,CAAD,CAAR,CACD,CAFD,CAGD,CAJM,CAKP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAD,KAAK,CAAI,CAClC,MAAO,UAAAf,QAAQ,CAAI,CACjBA,QAAQ,CAAC,CAAEI,IAAI,CAAE,cAAR,CAAwBW,KAAK,CAALA,KAAxB,CAAD,CAAR,CACD,CAFD,CAGD,CAJM,CAMP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAF,KAAK,CAAI,CACjC,MAAO,UAAAf,QAAQ,CAAI,CACjBA,QAAQ,CAAC,CAAEI,IAAI,CAAE,aAAR,CAAuBW,KAAK,CAALA,KAAvB,CAAD,CAAR,CACD,CAFD,CAGD,CAJM,CAMP,MAAO,IAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAH,KAAK,CAAI,CACnC,MAAO,UAAAf,QAAQ,CAAI,CACjBA,QAAQ,CAAC,CAAEI,IAAI,CAAE,cAAR,CAAwBW,KAAK,CAALA,KAAxB,CAAD,CAAR,CACD,CAFD,CAGD,CAJM,CAMP,MAAO,IAAMI,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAJ,KAAK,CAAI,CAC1C,MAAO,UAAAf,QAAQ,QAAIA,CAAAA,QAAQ,CAAC,CAAEI,IAAI,CAAE,uBAAR,CAAiCW,KAAK,CAALA,KAAjC,CAAD,CAAZ,EAAf,CACD,CAFM","sourcesContent":["import axios from \"axios\"\n\nexport const fetchEvents = () => {\n  return async dispatch => {\n    await axios\n      .get(\"/api/apps/calendar/events\")\n      .then(response => {\n        dispatch({ type: \"FETCH_EVENTS\", events: response.data })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const handleSidebar = bool => {\n  return dispatch => dispatch({ type: \"HANDLE_SIDEBAR\", status: bool })\n}\n\nexport const addEvent = event => {\n  return dispatch => {\n    dispatch({ type: \"ADD_EVENT\", event })\n  }\n}\nexport const updateEvent = event => {\n  return dispatch => {\n    dispatch({ type: \"UPDATE_EVENT\", event })\n  }\n}\n\nexport const updateDrag = event => {\n  return dispatch => {\n    dispatch({ type: \"UPDATE_DRAG\", event })\n  }\n}\n\nexport const updateResize = event => {\n  return dispatch => {\n    dispatch({ type: \"EVENT_RESIZE\", event })\n  }\n}\n\nexport const handleSelectedEvent = event => {\n  return dispatch => dispatch({ type: \"HANDLE_SELECTED_EVENT\", event })\n}\n"]},"metadata":{},"sourceType":"module"}