{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Button,Card,CardHeader,CardBody,CardTitle,TabContent,TabPane,Nav,NavItem,NavLink}from\"reactstrap\";import classnames from\"classnames\";import{Eye,Code,Search,Inbox,Camera}from\"react-feather\";import{iconOnlyButtons}from\"./ButtonsSourceCode\";var ButtonsIconOnly=/*#__PURE__*/function(_React$Component){_inherits(ButtonsIconOnly,_React$Component);var _super=_createSuper(ButtonsIconOnly);function ButtonsIconOnly(){var _this;_classCallCheck(this,ButtonsIconOnly);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeTab:\"1\"};_this.toggleTab=function(tab){if(_this.state.activeTab!==tab){_this.setState({activeTab:tab});}};return _this;}_createClass(ButtonsIconOnly,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(CardTitle,null,\"Icon Only\"),/*#__PURE__*/React.createElement(\"div\",{className:\"views\"},/*#__PURE__*/React.createElement(Nav,{tabs:true},/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{className:classnames({active:this.state.activeTab===\"1\"}),onClick:function onClick(){_this2.toggleTab(\"1\");}},/*#__PURE__*/React.createElement(Eye,{size:15}))),/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{className:classnames({active:this.state.activeTab===\"2\"}),onClick:function onClick(){_this2.toggleTab(\"2\");}},/*#__PURE__*/React.createElement(Code,{size:15})))))),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",null,\"You can use \",/*#__PURE__*/React.createElement(\"code\",null,\".btn-icon\"),\". you can create a rounded button by using \",/*#__PURE__*/React.createElement(\"code\",null,\".rounded-circle\"),\" with\",/*#__PURE__*/React.createElement(\"code\",null,\".btn-icon\"),\". You can only use \",/*#__PURE__*/React.createElement(\"code\",null,\".btn-icon\"),\"when you only want icon in your button\"),/*#__PURE__*/React.createElement(TabContent,{activeTab:this.state.activeTab},/*#__PURE__*/React.createElement(TabPane,{tabId:\"1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline-block mr-1 mb-1\"},\" \",/*#__PURE__*/React.createElement(Button.Ripple,{className:\"btn-icon\",outline:true,color:\"primary\"},/*#__PURE__*/React.createElement(Search,{size:16}))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline-block mr-1 mb-1\"},\" \",/*#__PURE__*/React.createElement(Button.Ripple,{className:\"btn-icon\",color:\"warning\"},/*#__PURE__*/React.createElement(Inbox,{size:16}))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline-block mr-1 mb-1\"},\" \",/*#__PURE__*/React.createElement(Button.Ripple,{className:\"btn-icon\",color:\"flat-success\"},/*#__PURE__*/React.createElement(Camera,{size:16}))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline-block mr-1 mb-1\"},\" \",/*#__PURE__*/React.createElement(Button.Ripple,{className:\"btn-icon\",outline:true,color:\"primary\",disabled:true},/*#__PURE__*/React.createElement(Search,{size:16}))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline-block mr-1 mb-1\"},\" \",/*#__PURE__*/React.createElement(Button.Ripple,{className:\"btn-icon rounded-circle\",outline:true,color:\"primary\"},/*#__PURE__*/React.createElement(Search,{size:16}))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline-block mr-1 mb-1\"},\" \",/*#__PURE__*/React.createElement(Button.Ripple,{className:\"btn-icon rounded-circle\",color:\"warning\"},/*#__PURE__*/React.createElement(Inbox,{size:16}))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline-block mr-1 mb-1\"},\" \",/*#__PURE__*/React.createElement(Button.Ripple,{className:\"btn-icon rounded-circle\",color:\"flat-success\"},/*#__PURE__*/React.createElement(Camera,{size:16}))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline-block mr-1 mb-1\"},\" \",/*#__PURE__*/React.createElement(Button.Ripple,{className:\"btn-icon rounded-circle\",outline:true,color:\"primary\",disabled:true},/*#__PURE__*/React.createElement(Search,{size:16})))),/*#__PURE__*/React.createElement(TabPane,{className:\"component-code\",tabId:\"2\"},iconOnlyButtons)))));}}]);return ButtonsIconOnly;}(React.Component);export default ButtonsIconOnly;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/components/reactstrap/buttons/ButtonsIconOnly.js"],"names":["React","Button","Card","CardHeader","CardBody","CardTitle","TabContent","TabPane","Nav","NavItem","NavLink","classnames","Eye","Code","Search","Inbox","Camera","iconOnlyButtons","ButtonsIconOnly","state","activeTab","toggleTab","tab","setState","active","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, Search, Inbox, Camera } from \"react-feather\"\nimport { iconOnlyButtons } from \"./ButtonsSourceCode\"\n\nclass ButtonsIconOnly extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Icon Only</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              You can use <code>.btn-icon</code>. you can create a rounded\n              button by using <code>.rounded-circle</code> with\n              <code>.btn-icon</code>. You can only use <code>.btn-icon</code>\n              when you only want icon in your button\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple className=\"btn-icon\" outline color=\"primary\">\n                    <Search size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple className=\"btn-icon\" color=\"warning\">\n                    <Inbox size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple className=\"btn-icon\" color=\"flat-success\">\n                    <Camera size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple\n                    className=\"btn-icon\"\n                    outline\n                    color=\"primary\"\n                    disabled\n                  >\n                    <Search size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple\n                    className=\"btn-icon rounded-circle\"\n                    outline\n                    color=\"primary\"\n                  >\n                    <Search size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple\n                    className=\"btn-icon rounded-circle\"\n                    color=\"warning\"\n                  >\n                    <Inbox size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple\n                    className=\"btn-icon rounded-circle\"\n                    color=\"flat-success\"\n                  >\n                    <Camera size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple\n                    className=\"btn-icon rounded-circle\"\n                    outline\n                    color=\"primary\"\n                    disabled\n                  >\n                    <Search size={16} />\n                  </Button.Ripple>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {iconOnlyButtons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ButtonsIconOnly\n"]},"metadata":{},"sourceType":"module"}