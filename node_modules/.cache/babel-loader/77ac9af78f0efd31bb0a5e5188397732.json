{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport isRequiredIf from 'react-proptype-conditional-require';\nimport Popper from 'popper.js';\nimport deepmerge from 'deepmerge';\nimport is from 'is-lite';\nimport treeChanges from 'tree-changes';\nimport ReactDOM from 'react-dom';\nimport ExecutionEnvironment from 'exenv';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nvar DEFAULTS = {\n  flip: {\n    padding: 20\n  },\n  preventOverflow: {\n    padding: 10\n  }\n};\nvar STATUS = {\n  INIT: 'init',\n  IDLE: 'idle',\n  OPENING: 'opening',\n  OPEN: 'open',\n  CLOSING: 'closing',\n  ERROR: 'error'\n};\nvar canUseDOM = ExecutionEnvironment.canUseDOM;\nvar isReact16 = ReactDOM.createPortal !== undefined;\n\nfunction isMobile() {\n  return 'ontouchstart' in window && /Mobi/.test(navigator.userAgent);\n}\n/**\n* Log method calls if debug is enabled\n*\n* @private\n* @param {Object}       arg\n* @param {string}       arg.title    - The title the logger was called from\n* @param {Object|Array} [arg.data]   - The data to be logged\n* @param {boolean}      [arg.warn]  - If true, the message will be a warning\n* @param {boolean}      [arg.debug] - Nothing will be logged unless debug is true\n*/\n\n\nfunction log(_ref) {\n  var title = _ref.title,\n      data = _ref.data,\n      _ref$warn = _ref.warn,\n      warn = _ref$warn === void 0 ? false : _ref$warn,\n      _ref$debug = _ref.debug,\n      debug = _ref$debug === void 0 ? false : _ref$debug;\n  /* eslint-disable no-console */\n\n  var logFn = warn ? console.warn || console.error : console.log;\n\n  if (debug && title && data) {\n    console.groupCollapsed(\"%creact-floater: \".concat(title), 'color: #9b00ff; font-weight: bold; font-size: 12px;');\n\n    if (Array.isArray(data)) {\n      data.forEach(function (d) {\n        if (is.plainObject(d) && d.key) {\n          logFn.apply(console, [d.key, d.value]);\n        } else {\n          logFn.apply(console, [d]);\n        }\n      });\n    } else {\n      logFn.apply(console, [data]);\n    }\n\n    console.groupEnd();\n  }\n  /* eslint-enable */\n\n}\n\nfunction on(element, event, cb) {\n  var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  element.addEventListener(event, cb, capture);\n}\n\nfunction off(element, event, cb) {\n  var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  element.removeEventListener(event, cb, capture);\n}\n\nfunction once(element, event, cb) {\n  var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  var _nextCB; // eslint-disable-next-line prefer-const\n\n\n  _nextCB = function nextCB(e) {\n    cb(e);\n    off(element, event, _nextCB);\n  };\n\n  on(element, event, _nextCB, capture);\n}\n\nfunction noop() {}\n\nvar ReactFloaterPortal = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactFloaterPortal, _React$Component);\n\n  function ReactFloaterPortal(props) {\n    var _this;\n\n    _classCallCheck(this, ReactFloaterPortal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactFloaterPortal).call(this, props));\n    if (!canUseDOM) return _possibleConstructorReturn(_this);\n    _this.node = document.createElement('div');\n\n    if (props.id) {\n      _this.node.id = props.id;\n    }\n\n    if (props.zIndex) {\n      _this.node.style.zIndex = props.zIndex;\n    }\n\n    document.body.appendChild(_this.node);\n    return _this;\n  }\n\n  _createClass(ReactFloaterPortal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!canUseDOM) return;\n\n      if (!isReact16) {\n        this.renderPortal();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!canUseDOM) return;\n\n      if (!isReact16) {\n        this.renderPortal();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (!canUseDOM || !this.node) return;\n\n      if (!isReact16) {\n        ReactDOM.unmountComponentAtNode(this.node);\n      }\n\n      document.body.removeChild(this.node);\n    }\n  }, {\n    key: \"renderPortal\",\n    value: function renderPortal() {\n      if (!canUseDOM) return null;\n      var _this$props = this.props,\n          children = _this$props.children,\n          setRef = _this$props.setRef;\n      /* istanbul ignore else */\n\n      if (isReact16) {\n        return ReactDOM.createPortal(children, this.node);\n      }\n\n      var portal = ReactDOM.unstable_renderSubtreeIntoContainer(this, children.length > 1 ? React.createElement(\"div\", null, children) : children[0], this.node);\n      setRef(portal);\n      return null;\n    }\n  }, {\n    key: \"renderReact16\",\n    value: function renderReact16() {\n      var _this$props2 = this.props,\n          hasChildren = _this$props2.hasChildren,\n          placement = _this$props2.placement,\n          target = _this$props2.target;\n\n      if (!hasChildren) {\n        if (target || placement === 'center') {\n          return this.renderPortal();\n        }\n\n        return null;\n      }\n\n      return this.renderPortal();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!isReact16) {\n        return null;\n      }\n\n      return this.renderReact16();\n    }\n  }]);\n\n  return ReactFloaterPortal;\n}(React.Component);\n\n_defineProperty(ReactFloaterPortal, \"propTypes\", {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]),\n  hasChildren: PropTypes.bool,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  placement: PropTypes.string,\n  setRef: PropTypes.func.isRequired,\n  target: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  zIndex: PropTypes.number\n});\n\nvar FloaterArrow = /*#__PURE__*/function (_React$Component) {\n  _inherits(FloaterArrow, _React$Component);\n\n  function FloaterArrow() {\n    _classCallCheck(this, FloaterArrow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FloaterArrow).apply(this, arguments));\n  }\n\n  _createClass(FloaterArrow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placement = _this$props.placement,\n          setArrowRef = _this$props.setArrowRef,\n          styles = _this$props.styles;\n      var _styles$arrow = styles.arrow,\n          color = _styles$arrow.color,\n          display = _styles$arrow.display,\n          length = _styles$arrow.length,\n          margin = _styles$arrow.margin,\n          position = _styles$arrow.position,\n          spread = _styles$arrow.spread;\n      var arrowStyles = {\n        display: display,\n        position: position\n      };\n      var points;\n      var x = spread;\n      var y = length;\n      /* istanbul ignore else */\n\n      if (placement.startsWith('top')) {\n        points = \"0,0 \".concat(x / 2, \",\").concat(y, \" \").concat(x, \",0\");\n        arrowStyles.bottom = 0;\n        arrowStyles.marginLeft = margin;\n        arrowStyles.marginRight = margin;\n      } else if (placement.startsWith('bottom')) {\n        points = \"\".concat(x, \",\").concat(y, \" \").concat(x / 2, \",0 0,\").concat(y);\n        arrowStyles.top = 0;\n        arrowStyles.marginLeft = margin;\n        arrowStyles.marginRight = margin;\n      } else if (placement.startsWith('left')) {\n        y = spread;\n        x = length;\n        points = \"0,0 \".concat(x, \",\").concat(y / 2, \" 0,\").concat(y);\n        arrowStyles.right = 0;\n        arrowStyles.marginTop = margin;\n        arrowStyles.marginBottom = margin;\n      } else if (placement.startsWith('right')) {\n        y = spread;\n        x = length;\n        points = \"\".concat(x, \",\").concat(y, \" \").concat(x, \",0 0,\").concat(y / 2);\n        arrowStyles.left = 0;\n        arrowStyles.marginTop = margin;\n        arrowStyles.marginBottom = margin;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"__floater__arrow\",\n        style: this.parentStyle\n      }, React.createElement(\"span\", {\n        ref: setArrowRef,\n        style: arrowStyles\n      }, React.createElement(\"svg\", {\n        width: x,\n        height: y,\n        version: \"1.1\",\n        xmlns: \"http://www.w3.org/2000/svg\"\n      }, React.createElement(\"polygon\", {\n        points: points,\n        fill: color\n      }))));\n    }\n  }, {\n    key: \"parentStyle\",\n    get: function get() {\n      var _this$props2 = this.props,\n          placement = _this$props2.placement,\n          styles = _this$props2.styles;\n      var length = styles.arrow.length;\n      var arrow = {\n        pointerEvents: 'none',\n        position: 'absolute',\n        width: '100%'\n      };\n      /* istanbul ignore else */\n\n      if (placement.startsWith('top')) {\n        arrow.bottom = 0;\n        arrow.left = 0;\n        arrow.right = 0;\n        arrow.height = length;\n      } else if (placement.startsWith('bottom')) {\n        arrow.left = 0;\n        arrow.right = 0;\n        arrow.top = 0;\n        arrow.height = length;\n      } else if (placement.startsWith('left')) {\n        arrow.right = 0;\n        arrow.top = 0;\n        arrow.bottom = 0;\n      } else if (placement.startsWith('right')) {\n        arrow.left = 0;\n        arrow.top = 0;\n      }\n\n      return arrow;\n    }\n  }]);\n\n  return FloaterArrow;\n}(React.Component);\n\n_defineProperty(FloaterArrow, \"propTypes\", {\n  placement: PropTypes.string.isRequired,\n  setArrowRef: PropTypes.func.isRequired,\n  styles: PropTypes.object.isRequired\n});\n\nvar FloaterCloseBtn = function FloaterCloseBtn(_ref) {\n  var handleClick = _ref.handleClick,\n      styles = _ref.styles;\n\n  var color = styles.color,\n      height = styles.height,\n      width = styles.width,\n      style = _objectWithoutProperties(styles, [\"color\", \"height\", \"width\"]);\n\n  return React.createElement(\"button\", {\n    \"aria-label\": \"close\",\n    onClick: handleClick,\n    style: style,\n    type: \"button\"\n  }, React.createElement(\"svg\", {\n    width: \"\".concat(width, \"px\"),\n    height: \"\".concat(height, \"px\"),\n    viewBox: \"0 0 18 18\",\n    version: \"1.1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    preserveAspectRatio: \"xMidYMid\"\n  }, React.createElement(\"g\", null, React.createElement(\"path\", {\n    d: \"M8.13911129,9.00268191 L0.171521827,17.0258467 C-0.0498027049,17.248715 -0.0498027049,17.6098394 0.171521827,17.8327545 C0.28204354,17.9443526 0.427188206,17.9998706 0.572051765,17.9998706 C0.71714958,17.9998706 0.862013139,17.9443526 0.972581703,17.8327545 L9.0000937,9.74924618 L17.0276057,17.8327545 C17.1384085,17.9443526 17.2832721,17.9998706 17.4281356,17.9998706 C17.5729992,17.9998706 17.718097,17.9443526 17.8286656,17.8327545 C18.0499901,17.6098862 18.0499901,17.2487618 17.8286656,17.0258467 L9.86135722,9.00268191 L17.8340066,0.973848225 C18.0553311,0.750979934 18.0553311,0.389855532 17.8340066,0.16694039 C17.6126821,-0.0556467968 17.254037,-0.0556467968 17.0329467,0.16694039 L9.00042166,8.25611765 L0.967006424,0.167268345 C0.745681892,-0.0553188426 0.387317931,-0.0553188426 0.165993399,0.167268345 C-0.0553311331,0.390136635 -0.0553311331,0.751261038 0.165993399,0.974176179 L8.13920499,9.00268191 L8.13911129,9.00268191 Z\",\n    fill: color\n  }))));\n};\n\nFloaterCloseBtn.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  styles: PropTypes.object.isRequired\n};\n\nvar FloaterContainer = function FloaterContainer(_ref) {\n  var content = _ref.content,\n      footer = _ref.footer,\n      handleClick = _ref.handleClick,\n      open = _ref.open,\n      positionWrapper = _ref.positionWrapper,\n      showCloseButton = _ref.showCloseButton,\n      title = _ref.title,\n      styles = _ref.styles;\n  var output = {\n    content: React.isValidElement(content) ? content : React.createElement(\"div\", {\n      className: \"__floater__content\",\n      style: styles.content\n    }, content)\n  };\n\n  if (title) {\n    output.title = React.isValidElement(title) ? title : React.createElement(\"div\", {\n      className: \"__floater__title\",\n      style: styles.title\n    }, title);\n  }\n\n  if (footer) {\n    output.footer = React.isValidElement(footer) ? footer : React.createElement(\"div\", {\n      className: \"__floater__footer\",\n      style: styles.footer\n    }, footer);\n  }\n\n  if ((showCloseButton || positionWrapper) && !is[\"boolean\"](open)) {\n    output.close = React.createElement(FloaterCloseBtn, {\n      styles: styles.close,\n      handleClick: handleClick\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"__floater__container\",\n    style: styles.container\n  }, output.close, output.title, output.content, output.footer);\n};\n\nFloaterContainer.propTypes = {\n  content: PropTypes.node.isRequired,\n  footer: PropTypes.node,\n  handleClick: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n  positionWrapper: PropTypes.bool.isRequired,\n  showCloseButton: PropTypes.bool.isRequired,\n  styles: PropTypes.object.isRequired,\n  title: PropTypes.node\n};\n\nvar Floater = /*#__PURE__*/function (_React$Component) {\n  _inherits(Floater, _React$Component);\n\n  function Floater() {\n    _classCallCheck(this, Floater);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Floater).apply(this, arguments));\n  }\n\n  _createClass(Floater, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          component = _this$props.component,\n          closeFn = _this$props.handleClick,\n          hideArrow = _this$props.hideArrow,\n          setFloaterRef = _this$props.setFloaterRef,\n          status = _this$props.status;\n      var output = {};\n      var classes = ['__floater'];\n\n      if (component) {\n        if (React.isValidElement(component)) {\n          output.content = React.cloneElement(component, {\n            closeFn: closeFn\n          });\n        } else {\n          output.content = component({\n            closeFn: closeFn\n          });\n        }\n      } else {\n        output.content = React.createElement(FloaterContainer, this.props);\n      }\n\n      if (status === STATUS.OPEN) {\n        classes.push('__floater__open');\n      }\n\n      if (!hideArrow) {\n        output.arrow = React.createElement(FloaterArrow, this.props);\n      }\n\n      return React.createElement(\"div\", {\n        ref: setFloaterRef,\n        className: classes.join(' '),\n        style: this.style\n      }, React.createElement(\"div\", {\n        className: \"__floater__body\"\n      }, output.content, output.arrow));\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      var _this$props2 = this.props,\n          disableAnimation = _this$props2.disableAnimation,\n          component = _this$props2.component,\n          placement = _this$props2.placement,\n          hideArrow = _this$props2.hideArrow,\n          status = _this$props2.status,\n          styles = _this$props2.styles;\n      var length = styles.arrow.length,\n          floater = styles.floater,\n          floaterCentered = styles.floaterCentered,\n          floaterClosing = styles.floaterClosing,\n          floaterOpening = styles.floaterOpening,\n          floaterWithAnimation = styles.floaterWithAnimation,\n          floaterWithComponent = styles.floaterWithComponent;\n      var element = {};\n\n      if (!hideArrow) {\n        if (placement.startsWith('top')) {\n          element.padding = \"0 0 \".concat(length, \"px\");\n        } else if (placement.startsWith('bottom')) {\n          element.padding = \"\".concat(length, \"px 0 0\");\n        } else if (placement.startsWith('left')) {\n          element.padding = \"0 \".concat(length, \"px 0 0\");\n        } else if (placement.startsWith('right')) {\n          element.padding = \"0 0 0 \".concat(length, \"px\");\n        }\n      }\n\n      if ([STATUS.OPENING, STATUS.OPEN].indexOf(status) !== -1) {\n        element = _objectSpread2({}, element, {}, floaterOpening);\n      }\n\n      if (status === STATUS.CLOSING) {\n        element = _objectSpread2({}, element, {}, floaterClosing);\n      }\n\n      if (status === STATUS.OPEN && !disableAnimation) {\n        element = _objectSpread2({}, element, {}, floaterWithAnimation);\n      }\n\n      if (placement === 'center') {\n        element = _objectSpread2({}, element, {}, floaterCentered);\n      }\n\n      if (component) {\n        element = _objectSpread2({}, element, {}, floaterWithComponent);\n      }\n\n      return _objectSpread2({}, floater, {}, element);\n    }\n  }]);\n\n  return Floater;\n}(React.Component);\n\n_defineProperty(Floater, \"propTypes\", {\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  content: PropTypes.node,\n  disableAnimation: PropTypes.bool.isRequired,\n  footer: PropTypes.node,\n  handleClick: PropTypes.func.isRequired,\n  hideArrow: PropTypes.bool.isRequired,\n  open: PropTypes.bool,\n  placement: PropTypes.string.isRequired,\n  positionWrapper: PropTypes.bool.isRequired,\n  setArrowRef: PropTypes.func.isRequired,\n  setFloaterRef: PropTypes.func.isRequired,\n  showCloseButton: PropTypes.bool,\n  status: PropTypes.string.isRequired,\n  styles: PropTypes.object.isRequired,\n  title: PropTypes.node\n});\n\nvar ReactFloaterWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactFloaterWrapper, _React$Component);\n\n  function ReactFloaterWrapper() {\n    _classCallCheck(this, ReactFloaterWrapper);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ReactFloaterWrapper).apply(this, arguments));\n  }\n\n  _createClass(ReactFloaterWrapper, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          handleClick = _this$props.handleClick,\n          handleMouseEnter = _this$props.handleMouseEnter,\n          handleMouseLeave = _this$props.handleMouseLeave,\n          setChildRef = _this$props.setChildRef,\n          setWrapperRef = _this$props.setWrapperRef,\n          style = _this$props.style,\n          styles = _this$props.styles;\n      var element;\n      /* istanbul ignore else */\n\n      if (children) {\n        if (React.Children.count(children) === 1) {\n          if (!React.isValidElement(children)) {\n            element = React.createElement(\"span\", null, children);\n          } else {\n            var refProp = is[\"function\"](children.type) ? 'innerRef' : 'ref';\n            element = React.cloneElement(React.Children.only(children), _defineProperty({}, refProp, setChildRef));\n          }\n        } else {\n          element = children;\n        }\n      }\n\n      if (!element) {\n        return null;\n      }\n\n      return React.createElement(\"span\", {\n        ref: setWrapperRef,\n        style: _objectSpread2({}, styles, {}, style),\n        onClick: handleClick,\n        onMouseEnter: handleMouseEnter,\n        onMouseLeave: handleMouseLeave\n      }, element);\n    }\n  }]);\n\n  return ReactFloaterWrapper;\n}(React.Component);\n\n_defineProperty(ReactFloaterWrapper, \"propTypes\", {\n  children: PropTypes.node,\n  handleClick: PropTypes.func.isRequired,\n  handleMouseEnter: PropTypes.func.isRequired,\n  handleMouseLeave: PropTypes.func.isRequired,\n  setChildRef: PropTypes.func.isRequired,\n  setWrapperRef: PropTypes.func.isRequired,\n  style: PropTypes.object,\n  styles: PropTypes.object.isRequired\n});\n\nvar defaultOptions = {\n  zIndex: 100\n};\n\nfunction getStyles(styles) {\n  var options = deepmerge(defaultOptions, styles.options || {});\n  return {\n    wrapper: {\n      cursor: 'help',\n      display: 'inline-flex',\n      flexDirection: 'column',\n      zIndex: options.zIndex\n    },\n    wrapperPosition: {\n      left: -1000,\n      position: 'absolute',\n      top: -1000,\n      visibility: 'hidden'\n    },\n    floater: {\n      display: 'inline-block',\n      filter: 'drop-shadow(0 0 3px rgba(0, 0, 0, 0.3))',\n      maxWidth: 300,\n      opacity: 0,\n      position: 'relative',\n      transition: 'opacity 0.3s',\n      visibility: 'hidden',\n      zIndex: options.zIndex\n    },\n    floaterOpening: {\n      opacity: 1,\n      visibility: 'visible'\n    },\n    floaterWithAnimation: {\n      opacity: 1,\n      transition: 'opacity 0.3s, transform 0.2s',\n      visibility: 'visible'\n    },\n    floaterWithComponent: {\n      maxWidth: '100%'\n    },\n    floaterClosing: {\n      opacity: 0,\n      visibility: 'visible'\n    },\n    floaterCentered: {\n      left: '50%',\n      position: 'fixed',\n      top: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    container: {\n      backgroundColor: '#fff',\n      color: '#666',\n      minHeight: 60,\n      minWidth: 200,\n      padding: 20,\n      position: 'relative',\n      zIndex: 10\n    },\n    title: {\n      borderBottom: '1px solid #555',\n      color: '#555',\n      fontSize: 18,\n      marginBottom: 5,\n      paddingBottom: 6,\n      paddingRight: 18\n    },\n    content: {\n      fontSize: 15\n    },\n    close: {\n      backgroundColor: 'transparent',\n      border: 0,\n      borderRadius: 0,\n      color: '#555',\n      fontSize: 0,\n      height: 15,\n      outline: 'none',\n      padding: 10,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: 15,\n      WebkitAppearance: 'none'\n    },\n    footer: {\n      borderTop: '1px solid #ccc',\n      fontSize: 13,\n      marginTop: 10,\n      paddingTop: 5\n    },\n    arrow: {\n      color: '#fff',\n      display: 'inline-flex',\n      length: 16,\n      margin: 8,\n      position: 'absolute',\n      spread: 32\n    },\n    options: options\n  };\n}\n\nvar POSITIONING_PROPS = ['position', 'top', 'right', 'bottom', 'left'];\n\nvar ReactFloater = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactFloater, _React$Component);\n\n  function ReactFloater(props) {\n    var _this;\n\n    _classCallCheck(this, ReactFloater);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactFloater).call(this, props));\n    /* istanbul ignore else */\n\n    _defineProperty(_assertThisInitialized(_this), \"setArrowRef\", function (ref) {\n      _this.arrowRef = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setChildRef\", function (ref) {\n      _this.childRef = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setFloaterRef\", function (ref) {\n      if (!_this.floaterRef) {\n        _this.floaterRef = ref;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setWrapperRef\", function (ref) {\n      _this.wrapperRef = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTransitionEnd\", function () {\n      var status = _this.state.status;\n      var callback = _this.props.callback;\n      /* istanbul ignore else */\n\n      if (_this.wrapperPopper) {\n        _this.wrapperPopper.instance.update();\n      }\n\n      _this.setState({\n        status: status === STATUS.OPENING ? STATUS.OPEN : STATUS.IDLE\n      }, function () {\n        var newStatus = _this.state.status;\n        callback(newStatus === STATUS.OPEN ? 'open' : 'close', _this.props);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function () {\n      var _this$props = _this.props,\n          event = _this$props.event,\n          open = _this$props.open;\n      if (is[\"boolean\"](open)) return;\n      var _this$state = _this.state,\n          positionWrapper = _this$state.positionWrapper,\n          status = _this$state.status;\n      /* istanbul ignore else */\n\n      if (_this.event === 'click' || _this.event === 'hover' && positionWrapper) {\n        log({\n          title: 'click',\n          data: [{\n            event: event,\n            status: status === STATUS.OPEN ? 'closing' : 'opening'\n          }],\n          debug: _this.debug\n        });\n\n        _this.toggle();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseEnter\", function () {\n      var _this$props2 = _this.props,\n          event = _this$props2.event,\n          open = _this$props2.open;\n      if (is[\"boolean\"](open) || isMobile()) return;\n      var status = _this.state.status;\n      /* istanbul ignore else */\n\n      if (_this.event === 'hover' && status === STATUS.IDLE) {\n        log({\n          title: 'mouseEnter',\n          data: [{\n            key: 'originalEvent',\n            value: event\n          }],\n          debug: _this.debug\n        });\n        clearTimeout(_this.eventDelayTimeout);\n\n        _this.toggle();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseLeave\", function () {\n      var _this$props3 = _this.props,\n          event = _this$props3.event,\n          eventDelay = _this$props3.eventDelay,\n          open = _this$props3.open;\n      if (is[\"boolean\"](open) || isMobile()) return;\n      var _this$state2 = _this.state,\n          status = _this$state2.status,\n          positionWrapper = _this$state2.positionWrapper;\n      /* istanbul ignore else */\n\n      if (_this.event === 'hover') {\n        log({\n          title: 'mouseLeave',\n          data: [{\n            key: 'originalEvent',\n            value: event\n          }],\n          debug: _this.debug\n        });\n\n        if (!eventDelay) {\n          _this.toggle(STATUS.IDLE);\n        } else if ([STATUS.OPENING, STATUS.OPEN].indexOf(status) !== -1 && !positionWrapper && !_this.eventDelayTimeout) {\n          _this.eventDelayTimeout = setTimeout(function () {\n            delete _this.eventDelayTimeout;\n\n            _this.toggle();\n          }, eventDelay * 1000);\n        }\n      }\n    });\n\n    _this.state = {\n      currentPlacement: props.placement,\n      positionWrapper: props.wrapperOptions.position && !!props.target,\n      status: STATUS.INIT,\n      statusWrapper: STATUS.INIT\n    };\n    _this._isMounted = false;\n\n    if (canUseDOM) {\n      window.addEventListener('load', function () {\n        if (_this.popper) {\n          _this.popper.instance.update();\n        }\n\n        if (_this.wrapperPopper) {\n          _this.wrapperPopper.instance.update();\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(ReactFloater, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!canUseDOM) return;\n      var positionWrapper = this.state.positionWrapper;\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          open = _this$props5.open,\n          target = _this$props5.target;\n      this._isMounted = true;\n      log({\n        title: 'init',\n        data: {\n          hasChildren: !!children,\n          hasTarget: !!target,\n          isControlled: is[\"boolean\"](open),\n          positionWrapper: positionWrapper,\n          target: this.target,\n          floater: this.floaterRef\n        },\n        debug: this.debug\n      });\n      this.initPopper();\n      if (!children && target && !is[\"boolean\"](open)) ;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!canUseDOM) return;\n      var _this$props6 = this.props,\n          autoOpen = _this$props6.autoOpen,\n          open = _this$props6.open,\n          target = _this$props6.target,\n          wrapperOptions = _this$props6.wrapperOptions;\n\n      var _treeChanges = treeChanges(prevState, this.state),\n          changedFrom = _treeChanges.changedFrom,\n          changedTo = _treeChanges.changedTo;\n\n      if (prevProps.open !== open) {\n        var forceStatus; // always follow `open` in controlled mode\n\n        if (is[\"boolean\"](open)) {\n          forceStatus = open ? STATUS.OPENING : STATUS.CLOSING;\n        }\n\n        this.toggle(forceStatus);\n      }\n\n      if (prevProps.wrapperOptions.position !== wrapperOptions.position || prevProps.target !== target) {\n        this.changeWrapperPosition(this.props);\n      }\n\n      if (changedTo('status', STATUS.IDLE) && open) {\n        this.toggle(STATUS.OPEN);\n      } else if (changedFrom('status', STATUS.INIT, STATUS.IDLE) && autoOpen) {\n        this.toggle(STATUS.OPEN);\n      }\n\n      if (this.popper && changedTo('status', STATUS.OPENING)) {\n        this.popper.instance.update();\n      }\n\n      if (this.floaterRef && (changedTo('status', STATUS.OPENING) || changedTo('status', STATUS.CLOSING))) {\n        once(this.floaterRef, 'transitionend', this.handleTransitionEnd);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (!canUseDOM) return;\n      this._isMounted = false;\n\n      if (this.popper) {\n        this.popper.instance.destroy();\n      }\n\n      if (this.wrapperPopper) {\n        this.wrapperPopper.instance.destroy();\n      }\n    }\n  }, {\n    key: \"initPopper\",\n    value: function initPopper() {\n      var _this2 = this;\n\n      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.target;\n      var positionWrapper = this.state.positionWrapper;\n      var _this$props7 = this.props,\n          disableFlip = _this$props7.disableFlip,\n          getPopper = _this$props7.getPopper,\n          hideArrow = _this$props7.hideArrow,\n          offset = _this$props7.offset,\n          placement = _this$props7.placement,\n          wrapperOptions = _this$props7.wrapperOptions;\n      var flipBehavior = placement === 'top' || placement === 'bottom' ? 'flip' : ['right', 'bottom-end', 'top-end', 'left', 'top-start', 'bottom-start'];\n      /* istanbul ignore else */\n\n      if (placement === 'center') {\n        this.setState({\n          status: STATUS.IDLE\n        });\n      } else if (target && this.floaterRef) {\n        var _this$options = this.options,\n            arrow = _this$options.arrow,\n            flip = _this$options.flip,\n            offsetOptions = _this$options.offset,\n            rest = _objectWithoutProperties(_this$options, [\"arrow\", \"flip\", \"offset\"]);\n\n        new Popper(target, this.floaterRef, {\n          placement: placement,\n          modifiers: _objectSpread2({\n            arrow: _objectSpread2({\n              enabled: !hideArrow,\n              element: this.arrowRef\n            }, arrow),\n            flip: _objectSpread2({\n              enabled: !disableFlip,\n              behavior: flipBehavior\n            }, flip),\n            offset: _objectSpread2({\n              offset: \"0, \".concat(offset, \"px\")\n            }, offsetOptions)\n          }, rest),\n          onCreate: function onCreate(data) {\n            _this2.popper = data;\n            getPopper(data, 'floater');\n\n            if (_this2._isMounted) {\n              _this2.setState({\n                currentPlacement: data.placement,\n                status: STATUS.IDLE\n              });\n            }\n\n            if (placement !== data.placement) {\n              setTimeout(function () {\n                data.instance.update();\n              }, 1);\n            }\n          },\n          onUpdate: function onUpdate(data) {\n            _this2.popper = data;\n            var currentPlacement = _this2.state.currentPlacement;\n\n            if (_this2._isMounted && data.placement !== currentPlacement) {\n              _this2.setState({\n                currentPlacement: data.placement\n              });\n            }\n          }\n        });\n      }\n\n      if (positionWrapper) {\n        var wrapperOffset = !is.undefined(wrapperOptions.offset) ? wrapperOptions.offset : 0;\n        new Popper(this.target, this.wrapperRef, {\n          placement: wrapperOptions.placement || placement,\n          modifiers: {\n            arrow: {\n              enabled: false\n            },\n            offset: {\n              offset: \"0, \".concat(wrapperOffset, \"px\")\n            },\n            flip: {\n              enabled: false\n            }\n          },\n          onCreate: function onCreate(data) {\n            _this2.wrapperPopper = data;\n\n            if (_this2._isMounted) {\n              _this2.setState({\n                statusWrapper: STATUS.IDLE\n              });\n            }\n\n            getPopper(data, 'wrapper');\n\n            if (placement !== data.placement) {\n              setTimeout(function () {\n                data.instance.update();\n              }, 1);\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"changeWrapperPosition\",\n    value: function changeWrapperPosition(_ref) {\n      var target = _ref.target,\n          wrapperOptions = _ref.wrapperOptions;\n      this.setState({\n        positionWrapper: wrapperOptions.position && !!target\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(forceStatus) {\n      var status = this.state.status;\n      var nextStatus = status === STATUS.OPEN ? STATUS.CLOSING : STATUS.OPENING;\n\n      if (!is.undefined(forceStatus)) {\n        nextStatus = forceStatus;\n      }\n\n      this.setState({\n        status: nextStatus\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          currentPlacement = _this$state3.currentPlacement,\n          positionWrapper = _this$state3.positionWrapper,\n          status = _this$state3.status;\n      var _this$props8 = this.props,\n          children = _this$props8.children,\n          component = _this$props8.component,\n          content = _this$props8.content,\n          disableAnimation = _this$props8.disableAnimation,\n          footer = _this$props8.footer,\n          hideArrow = _this$props8.hideArrow,\n          id = _this$props8.id,\n          open = _this$props8.open,\n          showCloseButton = _this$props8.showCloseButton,\n          style = _this$props8.style,\n          target = _this$props8.target,\n          title = _this$props8.title;\n      var wrapper = React.createElement(ReactFloaterWrapper, {\n        handleClick: this.handleClick,\n        handleMouseEnter: this.handleMouseEnter,\n        handleMouseLeave: this.handleMouseLeave,\n        setChildRef: this.setChildRef,\n        setWrapperRef: this.setWrapperRef,\n        style: style,\n        styles: this.styles.wrapper\n      }, children);\n      var output = {};\n\n      if (positionWrapper) {\n        output.wrapperInPortal = wrapper;\n      } else {\n        output.wrapperAsChildren = wrapper;\n      }\n\n      return React.createElement(\"span\", null, React.createElement(ReactFloaterPortal, {\n        hasChildren: !!children,\n        id: id,\n        placement: currentPlacement,\n        setRef: this.setFloaterRef,\n        target: target,\n        zIndex: this.styles.options.zIndex\n      }, React.createElement(Floater, {\n        component: component,\n        content: content,\n        disableAnimation: disableAnimation,\n        footer: footer,\n        handleClick: this.handleClick,\n        hideArrow: hideArrow || currentPlacement === 'center',\n        open: open,\n        placement: currentPlacement,\n        positionWrapper: positionWrapper,\n        setArrowRef: this.setArrowRef,\n        setFloaterRef: this.setFloaterRef,\n        showCloseButton: showCloseButton,\n        status: status,\n        styles: this.styles,\n        title: title\n      }), output.wrapperInPortal), output.wrapperAsChildren);\n    }\n  }, {\n    key: \"debug\",\n    get: function get() {\n      var debug = this.props.debug;\n      return debug || !!global.ReactFloaterDebug;\n    }\n  }, {\n    key: \"event\",\n    get: function get() {\n      var _this$props9 = this.props,\n          disableHoverToClick = _this$props9.disableHoverToClick,\n          event = _this$props9.event;\n\n      if (event === 'hover' && isMobile() && !disableHoverToClick) {\n        return 'click';\n      }\n\n      return event;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      var options = this.props.options;\n      return deepmerge(DEFAULTS, options || {});\n    }\n  }, {\n    key: \"styles\",\n    get: function get() {\n      var _this3 = this;\n\n      var _this$state4 = this.state,\n          status = _this$state4.status,\n          positionWrapper = _this$state4.positionWrapper,\n          statusWrapper = _this$state4.statusWrapper;\n      var styles = this.props.styles;\n      var nextStyles = deepmerge(getStyles(styles), styles);\n\n      if (positionWrapper) {\n        var wrapperStyles;\n\n        if (!([STATUS.IDLE].indexOf(status) !== -1) || !([STATUS.IDLE].indexOf(statusWrapper) !== -1)) {\n          wrapperStyles = nextStyles.wrapperPosition;\n        } else {\n          wrapperStyles = this.wrapperPopper.styles;\n        }\n\n        nextStyles.wrapper = _objectSpread2({}, nextStyles.wrapper, {}, wrapperStyles);\n      }\n      /* istanbul ignore else */\n\n\n      if (this.target) {\n        var targetStyles = window.getComputedStyle(this.target);\n        /* istanbul ignore else */\n\n        if (this.wrapperStyles) {\n          nextStyles.wrapper = _objectSpread2({}, nextStyles.wrapper, {}, this.wrapperStyles);\n        } else if (!(['relative', 'static'].indexOf(targetStyles.position) !== -1)) {\n          this.wrapperStyles = {};\n\n          if (!positionWrapper) {\n            POSITIONING_PROPS.forEach(function (d) {\n              _this3.wrapperStyles[d] = targetStyles[d];\n            });\n            nextStyles.wrapper = _objectSpread2({}, nextStyles.wrapper, {}, this.wrapperStyles);\n            this.target.style.position = 'relative';\n            this.target.style.top = 'auto';\n            this.target.style.right = 'auto';\n            this.target.style.bottom = 'auto';\n            this.target.style.left = 'auto';\n          }\n        }\n      }\n\n      return nextStyles;\n    }\n  }, {\n    key: \"target\",\n    get: function get() {\n      if (!canUseDOM) return null;\n      var target = this.props.target;\n\n      if (target) {\n        if (is.domElement(target)) {\n          return target;\n        }\n\n        return document.querySelector(target);\n      }\n\n      return this.childRef || this.wrapperRef;\n    }\n  }]);\n\n  return ReactFloater;\n}(React.Component);\n\n_defineProperty(ReactFloater, \"propTypes\", {\n  autoOpen: PropTypes.bool,\n  callback: PropTypes.func,\n  children: PropTypes.node,\n  component: isRequiredIf(PropTypes.oneOfType([PropTypes.func, PropTypes.element]), function (props) {\n    return !props.content;\n  }),\n  content: isRequiredIf(PropTypes.node, function (props) {\n    return !props.component;\n  }),\n  debug: PropTypes.bool,\n  disableAnimation: PropTypes.bool,\n  disableFlip: PropTypes.bool,\n  disableHoverToClick: PropTypes.bool,\n  event: PropTypes.oneOf(['hover', 'click']),\n  eventDelay: PropTypes.number,\n  footer: PropTypes.node,\n  getPopper: PropTypes.func,\n  hideArrow: PropTypes.bool,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  offset: PropTypes.number,\n  open: PropTypes.bool,\n  options: PropTypes.object,\n  placement: PropTypes.oneOf(['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end', 'auto', 'center']),\n  showCloseButton: PropTypes.bool,\n  style: PropTypes.object,\n  styles: PropTypes.object,\n  target: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.node,\n  wrapperOptions: PropTypes.shape({\n    offset: PropTypes.number,\n    placement: PropTypes.oneOf(['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end', 'auto']),\n    position: PropTypes.bool\n  })\n});\n\n_defineProperty(ReactFloater, \"defaultProps\", {\n  autoOpen: false,\n  callback: noop,\n  debug: false,\n  disableAnimation: false,\n  disableFlip: false,\n  disableHoverToClick: false,\n  event: 'click',\n  eventDelay: 0.4,\n  getPopper: noop,\n  hideArrow: false,\n  offset: 15,\n  placement: 'bottom',\n  showCloseButton: false,\n  styles: {},\n  target: null,\n  wrapperOptions: {\n    position: false\n  }\n});\n\nexport default ReactFloater;","map":null,"metadata":{},"sourceType":"module"}