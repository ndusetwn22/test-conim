{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Card,FormGroup,Input,Badge}from\"reactstrap\";import{X,Search}from\"react-feather\";import PerfectScrollbar from\"react-perfect-scrollbar\";import{connect}from\"react-redux\";import{getChats,getContactChats,searchContacts,markSeenAllMessages}from\"../../../redux/actions/chat/index\";import userImg from\"../../../assets/img/portrait/small/avatar-s-11.jpg\";var ChatSidebar=/*#__PURE__*/function(_React$Component){_inherits(ChatSidebar,_React$Component);var _super=_createSuper(ChatSidebar);function ChatSidebar(){var _this;_classCallCheck(this,ChatSidebar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={chatsContacts:[],contacts:[],messages:[],status:null,value:\"\"};_this.getChatContents=function(){_this.props.getChats();_this.props.getContactChats();};_this.handleOnChange=function(e){_this.setState({value:e.target.value});_this.props.searchContacts(e.target.value);};return _this;}_createClass(ChatSidebar,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.getChatContents();case 2:this.setState({chatsContacts:this.props.chat.chatContacts,contacts:this.props.chat.contacts,chats:this.props.chat.chats,status:this.props.chat.status});case 3:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,contacts=_this$state.contacts,chatsContacts=_this$state.chatsContacts,chats=_this$state.chats,status=_this$state.status,value=_this$state.value;var contactsArr=value.length?this.props.chat.filteredContacts:contacts;var chatsArr=value.length?this.props.chat.filteredChats:chatsContacts;var renderContacts=contactsArr.length>0?contactsArr.map(function(contact){return/*#__PURE__*/React.createElement(\"li\",{key:contact.uid,onClick:function onClick(){_this2.props.handleActiveChat(contact.uid,contact,chats[contact.uid]);_this2.props.markSeenAllMessages(contact.uid);_this2.props.mainSidebar(false);}},/*#__PURE__*/React.createElement(\"div\",{className:\"pr-1\"},/*#__PURE__*/React.createElement(\"span\",{className:\"avatar avatar-md m-0\"},/*#__PURE__*/React.createElement(\"img\",{src:contact.photoURL,alt:contact.displayName,height:\"38\",width:\"38\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"user-chat-info\"},/*#__PURE__*/React.createElement(\"div\",{className:\"contact-info\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"text-bold-600 mb-0\"},contact.displayName),/*#__PURE__*/React.createElement(\"p\",{className:\"truncate\"},contact.about))));}):null;var renderChats=chatsArr&&Array.isArray(chatsArr)?chatsArr.map(function(chat){var lastMsg=chats[chat.uid]&&chats[chat.uid].msg?chats[chat.uid].msg.slice(-1)[0]:null,lastMsgDate=new Date(lastMsg&&lastMsg.time?lastMsg.time:null),lastMsgMonth=lastMsgDate.toLocaleString(\"default\",{month:\"short\"}),lastMsgDay=lastMsgDate.getDate();var pendingMsg=chats[chat.uid]&&chats[chat.uid].msg?chats[chat.uid].msg.filter(function(i){return i.isSeen===false&&i.isSent!==true;}).length:null;var activeID=chats[chat.uid]!==undefined?chats[chat.uid]:null;return/*#__PURE__*/React.createElement(\"li\",{key:chat.uid,onClick:function onClick(){_this2.props.handleActiveChat(chat.uid,chat,activeID);_this2.props.mainSidebar(false);_this2.props.markSeenAllMessages(chat.uid);},className:\"\".concat(_this2.props.activeChatID===chat.uid?\"active\":\"\")},/*#__PURE__*/React.createElement(\"div\",{className:\"pr-1\"},/*#__PURE__*/React.createElement(\"span\",{className:\"avatar avatar-md m-0\"},/*#__PURE__*/React.createElement(\"img\",{src:chat.photoURL,alt:chat.displayName,height:\"38\",width:\"38\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"user-chat-info\"},/*#__PURE__*/React.createElement(\"div\",{className:\"contact-info\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"text-bold-600 mb-0\"},chat.displayName),/*#__PURE__*/React.createElement(\"p\",{className:\"truncate\"},lastMsg?lastMsg.textContent:chat.about)),/*#__PURE__*/React.createElement(\"div\",{className:\"contact-meta d-flex- flex-column\"},/*#__PURE__*/React.createElement(\"span\",{className:\"float-right mb-25\"},lastMsgMonth+\" \"+lastMsgDay),pendingMsg>0?/*#__PURE__*/React.createElement(\"div\",{className:\"unseen-msg\"},/*#__PURE__*/React.createElement(Badge,{className:\"badge-md float-right\",color:\"primary\",pill:true},pendingMsg)):null)));}):null;return/*#__PURE__*/React.createElement(Card,{className:\"sidebar-content h-100\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sidebar-close-icon\",onClick:function onClick(){return _this2.props.mainSidebar(false);}},/*#__PURE__*/React.createElement(X,{size:15})),/*#__PURE__*/React.createElement(\"div\",{className:\"chat-fixed-search\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-profile-toggle position-relative d-inline-flex\"},/*#__PURE__*/React.createElement(\"div\",{className:\"avatar\",onClick:function onClick(){return _this2.props.handleUserSidebar(\"open\");}},/*#__PURE__*/React.createElement(\"img\",{src:userImg,alt:\"User Profile\",height:\"40\",width:\"40\"}),/*#__PURE__*/React.createElement(\"span\",{className:status===\"dnd\"?\"avatar-status-busy\":status===\"away\"?\"avatar-status-away\":status===\"offline\"?\"avatar-status-offline\":\"avatar-status-online\"}))),/*#__PURE__*/React.createElement(FormGroup,{className:\"position-relative has-icon-left mx-1 my-0 w-100\"},/*#__PURE__*/React.createElement(Input,{className:\"round\",type:\"text\",placeholder:\"Search contact or start a new chat\",onChange:function onChange(e){return _this2.handleOnChange(e);},value:value}),/*#__PURE__*/React.createElement(\"div\",{className:\"form-control-position\"},/*#__PURE__*/React.createElement(Search,{size:15}))))),/*#__PURE__*/React.createElement(PerfectScrollbar,{className:\"chat-user-list list-group\",options:{wheelPropagation:false}},/*#__PURE__*/React.createElement(\"h3\",{className:\"primary p-1 mb-0\"},\"Chats\"),/*#__PURE__*/React.createElement(\"ul\",{className:\"chat-users-list-wrapper media-list\"},renderChats),/*#__PURE__*/React.createElement(\"h3\",{className:\"primary p-1 mb-0\"},\"Contacts\"),/*#__PURE__*/React.createElement(\"ul\",{className:\"chat-users-list-wrapper media-list\"},renderContacts)));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.chat.chatContacts.length!==state.chatContacts||props.chat.contacts.length!==state.contacts||props.chat.chats.length!==state.chats||props.chat.status!==state.status){return{chatsContacts:props.chat.chatContacts,contacts:props.chat.contacts,chats:props.chat.chats,status:props.chat.status};}// Return null if the state hasn't changed\nreturn null;}}]);return ChatSidebar;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{chat:state.chatApp.chats};};export default connect(mapStateToProps,{getChats:getChats,getContactChats:getContactChats,searchContacts:searchContacts,markSeenAllMessages:markSeenAllMessages})(ChatSidebar);","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/apps/chat/ChatSidebar.js"],"names":["React","Card","FormGroup","Input","Badge","X","Search","PerfectScrollbar","connect","getChats","getContactChats","searchContacts","markSeenAllMessages","userImg","ChatSidebar","state","chatsContacts","contacts","messages","status","value","getChatContents","props","handleOnChange","e","setState","target","chat","chatContacts","chats","contactsArr","length","filteredContacts","chatsArr","filteredChats","renderContacts","map","contact","uid","handleActiveChat","mainSidebar","photoURL","displayName","about","renderChats","Array","isArray","lastMsg","msg","slice","lastMsgDate","Date","time","lastMsgMonth","toLocaleString","month","lastMsgDay","getDate","pendingMsg","filter","i","isSeen","isSent","activeID","undefined","activeChatID","textContent","handleUserSidebar","wheelPropagation","Component","mapStateToProps","chatApp"],"mappings":"+7BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,SAAf,CAA0BC,KAA1B,CAAiCC,KAAjC,KAA8C,YAA9C,CACA,OAASC,CAAT,CAAYC,MAAZ,KAA0B,eAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OACEC,QADF,CAEEC,eAFF,CAGEC,cAHF,CAIEC,mBAJF,KAKO,mCALP,CAMA,MAAOC,CAAAA,OAAP,KAAoB,oDAApB,C,GAEMC,CAAAA,W,2VAkBJC,K,CAAQ,CACNC,aAAa,CAAE,EADT,CAENC,QAAQ,CAAE,EAFJ,CAGNC,QAAQ,CAAE,EAHJ,CAINC,MAAM,CAAE,IAJF,CAKNC,KAAK,CAAE,EALD,C,OAQRC,e,CAAkB,UAAM,CACtB,MAAKC,KAAL,CAAWb,QAAX,GACA,MAAKa,KAAL,CAAWZ,eAAX,GACD,C,OAYDa,c,CAAiB,SAAAC,CAAC,CAAI,CACpB,MAAKC,QAAL,CAAc,CAAEL,KAAK,CAAEI,CAAC,CAACE,MAAF,CAASN,KAAlB,CAAd,EACA,MAAKE,KAAL,CAAWX,cAAX,CAA0Ba,CAAC,CAACE,MAAF,CAASN,KAAnC,EACD,C,kKAbD,yJACQ,MAAKC,eAAL,EADR,QAEE,KAAKI,QAAL,CAAc,CACZT,aAAa,CAAE,KAAKM,KAAL,CAAWK,IAAX,CAAgBC,YADnB,CAEZX,QAAQ,CAAE,KAAKK,KAAL,CAAWK,IAAX,CAAgBV,QAFd,CAGZY,KAAK,CAAE,KAAKP,KAAL,CAAWK,IAAX,CAAgBE,KAHX,CAIZV,MAAM,CAAE,KAAKG,KAAL,CAAWK,IAAX,CAAgBR,MAJZ,CAAd,EAFF,2D,mIAeA,iBAAS,iBACP,gBAA0D,KAAKJ,KAA/D,CAAQE,QAAR,aAAQA,QAAR,CAAkBD,aAAlB,aAAkBA,aAAlB,CAAiCa,KAAjC,aAAiCA,KAAjC,CAAwCV,MAAxC,aAAwCA,MAAxC,CAAgDC,KAAhD,aAAgDA,KAAhD,CACA,GAAMU,CAAAA,WAAW,CAAGV,KAAK,CAACW,MAAN,CAChB,KAAKT,KAAL,CAAWK,IAAX,CAAgBK,gBADA,CAEhBf,QAFJ,CAGA,GAAMgB,CAAAA,QAAQ,CAAGb,KAAK,CAACW,MAAN,CACb,KAAKT,KAAL,CAAWK,IAAX,CAAgBO,aADH,CAEblB,aAFJ,CAGA,GAAImB,CAAAA,cAAc,CAChBL,WAAW,CAACC,MAAZ,CAAqB,CAArB,CACID,WAAW,CAACM,GAAZ,CAAgB,SAAAC,OAAO,qBACrB,0BACE,GAAG,CAAEA,OAAO,CAACC,GADf,CAEE,OAAO,CAAE,kBAAM,CACb,MAAI,CAAChB,KAAL,CAAWiB,gBAAX,CACEF,OAAO,CAACC,GADV,CAEED,OAFF,CAGER,KAAK,CAACQ,OAAO,CAACC,GAAT,CAHP,EAKA,MAAI,CAAChB,KAAL,CAAWV,mBAAX,CAA+ByB,OAAO,CAACC,GAAvC,EACA,MAAI,CAAChB,KAAL,CAAWkB,WAAX,CAAuB,KAAvB,EACD,CAVH,eAYE,2BAAK,SAAS,CAAC,MAAf,eACE,4BAAM,SAAS,CAAC,sBAAhB,eACE,2BACE,GAAG,CAAEH,OAAO,CAACI,QADf,CAEE,GAAG,CAAEJ,OAAO,CAACK,WAFf,CAGE,MAAM,CAAC,IAHT,CAIE,KAAK,CAAC,IAJR,EADF,CADF,CAZF,cAsBE,2BAAK,SAAS,CAAC,gBAAf,eACE,2BAAK,SAAS,CAAC,cAAf,eACE,0BAAI,SAAS,CAAC,oBAAd,EAAoCL,OAAO,CAACK,WAA5C,CADF,cAEE,yBAAG,SAAS,CAAC,UAAb,EAAyBL,OAAO,CAACM,KAAjC,CAFF,CADF,CAtBF,CADqB,EAAvB,CADJ,CAgCI,IAjCN,CAkCA,GAAIC,CAAAA,WAAW,CACbX,QAAQ,EAAIY,KAAK,CAACC,OAAN,CAAcb,QAAd,CAAZ,CACIA,QAAQ,CAACG,GAAT,CAAa,SAAAT,IAAI,CAAI,CACnB,GAAIoB,CAAAA,OAAO,CACPlB,KAAK,CAACF,IAAI,CAACW,GAAN,CAAL,EAAmBT,KAAK,CAACF,IAAI,CAACW,GAAN,CAAL,CAAgBU,GAAnC,CACInB,KAAK,CAACF,IAAI,CAACW,GAAN,CAAL,CAAgBU,GAAhB,CAAoBC,KAApB,CAA0B,CAAC,CAA3B,EAA8B,CAA9B,CADJ,CAEI,IAHR,CAIEC,WAAW,CAAG,GAAIC,CAAAA,IAAJ,CACZJ,OAAO,EAAIA,OAAO,CAACK,IAAnB,CAA0BL,OAAO,CAACK,IAAlC,CAAyC,IAD7B,CAJhB,CAOEC,YAAY,CAAGH,WAAW,CAACI,cAAZ,CAA2B,SAA3B,CAAsC,CACnDC,KAAK,CAAE,OAD4C,CAAtC,CAPjB,CAUEC,UAAU,CAAGN,WAAW,CAACO,OAAZ,EAVf,CAWA,GAAIC,CAAAA,UAAU,CACZ7B,KAAK,CAACF,IAAI,CAACW,GAAN,CAAL,EAAmBT,KAAK,CAACF,IAAI,CAACW,GAAN,CAAL,CAAgBU,GAAnC,CACInB,KAAK,CAACF,IAAI,CAACW,GAAN,CAAL,CAAgBU,GAAhB,CAAoBW,MAApB,CACE,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,MAAF,GAAa,KAAb,EAAsBD,CAAC,CAACE,MAAF,GAAa,IAAvC,EADH,EAEE/B,MAHN,CAII,IALN,CAMA,GAAIgC,CAAAA,QAAQ,CACVlC,KAAK,CAACF,IAAI,CAACW,GAAN,CAAL,GAAoB0B,SAApB,CAAgCnC,KAAK,CAACF,IAAI,CAACW,GAAN,CAArC,CAAkD,IADpD,CAEA,mBACE,0BACE,GAAG,CAAEX,IAAI,CAACW,GADZ,CAEE,OAAO,CAAE,kBAAM,CACb,MAAI,CAAChB,KAAL,CAAWiB,gBAAX,CAA4BZ,IAAI,CAACW,GAAjC,CAAsCX,IAAtC,CAA4CoC,QAA5C,EACA,MAAI,CAACzC,KAAL,CAAWkB,WAAX,CAAuB,KAAvB,EACA,MAAI,CAAClB,KAAL,CAAWV,mBAAX,CAA+Be,IAAI,CAACW,GAApC,EACD,CANH,CAOE,SAAS,WACP,MAAI,CAAChB,KAAL,CAAW2C,YAAX,GAA4BtC,IAAI,CAACW,GAAjC,CAAuC,QAAvC,CAAkD,EAD3C,CAPX,eAWE,2BAAK,SAAS,CAAC,MAAf,eACE,4BAAM,SAAS,CAAC,sBAAhB,eACE,2BACE,GAAG,CAAEX,IAAI,CAACc,QADZ,CAEE,GAAG,CAAEd,IAAI,CAACe,WAFZ,CAGE,MAAM,CAAC,IAHT,CAIE,KAAK,CAAC,IAJR,EADF,CADF,CAXF,cAqBE,2BAAK,SAAS,CAAC,gBAAf,eACE,2BAAK,SAAS,CAAC,cAAf,eACE,0BAAI,SAAS,CAAC,oBAAd,EAAoCf,IAAI,CAACe,WAAzC,CADF,cAEE,yBAAG,SAAS,CAAC,UAAb,EACGK,OAAO,CAAGA,OAAO,CAACmB,WAAX,CAAyBvC,IAAI,CAACgB,KADxC,CAFF,CADF,cAOE,2BAAK,SAAS,CAAC,kCAAf,eACE,4BAAM,SAAS,CAAC,mBAAhB,EACGU,YAAY,CAAG,GAAf,CAAqBG,UADxB,CADF,CAIGE,UAAU,CAAG,CAAb,cACC,2BAAK,SAAS,CAAC,YAAf,eACE,oBAAC,KAAD,EACE,SAAS,CAAC,sBADZ,CAEE,KAAK,CAAC,SAFR,CAGE,IAAI,KAHN,EAKGA,UALH,CADF,CADD,CAUG,IAdN,CAPF,CArBF,CADF,CAgDD,CApED,CADJ,CAsEI,IAvEN,CAwEA,mBACE,oBAAC,IAAD,EAAM,SAAS,CAAC,uBAAhB,eACE,4BACE,SAAS,CAAC,oBADZ,CAEE,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACpC,KAAL,CAAWkB,WAAX,CAAuB,KAAvB,CAAN,EAFX,eAIE,oBAAC,CAAD,EAAG,IAAI,CAAE,EAAT,EAJF,CADF,cAOE,2BAAK,SAAS,CAAC,mBAAf,eACE,2BAAK,SAAS,CAAC,2BAAf,eACE,2BAAK,SAAS,CAAC,wDAAf,eACE,2BACE,SAAS,CAAC,QADZ,CAEE,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAClB,KAAL,CAAW6C,iBAAX,CAA6B,MAA7B,CAAN,EAFX,eAIE,2BAAK,GAAG,CAAEtD,OAAV,CAAmB,GAAG,CAAC,cAAvB,CAAsC,MAAM,CAAC,IAA7C,CAAkD,KAAK,CAAC,IAAxD,EAJF,cAKE,4BACE,SAAS,CACPM,MAAM,GAAK,KAAX,CACI,oBADJ,CAEIA,MAAM,GAAK,MAAX,CACA,oBADA,CAEAA,MAAM,GAAK,SAAX,CACA,uBADA,CAEA,sBARR,EALF,CADF,CADF,cAoBE,oBAAC,SAAD,EAAW,SAAS,CAAC,iDAArB,eACE,oBAAC,KAAD,EACE,SAAS,CAAC,OADZ,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,oCAHd,CAIE,QAAQ,CAAE,kBAAAK,CAAC,QAAI,CAAA,MAAI,CAACD,cAAL,CAAoBC,CAApB,CAAJ,EAJb,CAKE,KAAK,CAAEJ,KALT,EADF,cAQE,2BAAK,SAAS,CAAC,uBAAf,eACE,oBAAC,MAAD,EAAQ,IAAI,CAAE,EAAd,EADF,CARF,CApBF,CADF,CAPF,cA0CE,oBAAC,gBAAD,EACE,SAAS,CAAC,2BADZ,CAEE,OAAO,CAAE,CACPgD,gBAAgB,CAAE,KADX,CAFX,eAME,0BAAI,SAAS,CAAC,kBAAd,UANF,cAOE,0BAAI,SAAS,CAAC,oCAAd,EAAoDxB,WAApD,CAPF,cAQE,0BAAI,SAAS,CAAC,kBAAd,aARF,cASE,0BAAI,SAAS,CAAC,oCAAd,EACGT,cADH,CATF,CA1CF,CADF,CA0DD,C,0CAzND,kCAAgCb,KAAhC,CAAuCP,KAAvC,CAA8C,CAC5C,GACEO,KAAK,CAACK,IAAN,CAAWC,YAAX,CAAwBG,MAAxB,GAAmChB,KAAK,CAACa,YAAzC,EACAN,KAAK,CAACK,IAAN,CAAWV,QAAX,CAAoBc,MAApB,GAA+BhB,KAAK,CAACE,QADrC,EAEAK,KAAK,CAACK,IAAN,CAAWE,KAAX,CAAiBE,MAAjB,GAA4BhB,KAAK,CAACc,KAFlC,EAGAP,KAAK,CAACK,IAAN,CAAWR,MAAX,GAAsBJ,KAAK,CAACI,MAJ9B,CAKE,CACA,MAAO,CACLH,aAAa,CAAEM,KAAK,CAACK,IAAN,CAAWC,YADrB,CAELX,QAAQ,CAAEK,KAAK,CAACK,IAAN,CAAWV,QAFhB,CAGLY,KAAK,CAAEP,KAAK,CAACK,IAAN,CAAWE,KAHb,CAILV,MAAM,CAAEG,KAAK,CAACK,IAAN,CAAWR,MAJd,CAAP,CAMD,CACD;AACA,MAAO,KAAP,CACD,C,yBAjBuBnB,KAAK,CAACqE,S,EA6NhC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAvD,KAAK,CAAI,CAC/B,MAAO,CACLY,IAAI,CAAEZ,KAAK,CAACwD,OAAN,CAAc1C,KADf,CAAP,CAGD,CAJD,CAKA,cAAerB,CAAAA,OAAO,CAAC8D,eAAD,CAAkB,CACtC7D,QAAQ,CAARA,QADsC,CAEtCC,eAAe,CAAfA,eAFsC,CAGtCC,cAAc,CAAdA,cAHsC,CAItCC,mBAAmB,CAAnBA,mBAJsC,CAAlB,CAAP,CAKZE,WALY,CAAf","sourcesContent":["import React from \"react\"\nimport { Card, FormGroup, Input, Badge } from \"reactstrap\"\nimport { X, Search } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages\n} from \"../../../redux/actions/chat/index\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\n\nclass ChatSidebar extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.chat.chatContacts.length !== state.chatContacts ||\n      props.chat.contacts.length !== state.contacts ||\n      props.chat.chats.length !== state.chats ||\n      props.chat.status !== state.status\n    ) {\n      return {\n        chatsContacts: props.chat.chatContacts,\n        contacts: props.chat.contacts,\n        chats: props.chat.chats,\n        status: props.chat.status\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    chatsContacts: [],\n    contacts: [],\n    messages: [],\n    status: null,\n    value: \"\"\n  }\n\n  getChatContents = () => {\n    this.props.getChats()\n    this.props.getContactChats()\n  }\n\n  async componentDidMount() {\n    await this.getChatContents()\n    this.setState({\n      chatsContacts: this.props.chat.chatContacts,\n      contacts: this.props.chat.contacts,\n      chats: this.props.chat.chats,\n      status: this.props.chat.status\n    })\n  }\n\n  handleOnChange = e => {\n    this.setState({ value: e.target.value })\n    this.props.searchContacts(e.target.value)\n  }\n\n  render() {\n    const { contacts, chatsContacts, chats, status, value } = this.state\n    const contactsArr = value.length\n      ? this.props.chat.filteredContacts\n      : contacts\n    const chatsArr = value.length\n      ? this.props.chat.filteredChats\n      : chatsContacts\n    let renderContacts =\n      contactsArr.length > 0\n        ? contactsArr.map(contact => (\n            <li\n              key={contact.uid}\n              onClick={() => {\n                this.props.handleActiveChat(\n                  contact.uid,\n                  contact,\n                  chats[contact.uid]\n                )\n                this.props.markSeenAllMessages(contact.uid)\n                this.props.mainSidebar(false)\n              }}\n            >\n              <div className=\"pr-1\">\n                <span className=\"avatar avatar-md m-0\">\n                  <img\n                    src={contact.photoURL}\n                    alt={contact.displayName}\n                    height=\"38\"\n                    width=\"38\"\n                  />\n                </span>\n              </div>\n              <div className=\"user-chat-info\">\n                <div className=\"contact-info\">\n                  <h5 className=\"text-bold-600 mb-0\">{contact.displayName}</h5>\n                  <p className=\"truncate\">{contact.about}</p>\n                </div>\n              </div>\n            </li>\n          ))\n        : null\n    let renderChats =\n      chatsArr && Array.isArray(chatsArr)\n        ? chatsArr.map(chat => {\n            let lastMsg =\n                chats[chat.uid] && chats[chat.uid].msg\n                  ? chats[chat.uid].msg.slice(-1)[0]\n                  : null,\n              lastMsgDate = new Date(\n                lastMsg && lastMsg.time ? lastMsg.time : null\n              ),\n              lastMsgMonth = lastMsgDate.toLocaleString(\"default\", {\n                month: \"short\"\n              }),\n              lastMsgDay = lastMsgDate.getDate()\n            let pendingMsg =\n              chats[chat.uid] && chats[chat.uid].msg\n                ? chats[chat.uid].msg.filter(\n                    i => i.isSeen === false && i.isSent !== true\n                  ).length\n                : null\n            let activeID =\n              chats[chat.uid] !== undefined ? chats[chat.uid] : null\n            return (\n              <li\n                key={chat.uid}\n                onClick={() => {\n                  this.props.handleActiveChat(chat.uid, chat, activeID)\n                  this.props.mainSidebar(false)\n                  this.props.markSeenAllMessages(chat.uid)\n                }}\n                className={`${\n                  this.props.activeChatID === chat.uid ? \"active\" : \"\"\n                }`}\n              >\n                <div className=\"pr-1\">\n                  <span className=\"avatar avatar-md m-0\">\n                    <img\n                      src={chat.photoURL}\n                      alt={chat.displayName}\n                      height=\"38\"\n                      width=\"38\"\n                    />\n                  </span>\n                </div>\n                <div className=\"user-chat-info\">\n                  <div className=\"contact-info\">\n                    <h5 className=\"text-bold-600 mb-0\">{chat.displayName}</h5>\n                    <p className=\"truncate\">\n                      {lastMsg ? lastMsg.textContent : chat.about}\n                    </p>\n                  </div>\n                  <div className=\"contact-meta d-flex- flex-column\">\n                    <span className=\"float-right mb-25\">\n                      {lastMsgMonth + \" \" + lastMsgDay}\n                    </span>\n                    {pendingMsg > 0 ? (\n                      <div className=\"unseen-msg\">\n                        <Badge\n                          className=\"badge-md float-right\"\n                          color=\"primary\"\n                          pill\n                        >\n                          {pendingMsg}\n                        </Badge>\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n              </li>\n            )\n          })\n        : null\n    return (\n      <Card className=\"sidebar-content h-100\">\n        <span\n          className=\"sidebar-close-icon\"\n          onClick={() => this.props.mainSidebar(false)}\n        >\n          <X size={15} />\n        </span>\n        <div className=\"chat-fixed-search\">\n          <div className=\"d-flex align-items-center\">\n            <div className=\"sidebar-profile-toggle position-relative d-inline-flex\">\n              <div\n                className=\"avatar\"\n                onClick={() => this.props.handleUserSidebar(\"open\")}\n              >\n                <img src={userImg} alt=\"User Profile\" height=\"40\" width=\"40\" />\n                <span\n                  className={\n                    status === \"dnd\"\n                      ? \"avatar-status-busy\"\n                      : status === \"away\"\n                      ? \"avatar-status-away\"\n                      : status === \"offline\"\n                      ? \"avatar-status-offline\"\n                      : \"avatar-status-online\"\n                  }\n                />\n              </div>\n            </div>\n            <FormGroup className=\"position-relative has-icon-left mx-1 my-0 w-100\">\n              <Input\n                className=\"round\"\n                type=\"text\"\n                placeholder=\"Search contact or start a new chat\"\n                onChange={e => this.handleOnChange(e)}\n                value={value}\n              />\n              <div className=\"form-control-position\">\n                <Search size={15} />\n              </div>\n            </FormGroup>\n          </div>\n        </div>\n        <PerfectScrollbar\n          className=\"chat-user-list list-group\"\n          options={{\n            wheelPropagation: false\n          }}\n        >\n          <h3 className=\"primary p-1 mb-0\">Chats</h3>\n          <ul className=\"chat-users-list-wrapper media-list\">{renderChats}</ul>\n          <h3 className=\"primary p-1 mb-0\">Contacts</h3>\n          <ul className=\"chat-users-list-wrapper media-list\">\n            {renderContacts}\n          </ul>\n        </PerfectScrollbar>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages\n})(ChatSidebar)\n"]},"metadata":{},"sourceType":"module"}