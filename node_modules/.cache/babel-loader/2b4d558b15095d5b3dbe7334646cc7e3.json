{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/views/employees/EmployeesPage.js\";\nimport React from \"react\";\nimport { Row, Col, Spinner } from \"reactstrap\";\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport DataTableEmployees from \"./DataTableEmployees\";\nimport EmployeesAdd from \"./EmployeesAdd\";\nimport EmployeesEdit from \"./EmployeesEdit\";\nimport axios from 'axios';\nimport { api_query } from \"../../api/ApiConstant\";\n\nvar EmployeesPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(EmployeesPage, _React$Component);\n\n  function EmployeesPage(props) {\n    var _this;\n\n    _classCallCheck(this, EmployeesPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmployeesPage).call(this, props));\n\n    _this.changeViewPage = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(typeView, resultEdit) {\n        var tmp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(typeView == 'add')) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return _this.setState({\n                  addPage: true,\n                  editPage: false\n                });\n\n              case 3:\n                _context.next = 19;\n                break;\n\n              case 5:\n                if (!(typeView == 'edit')) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.next = 8;\n                return _this.tarikDataDept();\n\n              case 8:\n                _context.next = 10;\n                return _this.tarikDataPosition();\n\n              case 10:\n                tmp = resultEdit;\n                tmp.all_dept_name = _this.state.dept_name;\n                tmp.all_position = _this.state.position; // console.log('new data tmp : ', tmp)\n\n                _context.next = 15;\n                return _this.setState({\n                  editPage: true,\n                  editData: tmp,\n                  addPage: false\n                });\n\n              case 15:\n                _context.next = 19;\n                break;\n\n              case 17:\n                _context.next = 19;\n                return _this.setState({\n                  addPage: false,\n                  editPage: false\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.tarikDataDept = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var sql, result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('tarik data'); // let sql = `\n              //     select * from employees_new limit 10000;\n              // `\n\n              sql = \"\\n    select * from departments_new\\n    \";\n              _context2.next = 4;\n              return axios.post(api_query, {\n                query: sql\n              }).then(function (result) {\n                var res = result.data.response; // console.log('result : ', result)\n\n                if (res.length == '') {\n                  return [];\n                }\n\n                var tmp = [];\n\n                for (var index = 0; index < res.length; index++) {\n                  var element = res[index]; // console.log('dataaaaa : ', element)\n\n                  var data = {};\n                  data.id = element.id;\n                  data.value = element.id;\n                  data.label = element.dept_name;\n                  tmp.push(data); // console.log('tiap push : ', tmp)\n                } // console.log('hasil push : ', tmp)\n                // return res;\n\n\n                return tmp;\n              }).catch(function (err) {\n                console.log('error : ', err);\n                return [];\n              });\n\n            case 4:\n              result = _context2.sent;\n              _context2.next = 7;\n              return _this.setState({\n                dept_name: result\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.tarikDataPosition = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var sql, result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // console.log('tarik data')\n              // let sql = `\n              //     select * from employees_new limit 10000;\n              // `\n              sql = \"\\n      select * from position_management\\n      \";\n              _context3.next = 3;\n              return axios.post(api_query, {\n                query: sql\n              }).then(function (result) {\n                var res = result.data.response; // console.log('result : ', result)\n\n                if (res.length == '') {\n                  return [];\n                }\n\n                var tmp = [];\n\n                for (var index = 0; index < res.length; index++) {\n                  var element = res[index]; // console.log('dataaaaa : ', element)\n\n                  var data = {};\n                  data.id = element.id;\n                  data.value = element.id;\n                  data.label = element.position;\n                  tmp.push(data); // console.log('tiap push : ', tmp)\n                } // console.log('hasil push : ', tmp)\n                // return res;\n\n\n                return tmp;\n              }).catch(function (err) {\n                console.log('error : ', err);\n                return [];\n              });\n\n            case 3:\n              result = _context3.sent;\n              _context3.next = 6;\n              return _this.setState({\n                position: result\n              });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    _this.state = {\n      addPage: false,\n      editPage: false,\n      editData: null,\n      dept_name: null,\n      position: null\n    };\n    return _this;\n  }\n\n  _createClass(EmployeesPage, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }\n      }, this.state.addPage ? /*#__PURE__*/React.createElement(Breadcrumbs, {\n        breadCrumbTitle: \"Employees Add\",\n        breadCrumbParent: \"Employees\",\n        breadCrumbActive: \"Employees Add\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }) : this.state.editPage ? /*#__PURE__*/React.createElement(Breadcrumbs, {\n        breadCrumbTitle: \"Employees Edit\",\n        breadCrumbParent: \"Employees\",\n        breadCrumbActive: \"Employees Edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(Breadcrumbs, {\n        breadCrumbTitle: \"Employees\",\n        breadCrumbParent: \"Employees\",\n        breadCrumbActive: \"Employees\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }, this.state.addPage ? /*#__PURE__*/React.createElement(EmployeesAdd, Object.assign({}, this.state, this.props, {\n        changeViewPage: this.changeViewPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      })) // <Spinner color=\"primary\" />\n      : this.state.editPage ? /*#__PURE__*/React.createElement(EmployeesEdit, Object.assign({}, this.state, this.props, {\n        changeViewPage: this.changeViewPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      })) : /*#__PURE__*/React.createElement(DataTableEmployees, Object.assign({}, this.state, this.props, {\n        changeViewPage: this.changeViewPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n\n  return EmployeesPage;\n}(React.Component);\n\nexport default EmployeesPage;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/employees/EmployeesPage.js"],"names":["React","Row","Col","Spinner","Breadcrumbs","DataTableEmployees","EmployeesAdd","EmployeesEdit","axios","api_query","EmployeesPage","props","changeViewPage","typeView","resultEdit","setState","addPage","editPage","tarikDataDept","tarikDataPosition","tmp","all_dept_name","state","dept_name","all_position","position","editData","console","log","sql","post","query","then","result","res","data","response","length","index","element","id","value","label","push","catch","err","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport { Row, Col, Spinner } from \"reactstrap\"\r\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\"\r\nimport DataTableEmployees from \"./DataTableEmployees\"\r\nimport EmployeesAdd from \"./EmployeesAdd\"\r\nimport EmployeesEdit from \"./EmployeesEdit\"\r\nimport axios from 'axios';\r\nimport { api_query } from \"../../api/ApiConstant\"\r\n\r\n\r\nclass EmployeesPage extends React.Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          addPage: false,\r\n          editPage: false,\r\n          editData: null,\r\n          dept_name: null,\r\n          position: null,\r\n\r\n      }\r\n  }\r\n\r\n  changeViewPage = async(typeView, resultEdit) =>{\r\n    if (typeView == 'add') {\r\n        await this.setState({addPage: true, editPage: false})\r\n    }else if (typeView == 'edit') {\r\n      await this.tarikDataDept();\r\n      await this.tarikDataPosition();\r\n      var tmp = resultEdit\r\n      tmp.all_dept_name = this.state.dept_name\r\n      tmp.all_position = this.state.position\r\n      // console.log('new data tmp : ', tmp)\r\n      await this.setState({editPage: true, editData: tmp, addPage: false})\r\n      // await this.setState({editPage: true, editData: resultEdit, addPage: false})\r\n    }\r\n    else{\r\n        await this.setState({addPage: false, editPage: false})\r\n    }\r\n  }\r\n\r\n  tarikDataDept = async() =>{\r\n    console.log('tarik data')\r\n    // let sql = `\r\n    //     select * from employees_new limit 10000;\r\n    // `\r\n\r\n    let sql = `\r\n    select * from departments_new\r\n    `\r\n    var result = await axios.post(api_query, {\r\n                                query : sql\r\n                            })\r\n                                .then(result => {\r\n                                let res = result.data.response\r\n                                // console.log('result : ', result)\r\n                                if (res.length == '') {\r\n                                    return []\r\n                                }\r\n\r\n                                var tmp = []\r\n                                for (let index = 0; index < res.length; index++) {\r\n                                  const element = res[index];\r\n                                  // console.log('dataaaaa : ', element)\r\n                                  var data = {}\r\n                                  data.id = element.id\r\n                                  data.value = element.id\r\n                                  data.label = element.dept_name\r\n                                  tmp.push(data)\r\n                                  // console.log('tiap push : ', tmp)\r\n                                }\r\n                                // console.log('hasil push : ', tmp)\r\n                                // return res;\r\n                                return tmp;\r\n                            }).catch(err => {\r\n                                console.log('error : ', err)\r\n                                return []\r\n                            })\r\n    await this.setState({dept_name: result})\r\n    }\r\n\r\n  tarikDataPosition = async() =>{\r\n      // console.log('tarik data')\r\n      // let sql = `\r\n      //     select * from employees_new limit 10000;\r\n      // `\r\n  \r\n      let sql = `\r\n      select * from position_management\r\n      `\r\n      var result = await axios.post(api_query, {\r\n                                  query : sql\r\n                              })\r\n                                  .then(result => {\r\n                                  let res = result.data.response\r\n                                  // console.log('result : ', result)\r\n                                  if (res.length == '') {\r\n                                      return []\r\n                                  }\r\n  \r\n                                  var tmp = []\r\n                                  for (let index = 0; index < res.length; index++) {\r\n                                    const element = res[index];\r\n                                    // console.log('dataaaaa : ', element)\r\n                                    var data = {}\r\n                                    data.id = element.id\r\n                                    data.value = element.id\r\n                                    data.label = element.position\r\n                                    tmp.push(data)\r\n                                    // console.log('tiap push : ', tmp)\r\n                                  }\r\n                                  // console.log('hasil push : ', tmp)\r\n                                  // return res;\r\n                                  return tmp;\r\n                              }).catch(err => {\r\n                                  console.log('error : ', err)\r\n                                  return []\r\n                              })\r\n        await this.setState({position: result})\r\n      }\r\n      \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.addPage ? \r\n            <Breadcrumbs\r\n                breadCrumbTitle=\"Employees Add\"\r\n                breadCrumbParent=\"Employees\"\r\n                breadCrumbActive=\"Employees Add\"\r\n            />\r\n        :\r\n        this.state.editPage ? \r\n            <Breadcrumbs\r\n                breadCrumbTitle=\"Employees Edit\"\r\n                breadCrumbParent=\"Employees\"\r\n                breadCrumbActive=\"Employees Edit\"\r\n            />\r\n        :\r\n            <Breadcrumbs\r\n                breadCrumbTitle=\"Employees\"\r\n                breadCrumbParent=\"Employees\"\r\n                breadCrumbActive=\"Employees\"\r\n            />\r\n         }\r\n        <Row>\r\n\r\n          <Col sm=\"12\">\r\n              {this.state.addPage ? \r\n                <EmployeesAdd {...this.state} {...this.props} changeViewPage={this.changeViewPage}/>\r\n                // <Spinner color=\"primary\" />\r\n              : \r\n              this.state.editPage ? \r\n                <EmployeesEdit {...this.state} {...this.props} changeViewPage={this.changeViewPage}/>\r\n              : \r\n                <DataTableEmployees {...this.state} {...this.props} changeViewPage={this.changeViewPage}/>\r\n              }\r\n          </Col>\r\n\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EmployeesPage"]},"metadata":{},"sourceType":"module"}