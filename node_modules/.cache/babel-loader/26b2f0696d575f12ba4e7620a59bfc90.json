{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _slicedToArray from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{NavItem,NavLink,UncontrolledTooltip,UncontrolledDropdown,DropdownItem,DropdownMenu,DropdownToggle}from\"reactstrap\";import*as Icon from\"react-feather\";import{Link}from\"react-router-dom\";import classnames from\"classnames\";import AutoComplete from\"../../../components/@vuexy/autoComplete/AutoCompleteComponent\";import{history}from\"../../../history\";import{connect}from\"react-redux\";import{loadSuggestions,updateStarred}from\"../../../redux/actions/navbar/Index\";import{DragDropContext,Droppable,Draggable}from\"react-beautiful-dnd\";// a little function to help us with reordering the bookmarks\nvar reorder=function reorder(list,startIndex,endIndex){var result=Array.from(list);var _result$splice=result.splice(startIndex,1),_result$splice2=_slicedToArray(_result$splice,1),removed=_result$splice2[0];result.splice(endIndex,0,removed);return result;};var NavbarBookmarks=/*#__PURE__*/function(_React$PureComponent){_inherits(NavbarBookmarks,_React$PureComponent);var _super=_createSuper(NavbarBookmarks);function NavbarBookmarks(){var _this;_classCallCheck(this,NavbarBookmarks);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={showBookmarks:false,value:\"\",noSuggestions:false,isStarred:false,suggestions:[],starredItems:[]};_this.updateBookmarks=false;_this.handleBookmarksVisibility=function(){_this.setState({showBookmarks:!_this.state.showBookmarks,value:\"\",suggestions:[],noSuggestions:false,starred:null});};_this.onDragEnd=function(result){// dropped outside the list\nif(!result.destination){return;}var starredItems=reorder(_this.state.starredItems,result.source.index,result.destination.index);_this.setState({starredItems:starredItems});};_this.renderBookmarks=function(){_this.updateBookmarks=true;return/*#__PURE__*/React.createElement(DragDropContext,{onDragEnd:_this.onDragEnd},/*#__PURE__*/React.createElement(Droppable,{droppableId:\"droppable\",direction:\"horizontal\"},function(provided,snapshot){return/*#__PURE__*/React.createElement(\"div\",Object.assign({ref:provided.innerRef},provided.droppableProps,{className:\"d-flex flex-sm-wrap flex-lg-nowrap draggable-cards\"}),_this.state.starredItems.map(function(item,index){var IconTag=Icon[item.icon?item.icon:\"X\"];return/*#__PURE__*/React.createElement(Draggable,{key:item.target,draggableId:item.target,index:index},function(provided,snapshot){return/*#__PURE__*/React.createElement(\"div\",Object.assign({ref:provided.innerRef},provided.draggableProps,provided.dragHandleProps),/*#__PURE__*/React.createElement(NavItem,{className:\"nav-item d-none d-lg-block\"},/*#__PURE__*/React.createElement(NavLink,{tag:\"span\",id:item.target,className:\"nav-link cursor-pointer\",onClick:function onClick(){return history.push(item.link);}},/*#__PURE__*/React.createElement(IconTag,{size:21})),/*#__PURE__*/React.createElement(UncontrolledTooltip,{placement:\"bottom\",target:item.target},item.title)));});}),provided.placeholder);}));};return _this;}_createClass(NavbarBookmarks,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.bookmarks.starred.length!==this.state.starredItems.length&&this.updateBookmarks===true){this.setState({starredItems:this.props.bookmarks.starred});this.updateBookmarks=false;}}},{key:\"componentDidMount\",value:function componentDidMount(){var _this$props=this.props,_this$props$bookmarks=_this$props.bookmarks,suggestions=_this$props$bookmarks.suggestions,starred=_this$props$bookmarks.starred,loadSuggestions=_this$props.loadSuggestions;this.setState({suggestions:suggestions,starredItems:starred},loadSuggestions());}},{key:\"render\",value:function render(){var _this$props2=this.props,_this$props2$bookmark=_this$props2.bookmarks,extraStarred=_this$props2$bookmark.extraStarred,suggestions=_this$props2$bookmark.suggestions,sidebarVisibility=_this$props2.sidebarVisibility,updateStarred=_this$props2.updateStarred,handleAppOverlay=_this$props2.handleAppOverlay;var renderExtraStarred=extraStarred.length>0?extraStarred.map(function(i){var IconTag=Icon[i.icon?i.icon:null];return/*#__PURE__*/React.createElement(DropdownItem,{key:i.id,href:i.link},/*#__PURE__*/React.createElement(IconTag,{size:15}),/*#__PURE__*/React.createElement(\"span\",{className:\"align-middle ml-1\"},i.title));}):null;return/*#__PURE__*/React.createElement(\"div\",{className:\"mr-auto float-left bookmark-wrapper d-flex align-items-center\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"navbar-nav d-xl-none\"},/*#__PURE__*/React.createElement(NavItem,{className:\"mobile-menu mr-auto\"},/*#__PURE__*/React.createElement(NavLink,{className:\"nav-menu-main menu-toggle hidden-xs is-active\",onClick:sidebarVisibility},/*#__PURE__*/React.createElement(Icon.Menu,{className:\"ficon\"})))));}}]);return NavbarBookmarks;}(React.PureComponent);var mapStateToProps=function mapStateToProps(state){return{bookmarks:state.navbar};};export default connect(mapStateToProps,{loadSuggestions:loadSuggestions,updateStarred:updateStarred})(NavbarBookmarks);","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/layouts/components/navbar/NavbarBookmarks.js"],"names":["React","NavItem","NavLink","UncontrolledTooltip","UncontrolledDropdown","DropdownItem","DropdownMenu","DropdownToggle","Icon","Link","classnames","AutoComplete","history","connect","loadSuggestions","updateStarred","DragDropContext","Droppable","Draggable","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","NavbarBookmarks","state","showBookmarks","value","noSuggestions","isStarred","suggestions","starredItems","updateBookmarks","handleBookmarksVisibility","setState","starred","onDragEnd","destination","source","index","renderBookmarks","provided","snapshot","innerRef","droppableProps","map","item","IconTag","icon","target","draggableProps","dragHandleProps","push","link","title","placeholder","prevProps","bookmarks","length","props","extraStarred","sidebarVisibility","handleAppOverlay","renderExtraStarred","i","id","PureComponent","mapStateToProps","navbar"],"mappings":"+xBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,OADF,CAEEC,OAFF,CAGEC,mBAHF,CAIEC,oBAJF,CAKEC,YALF,CAMEC,YANF,CAOEC,cAPF,KAQO,YARP,CASA,MAAO,GAAKC,CAAAA,IAAZ,KAAsB,eAAtB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,+DAAzB,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OACEC,eADF,CAEEC,aAFF,KAGO,qCAHP,CAIA,OAASC,eAAT,CAA0BC,SAA1B,CAAqCC,SAArC,KAAsD,qBAAtD,CAEA;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAOC,UAAP,CAAmBC,QAAnB,CAAgC,CAC9C,GAAMC,CAAAA,MAAM,CAAGC,KAAK,CAACC,IAAN,CAAWL,IAAX,CAAf,CACA,mBAAkBG,MAAM,CAACG,MAAP,CAAcL,UAAd,CAA0B,CAA1B,CAAlB,kDAAOM,OAAP,oBACAJ,MAAM,CAACG,MAAP,CAAcJ,QAAd,CAAwB,CAAxB,CAA2BK,OAA3B,EACA,MAAOJ,CAAAA,MAAP,CACD,CALD,C,GAOMK,CAAAA,e,mXACJC,K,CAAQ,CACNC,aAAa,CAAE,KADT,CAENC,KAAK,CAAE,EAFD,CAGNC,aAAa,CAAE,KAHT,CAINC,SAAS,CAAE,KAJL,CAKNC,WAAW,CAAE,EALP,CAMNC,YAAY,CAAE,EANR,C,OASRC,e,CAAkB,K,OAElBC,yB,CAA4B,UAAM,CAChC,MAAKC,QAAL,CAAc,CACZR,aAAa,CAAE,CAAC,MAAKD,KAAL,CAAWC,aADf,CAEZC,KAAK,CAAE,EAFK,CAGZG,WAAW,CAAE,EAHD,CAIZF,aAAa,CAAE,KAJH,CAKZO,OAAO,CAAE,IALG,CAAd,EAOD,C,OAuBDC,S,CAAY,SAAAjB,MAAM,CAAI,CACpB;AACA,GAAI,CAACA,MAAM,CAACkB,WAAZ,CAAyB,CACvB,OACD,CAED,GAAMN,CAAAA,YAAY,CAAGhB,OAAO,CAC1B,MAAKU,KAAL,CAAWM,YADe,CAE1BZ,MAAM,CAACmB,MAAP,CAAcC,KAFY,CAG1BpB,MAAM,CAACkB,WAAP,CAAmBE,KAHO,CAA5B,CAMA,MAAKL,QAAL,CAAc,CACZH,YAAY,CAAZA,YADY,CAAd,EAGD,C,OAEDS,e,CAAkB,UAAM,CACtB,MAAKR,eAAL,CAAuB,IAAvB,CACA,mBAAO,oBAAC,eAAD,EAAiB,SAAS,CAAE,MAAKI,SAAjC,eACL,oBAAC,SAAD,EAAW,WAAW,CAAC,WAAvB,CAAmC,SAAS,CAAC,YAA7C,EACG,SAACK,QAAD,CAAWC,QAAX,qBACC,yCACE,GAAG,CAAED,QAAQ,CAACE,QADhB,EAEMF,QAAQ,CAACG,cAFf,EAGE,SAAS,CAAC,oDAHZ,GAKG,MAAKnB,KAAL,CAAWM,YAAX,CAAwBc,GAAxB,CAA4B,SAACC,IAAD,CAAOP,KAAP,CAAiB,CAC5C,GAAMQ,CAAAA,OAAO,CAAG3C,IAAI,CAAC0C,IAAI,CAACE,IAAL,CAAYF,IAAI,CAACE,IAAjB,CAAwB,GAAzB,CAApB,CACA,mBACE,oBAAC,SAAD,EAAW,GAAG,CAAEF,IAAI,CAACG,MAArB,CAA6B,WAAW,CAAEH,IAAI,CAACG,MAA/C,CAAuD,KAAK,CAAEV,KAA9D,EACG,SAACE,QAAD,CAAWC,QAAX,CAAwB,CACvB,mBAAO,yCAAK,GAAG,CAAED,QAAQ,CAACE,QAAnB,EACDF,QAAQ,CAACS,cADR,CAEDT,QAAQ,CAACU,eAFR,eAGL,oBAAC,OAAD,EAAS,SAAS,CAAC,4BAAnB,eACE,oBAAC,OAAD,EACE,GAAG,CAAC,MADN,CAEE,EAAE,CAAEL,IAAI,CAACG,MAFX,CAGE,SAAS,CAAC,yBAHZ,CAIE,OAAO,CAAE,yBAAMzC,CAAAA,OAAO,CAAC4C,IAAR,CAAaN,IAAI,CAACO,IAAlB,CAAN,EAJX,eAOE,oBAAC,OAAD,EAAS,IAAI,CAAE,EAAf,EAPF,CADF,cAUE,oBAAC,mBAAD,EAAqB,SAAS,CAAC,QAA/B,CAAwC,MAAM,CAAEP,IAAI,CAACG,MAArD,EACGH,IAAI,CAACQ,KADR,CAVF,CAHK,CAAP,CAkBD,CApBH,CADF,CAyBD,CA3BA,CALH,CAiCGb,QAAQ,CAACc,WAjCZ,CADD,EADH,CADK,CAAP,CAyCD,C,6EAjFD,4BAAmBC,SAAnB,CAA8B,CAC5B,GAAIA,SAAS,CAACC,SAAV,CAAoBtB,OAApB,CAA4BuB,MAA5B,GAAuC,KAAKjC,KAAL,CAAWM,YAAX,CAAwB2B,MAA/D,EAAyE,KAAK1B,eAAL,GAAyB,IAAtG,CAA4G,CAC1G,KAAKE,QAAL,CAAc,CAAEH,YAAY,CAAE,KAAK4B,KAAL,CAAWF,SAAX,CAAqBtB,OAArC,CAAd,EACA,KAAKH,eAAL,CAAuB,KAAvB,CACD,CACF,C,iCAED,4BAAoB,CAClB,gBAGI,KAAK2B,KAHT,mCACEF,SADF,CACe3B,WADf,uBACeA,WADf,CAC4BK,OAD5B,uBAC4BA,OAD5B,CAEEzB,eAFF,aAEEA,eAFF,CAIA,KAAKwB,QAAL,CACE,CACEJ,WAAW,CAAEA,WADf,CAEEC,YAAY,CAAEI,OAFhB,CADF,CAKEzB,eAAe,EALjB,EAOD,C,sBAkED,iBAAS,CACP,iBAKI,KAAKiD,KALT,oCACEF,SADF,CACeG,YADf,uBACeA,YADf,CAC6B9B,WAD7B,uBAC6BA,WAD7B,CAEE+B,iBAFF,cAEEA,iBAFF,CAGElD,aAHF,cAGEA,aAHF,CAIEmD,gBAJF,cAIEA,gBAJF,CAOA,GAAMC,CAAAA,kBAAkB,CACtBH,YAAY,CAACF,MAAb,CAAsB,CAAtB,CACIE,YAAY,CAACf,GAAb,CAAiB,SAAAmB,CAAC,CAAI,CACtB,GAAMjB,CAAAA,OAAO,CAAG3C,IAAI,CAAC4D,CAAC,CAAChB,IAAF,CAASgB,CAAC,CAAChB,IAAX,CAAkB,IAAnB,CAApB,CACA,mBACE,oBAAC,YAAD,EAAc,GAAG,CAAEgB,CAAC,CAACC,EAArB,CAAyB,IAAI,CAAED,CAAC,CAACX,IAAjC,eACE,oBAAC,OAAD,EAAS,IAAI,CAAE,EAAf,EADF,cAEE,4BAAM,SAAS,CAAC,mBAAhB,EAAqCW,CAAC,CAACV,KAAvC,CAFF,CADF,CAMD,CARC,CADJ,CAUI,IAXN,CAaA,mBACE,2BAAK,SAAS,CAAC,+DAAf,eACE,0BAAI,SAAS,CAAC,sBAAd,eACE,oBAAC,OAAD,EAAS,SAAS,CAAC,qBAAnB,eACE,oBAAC,OAAD,EACE,SAAS,CAAC,+CADZ,CAEE,OAAO,CAAEO,iBAFX,eAIE,oBAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,OAArB,EAJF,CADF,CADF,CADF,CADF,CAuKD,C,6BAvS2BjE,KAAK,CAACsE,a,EAySpC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAA1C,KAAK,CAAI,CAC/B,MAAO,CACLgC,SAAS,CAAEhC,KAAK,CAAC2C,MADZ,CAAP,CAGD,CAJD,CAMA,cAAe3D,CAAAA,OAAO,CAAC0D,eAAD,CAAkB,CAAEzD,eAAe,CAAfA,eAAF,CAAmBC,aAAa,CAAbA,aAAnB,CAAlB,CAAP,CACba,eADa,CAAf","sourcesContent":["import React from \"react\"\nimport {\n  NavItem,\n  NavLink,\n  UncontrolledTooltip,\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from \"reactstrap\"\nimport * as Icon from \"react-feather\"\nimport { Link } from \"react-router-dom\"\nimport classnames from \"classnames\"\nimport AutoComplete from \"../../../components/@vuexy/autoComplete/AutoCompleteComponent\"\nimport { history } from \"../../../history\"\nimport { connect } from \"react-redux\"\nimport {\n  loadSuggestions,\n  updateStarred\n} from \"../../../redux/actions/navbar/Index\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\n\n// a little function to help us with reordering the bookmarks\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n  return result\n}\n\nclass NavbarBookmarks extends React.PureComponent {\n  state = {\n    showBookmarks: false,\n    value: \"\",\n    noSuggestions: false,\n    isStarred: false,\n    suggestions: [],\n    starredItems: []\n  }\n\n  updateBookmarks = false\n\n  handleBookmarksVisibility = () => {\n    this.setState({\n      showBookmarks: !this.state.showBookmarks,\n      value: \"\",\n      suggestions: [],\n      noSuggestions: false,\n      starred: null\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.bookmarks.starred.length !== this.state.starredItems.length && this.updateBookmarks === true) {\n      this.setState({ starredItems: this.props.bookmarks.starred })\n      this.updateBookmarks = false\n    }\n  }\n\n  componentDidMount() {\n    let {\n      bookmarks: { suggestions, starred },\n      loadSuggestions\n    } = this.props\n    this.setState(\n      {\n        suggestions: suggestions,\n        starredItems: starred\n      },\n      loadSuggestions()\n    )\n  }\n\n  onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return\n    }\n\n    const starredItems = reorder(\n      this.state.starredItems,\n      result.source.index,\n      result.destination.index\n    )\n\n    this.setState({\n      starredItems\n    })\n  }\n\n  renderBookmarks = () => {\n    this.updateBookmarks = true\n    return <DragDropContext onDragEnd={this.onDragEnd}>\n      <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            className=\"d-flex flex-sm-wrap flex-lg-nowrap draggable-cards\"\n          >\n            {this.state.starredItems.map((item, index) => {\n              const IconTag = Icon[item.icon ? item.icon : \"X\"]\n              return (\n                <Draggable key={item.target} draggableId={item.target} index={index}>\n                  {(provided, snapshot) => {\n                    return <div ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}>\n                      <NavItem className=\"nav-item d-none d-lg-block\">\n                        <NavLink\n                          tag=\"span\"\n                          id={item.target}\n                          className=\"nav-link cursor-pointer\"\n                          onClick={() => history.push(item.link)}\n\n                        >\n                          <IconTag size={21} />\n                        </NavLink>\n                        <UncontrolledTooltip placement=\"bottom\" target={item.target}>\n                          {item.title}\n                        </UncontrolledTooltip>\n                      </NavItem>\n                    </div>\n                  }}\n\n                </Draggable>\n              )\n            })}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  }\n\n\n\n  render() {\n    let {\n      bookmarks: { extraStarred, suggestions },\n      sidebarVisibility,\n      updateStarred,\n      handleAppOverlay\n    } = this.props\n\n    const renderExtraStarred =\n      extraStarred.length > 0\n        ? extraStarred.map(i => {\n          const IconTag = Icon[i.icon ? i.icon : null]\n          return (\n            <DropdownItem key={i.id} href={i.link}>\n              <IconTag size={15} />\n              <span className=\"align-middle ml-1\">{i.title}</span>\n            </DropdownItem>\n          )\n        })\n        : null\n\n    return (\n      <div className=\"mr-auto float-left bookmark-wrapper d-flex align-items-center\">\n        <ul className=\"navbar-nav d-xl-none\">\n          <NavItem className=\"mobile-menu mr-auto\">\n            <NavLink\n              className=\"nav-menu-main menu-toggle hidden-xs is-active\"\n              onClick={sidebarVisibility}\n            >\n              <Icon.Menu className=\"ficon\" />\n            </NavLink>\n          </NavItem>\n        </ul>\n        {/* NAVBAR BOOKMARK PANDU SUMBER MASALAH */}\n\n        {/* <ul className=\"nav navbar-nav bookmark-icons\">\n          {this.renderBookmarks()}\n          {extraStarred.length > 0 ? (\n            <NavItem>\n              <NavLink tag=\"div\">\n                <UncontrolledDropdown>\n                  <DropdownToggle tag=\"span\">\n                    <Icon.ChevronDown />\n                  </DropdownToggle>\n                  <DropdownMenu right>{renderExtraStarred}</DropdownMenu>\n                </UncontrolledDropdown>\n              </NavLink>\n            </NavItem>\n          ) : null}\n          <NavItem\n            className=\"nav-item d-none d-lg-block\"\n            onClick={this.handleBookmarksVisibility}\n          >\n            <NavLink>\n              <Icon.Star className=\"text-warning\" size={21} />\n            </NavLink>\n            <div\n              className={classnames(\"bookmark-input search-input\", {\n                show: this.state.showBookmarks\n              })}\n            >\n              <div className=\"bookmark-input-icon\">\n                <Icon.Search size={15} className=\"primary\" />\n              </div>\n\n              <AutoComplete\n                suggestions={suggestions}\n                className=\"form-control\"\n                filterKey=\"title\"\n                autoFocus={true}\n                suggestionLimit={this.state.value.length ? 6 : 100}\n                clearInput={this.state.showBookmarks}\n                defaultSuggestions={true}\n                onChange={e => this.setState({ value: e.target.value })}\n                externalClick={e => this.setState({ showBookmarks: false })}\n                onKeyDown={e => {\n                  if (e.keyCode === 27 || e.keyCode === 13) {\n                    this.setState({\n                      showBookmarks: false\n                    })\n                    handleAppOverlay(\"\")\n                  }\n                }}\n                customRender={(\n                  suggestion,\n                  i,\n                  filteredData,\n                  activeSuggestion,\n                  onSuggestionItemClick,\n                  onSuggestionItemHover,\n                  userInput\n                ) => {\n                  const IconTag = Icon[suggestion.icon ? suggestion.icon : \"X\"]\n                  if (userInput.length) {\n                    return (\n                      <li\n                        className={classnames(\n                          \"suggestion-item d-flex justify-content-between\",\n                          {\n                            active:\n                              filteredData.indexOf(suggestion) ===\n                              activeSuggestion\n                          }\n                        )}\n                        key={suggestion.target}\n                        onClick={e => {\n                          if (!this.state.showBookmarks) {\n                            e.stopPropagation()\n                          }\n                        }}\n                      >\n                        <Link\n                          to={suggestion.link}\n                          className=\"component-info w-100\"\n                          onClick={() =>\n                            this.setState({ showBookmarks: false })\n                          }\n                        >\n                          <IconTag size={15} />\n                          <span className=\"align-middle ml-1\">\n                            {suggestion.title}\n                          </span>\n                        </Link>\n                        <Icon.Star\n                          className={classnames({\n                            \"text-warning\": suggestion.starred === true\n                          })}\n                          size={17}\n                          onClick={e => {\n                            updateStarred(suggestion)\n                            e.stopPropagation()\n                          }}\n                        />\n                      </li>\n                    )\n                  } else {\n                    return suggestion.starred === true ? (\n                      <li\n                        key={suggestion.target}\n                        className={classnames(\n                          \"suggestion-item d-flex justify-content-between\",\n                          {\n                            active:\n                              filteredData.indexOf(suggestion) ===\n                              activeSuggestion\n                          }\n                        )}\n                        onClick={e => {\n                          if (!this.state.showBookmarks) {\n                            e.stopPropagation()\n                          }\n                        }}\n                      >\n                        <Link\n                          to={suggestion.link}\n                          className=\"component-info w-100\"\n                          onClick={e => this.setState({ showBookmarks: false })}\n                        >\n                          <IconTag size={15} />\n                          <span className=\"align-middle ml-1\">\n                            {suggestion.title}\n                          </span>\n                        </Link>\n                        <Icon.Star\n                          className={classnames({\n                            \"text-warning\": suggestion.starred === true\n                          })}\n                          size={17}\n                          onClick={e => {\n                            updateStarred(suggestion)\n                            e.stopPropagation()\n                          }}\n                        />\n                      </li>\n                    ) : null\n                  }\n                }}\n                onSuggestionsShown={userInput => {\n                  if (this.state.showBookmarks) {\n                    handleAppOverlay(userInput)\n                  }\n                }}\n              />\n            </div>\n          </NavItem>\n        </ul> */}\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    bookmarks: state.navbar\n  }\n}\n\nexport default connect(mapStateToProps, { loadSuggestions, updateStarred })(\n  NavbarBookmarks\n)\n"]},"metadata":{},"sourceType":"module"}