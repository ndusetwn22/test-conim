{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.1/src/views/ui-elements/cards/analytics/Revenue.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport Chart from \"react-apexcharts\";\nimport { Settings } from \"react-feather\";\n\nclass Revenue extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      options: {\n        chart: {\n          toolbar: {\n            show: false\n          },\n          animations: {\n            enabled: false\n          }\n        },\n        stroke: {\n          curve: \"smooth\",\n          dashArray: [0, 8],\n          width: [4, 2]\n        },\n        grid: {\n          borderColor: this.props.labelColor\n        },\n        legend: {\n          show: false\n        },\n        colors: [this.props.dangerLight, this.props.strokeColor],\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            shade: \"dark\",\n            inverseColors: false,\n            gradientToColors: [this.props.primary, this.props.strokeColor],\n            shadeIntensity: 1,\n            type: \"horizontal\",\n            opacityFrom: 1,\n            opacityTo: 1,\n            stops: [0, 100, 100, 100]\n          }\n        },\n        markers: {\n          size: 0,\n          hover: {\n            size: 5\n          }\n        },\n        xaxis: {\n          labels: {\n            style: {\n              colors: this.props.strokeColor\n            }\n          },\n          axisTicks: {\n            show: false\n          },\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Des\"],\n          axisBorder: {\n            show: false\n          },\n          tickPlacement: \"on\"\n        },\n        yaxis: {\n          tickAmount: 5,\n          labels: {\n            style: {\n              color: this.props.strokeColor\n            },\n            formatter: val => {\n              return val > 999 ? (val / 1000).toFixed(1) + \"k\" : val;\n            }\n          }\n        },\n        tooltip: {\n          x: {\n            show: false\n          }\n        }\n      },\n      series: [{\n        name: \"This Month\",\n        data: [45000, 47000]\n      }, {\n        name: \"Last Month\",\n        data: [46000, 48000]\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Revenue\"), /*#__PURE__*/React.createElement(Settings, {\n      size: 20,\n      className: \"cursor-pointer text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-start mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-50 text-bold-600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"This Month\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-bold-400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"sup\", {\n      className: \"font-medium-1 mr-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"$\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"86,589\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-50 text-bold-600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"Last Month\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-bold-400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"sup\", {\n      className: \"font-medium-1 mr-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"$\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"73,683\")))), /*#__PURE__*/React.createElement(Chart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      height: 260,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Revenue;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.1/src/views/ui-elements/cards/analytics/Revenue.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Chart","Settings","Revenue","Component","state","options","chart","toolbar","show","animations","enabled","stroke","curve","dashArray","width","grid","borderColor","props","labelColor","legend","colors","dangerLight","strokeColor","fill","type","gradient","shade","inverseColors","gradientToColors","primary","shadeIntensity","opacityFrom","opacityTo","stops","markers","size","hover","xaxis","labels","style","axisTicks","categories","axisBorder","tickPlacement","yaxis","tickAmount","color","formatter","val","toFixed","tooltip","x","series","name","data","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,YAAtD;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAEA,MAAMC,OAAN,SAAsBP,KAAK,CAACQ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAE;AADC,WADJ;AAILC,UAAAA,UAAU,EAAE;AACVC,YAAAA,OAAO,EAAE;AADC;AAJP,SADA;AASPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,QADD;AAENC,UAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFL;AAGNC,UAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAHD,SATD;AAcPC,QAAAA,IAAI,EAAE;AACJC,UAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC;AADpB,SAdC;AAiBPC,QAAAA,MAAM,EAAE;AACNX,UAAAA,IAAI,EAAE;AADA,SAjBD;AAoBPY,QAAAA,MAAM,EAAE,CAAC,KAAKH,KAAL,CAAWI,WAAZ,EAAyB,KAAKJ,KAAL,CAAWK,WAApC,CApBD;AAsBPC,QAAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAE,UADF;AAEJC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,KAAK,EAAE,MADC;AAERC,YAAAA,aAAa,EAAE,KAFP;AAGRC,YAAAA,gBAAgB,EAAE,CAAC,KAAKX,KAAL,CAAWY,OAAZ,EAAqB,KAAKZ,KAAL,CAAWK,WAAhC,CAHV;AAIRQ,YAAAA,cAAc,EAAE,CAJR;AAKRN,YAAAA,IAAI,EAAE,YALE;AAMRO,YAAAA,WAAW,EAAE,CANL;AAORC,YAAAA,SAAS,EAAE,CAPH;AAQRC,YAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd;AARC;AAFN,SAtBC;AAmCPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,CADC;AAEPC,UAAAA,KAAK,EAAE;AACLD,YAAAA,IAAI,EAAE;AADD;AAFA,SAnCF;AAyCPE,QAAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE;AACLnB,cAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWK;AADd;AADD,WADH;AAMLkB,UAAAA,SAAS,EAAE;AACThC,YAAAA,IAAI,EAAE;AADG,WANN;AASLiC,UAAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CATP;AAULC,UAAAA,UAAU,EAAE;AACVlC,YAAAA,IAAI,EAAE;AADI,WAVP;AAaLmC,UAAAA,aAAa,EAAE;AAbV,SAzCA;AAwDPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,CADP;AAELP,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE;AACLO,cAAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWK;AADb,aADD;AAINyB,YAAAA,SAAS,EAAEC,GAAG,IAAI;AAChB,qBAAOA,GAAG,GAAG,GAAN,GAAY,CAACA,GAAG,GAAG,IAAP,EAAaC,OAAb,CAAqB,CAArB,IAA0B,GAAtC,GAA4CD,GAAnD;AACD;AANK;AAFH,SAxDA;AAmEPE,QAAAA,OAAO,EAAE;AACPC,UAAAA,CAAC,EAAE;AAAE3C,YAAAA,IAAI,EAAE;AAAR;AADI;AAnEF,OADH;AAwEN4C,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,IAAI,EAAE,YADR;AAEEC,QAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,KAAR;AAFR,OADM,EAKN;AACED,QAAAA,IAAI,EAAE,YADR;AAEEC,QAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,KAAR;AAFR,OALM;AAxEF,KAD4B;AAAA;;AAoFpCC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,EAAhB;AAAoB,MAAA,SAAS,EAAC,2BAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAFF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAFF,CARF,CADF,eAiBE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAE,KAAKnD,KAAL,CAAWC,OADtB;AAEE,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWgD,MAFrB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,MAAM,EAAE,GAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CALF,CADF;AAgCD;;AArHmC;;AAuHtC,eAAelD,OAAf","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport Chart from \"react-apexcharts\"\nimport { Settings } from \"react-feather\"\n\nclass Revenue extends React.Component {\n  state = {\n    options: {\n      chart: {\n        toolbar: {\n          show: false\n        },\n        animations: {\n          enabled: false\n        }\n      },\n      stroke: {\n        curve: \"smooth\",\n        dashArray: [0, 8],\n        width: [4, 2]\n      },\n      grid: {\n        borderColor: this.props.labelColor\n      },\n      legend: {\n        show: false\n      },\n      colors: [this.props.dangerLight, this.props.strokeColor],\n\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shade: \"dark\",\n          inverseColors: false,\n          gradientToColors: [this.props.primary, this.props.strokeColor],\n          shadeIntensity: 1,\n          type: \"horizontal\",\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100, 100, 100]\n        }\n      },\n      markers: {\n        size: 0,\n        hover: {\n          size: 5\n        }\n      },\n      xaxis: {\n        labels: {\n          style: {\n            colors: this.props.strokeColor\n          }\n        },\n        axisTicks: {\n          show: false\n        },\n        categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Des\"],\n        axisBorder: {\n          show: false\n        },\n        tickPlacement: \"on\"\n      },\n      yaxis: {\n        tickAmount: 5,\n        labels: {\n          style: {\n            color: this.props.strokeColor\n          },\n          formatter: val => {\n            return val > 999 ? (val / 1000).toFixed(1) + \"k\" : val\n          }\n        }\n      },\n      tooltip: {\n        x: { show: false }\n      }\n    },\n    series: [\n      {\n        name: \"This Month\",\n        data: [45000, 47000]\n      },\n      {\n        name: \"Last Month\",\n        data: [46000, 48000]\n      },\n    ]\n  }\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Revenue</CardTitle>\n          <Settings size={20} className=\"cursor-pointer text-muted\" />\n        </CardHeader>\n        <CardBody>\n          <div className=\"d-flex justify-content-start mb-1\">\n            <div className=\"mr-2\">\n              <p className=\"mb-50 text-bold-600\">This Month</p>\n              <h2 className=\"text-bold-400\">\n                <sup className=\"font-medium-1 mr-50\">$</sup>\n                <span className=\"text-success\">86,589</span>\n              </h2>\n            </div>\n            <div>\n              <p className=\"mb-50 text-bold-600\">Last Month</p>\n              <h2 className=\"text-bold-400\">\n                <sup className=\"font-medium-1 mr-50\">$</sup>\n                <span>73,683</span>\n              </h2>\n            </div>\n          </div>\n          <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"line\"\n            height={260}\n          />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default Revenue\n"]},"metadata":{},"sourceType":"module"}