{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.3 backup build/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.3 backup build/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.3 backup build/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.3 backup build/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Button,UncontrolledPopover,PopoverHeader,PopoverBody,Card,CardHeader,CardBody,CardTitle,TabContent,TabPane,Nav,NavItem,NavLink}from\"reactstrap\";import classnames from\"classnames\";import{Eye,Code}from\"react-feather\";import{popoverTriggers}from\"./PopoverSourceCode\";var PopoverTriggers=/*#__PURE__*/function(_React$Component){_inherits(PopoverTriggers,_React$Component);var _super=_createSuper(PopoverTriggers);function PopoverTriggers(){var _this;_classCallCheck(this,PopoverTriggers);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeTab:\"1\"};_this.toggleTab=function(tab){if(_this.state.activeTab!==tab){_this.setState({activeTab:tab});}};return _this;}_createClass(PopoverTriggers,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(CardTitle,null,\"Popover Triggers\"),/*#__PURE__*/React.createElement(\"div\",{className:\"views\"},/*#__PURE__*/React.createElement(Nav,{tabs:true},/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{className:classnames({active:this.state.activeTab===\"1\"}),onClick:function onClick(){_this2.toggleTab(\"1\");}},/*#__PURE__*/React.createElement(Eye,{size:15}))),/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{className:classnames({active:this.state.activeTab===\"2\"}),onClick:function onClick(){_this2.toggleTab(\"2\");}},/*#__PURE__*/React.createElement(Code,{size:15})))))),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",null,\"Use attribute \",/*#__PURE__*/React.createElement(\"code\",null,\"trigger\"),\" for various trigger options.Trigger each popover to see information about the trigger.\"),/*#__PURE__*/React.createElement(TabContent,{activeTab:this.state.activeTab},/*#__PURE__*/React.createElement(TabPane,{tabId:\"1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline-block mr-1 mb-1\"},/*#__PURE__*/React.createElement(Button.Ripple,{color:\"primary\",outline:true,id:\"popFocus\"},\"Focus\"),/*#__PURE__*/React.createElement(UncontrolledPopover,{trigger:\"focus\",placement:\"top\",target:\"popFocus\"},/*#__PURE__*/React.createElement(PopoverHeader,null,\"Focus Trigger\"),/*#__PURE__*/React.createElement(PopoverBody,null,\"Focusing on the trigging element makes this popover appear. Blurring (clicking away) makes it disappear. You cannot select this text as the popover will disappear when you try.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline-block mr-1 mb-1\"},/*#__PURE__*/React.createElement(Button.Ripple,{color:\"primary\",outline:true,id:\"popClick\"},\"Click\"),/*#__PURE__*/React.createElement(UncontrolledPopover,{trigger:\"click\",placement:\"top\",target:\"popClick\"},/*#__PURE__*/React.createElement(PopoverHeader,null,\"Click Trigger\"),/*#__PURE__*/React.createElement(PopoverBody,null,\"Clicking on the triggering element makes this popover appear. Clicking on it again will make it disappear. You can select this text, but clicking away (somewhere other than the triggering element) will not dismiss this popover.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline-block mb-1\"},/*#__PURE__*/React.createElement(Button.Ripple,{trigger:\"legacy\",color:\"primary\",outline:true,id:\"popLegacy\"},\"Legacy\"),/*#__PURE__*/React.createElement(UncontrolledPopover,{placement:\"top\",target:\"popLegacy\"},/*#__PURE__*/React.createElement(PopoverHeader,null,\"Legacy Trigger\"),/*#__PURE__*/React.createElement(PopoverBody,null,\"Legacy is a reactstrap special trigger value (outside of bootstrap's spec/standard). Before reactstrap correctly supported click and focus, it had a hybrid which was very useful and has been brought back as trigger=\\\"legacy\\\". One advantage of the legacy trigger is that it allows the popover text to be selected while also closing when clicking outside the triggering element and popover itself.\")))),/*#__PURE__*/React.createElement(TabPane,{className:\"component-code\",tabId:\"2\"},popoverTriggers)))));}}]);return PopoverTriggers;}(React.Component);export default PopoverTriggers;","map":null,"metadata":{},"sourceType":"module"}