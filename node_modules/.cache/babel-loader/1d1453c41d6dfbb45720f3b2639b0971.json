{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/extensions/dropzone/DropzoneAccept.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\";\nimport { useDropzone } from \"react-dropzone\";\n\nfunction DropzoneAccepted(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var _useDropzone = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    onDrop: function onDrop(acceptedFiles) {\n      setFiles(acceptedFiles.map(function (file) {\n        return Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        });\n      }));\n    }\n  }),\n      acceptedFiles = _useDropzone.acceptedFiles,\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  var thumbs = files.map(function (file) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dz-thumb\",\n      key: file.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dz-thumb-inner\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: file.preview,\n      className: \"dz-img\",\n      alt: file.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    })));\n  });\n  useEffect(function () {\n    return function () {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(function (file) {\n        return URL.revokeObjectURL(file.preview);\n      });\n    };\n  }, [files]);\n  var acceptedFilesItems = acceptedFiles.map(function (file) {\n    return /*#__PURE__*/React.createElement(\"aside\", {\n      className: \"thumb-container mb-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, thumbs);\n  }); // const rejectedFilesItems = rejectedFiles.map(file => (\n  //   <div key={file.path}>\n  //     {file.path} - {file.size} bytes\n  //   </div>\n  // ))\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"pb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n    className: \"dropzone\"\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"(Only *.jpeg and *.png images will be accepted)\"))), /*#__PURE__*/React.createElement(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, acceptedFilesItems));\n}\n\nvar DropzoneAccept = /*#__PURE__*/function (_React$Component) {\n  _inherits(DropzoneAccept, _React$Component);\n\n  function DropzoneAccept() {\n    _classCallCheck(this, DropzoneAccept);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DropzoneAccept).apply(this, arguments));\n  }\n\n  _createClass(DropzoneAccept, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, \"Specific File Types\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DropzoneAccepted, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return DropzoneAccept;\n}(React.Component);\n\nexport default DropzoneAccept;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/extensions/dropzone/DropzoneAccept.js"],"names":["React","useState","useEffect","Card","CardHeader","CardBody","CardTitle","useDropzone","DropzoneAccepted","props","files","setFiles","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","name","forEach","revokeObjectURL","acceptedFilesItems","className","DropzoneAccept","Component"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\"\nimport { useDropzone } from \"react-dropzone\"\n\nfunction DropzoneAccepted(props) {\n  const [files, setFiles] = useState([])\n  const {\n    acceptedFiles,\n    // rejectedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    onDrop: acceptedFiles => {\n      setFiles(\n        acceptedFiles.map(file =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      )\n    }\n  })\n  const thumbs = files.map(file => (\n    <div className=\"dz-thumb\" key={file.name}>\n      <div className=\"dz-thumb-inner\">\n        <img src={file.preview} className=\"dz-img\" alt={file.name} />\n      </div>\n    </div>\n  ))\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview))\n    },\n    [files]\n  )\n\n  const acceptedFilesItems = acceptedFiles.map(file => (\n    <aside className=\"thumb-container mb-1\">{thumbs}</aside>\n  ))\n\n  // const rejectedFilesItems = rejectedFiles.map(file => (\n  //   <div key={file.path}>\n  //     {file.path} - {file.size} bytes\n  //   </div>\n  // ))\n\n  return (\n    <section className=\"pb-1\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p className=\"mx-1\">\n          <em>(Only *.jpeg and *.png images will be accepted)</em>\n        </p>\n      </div>\n      <aside>{acceptedFilesItems}</aside>\n    </section>\n  )\n}\n\nclass DropzoneAccept extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Specific File Types</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <DropzoneAccepted />\n        </CardBody>\n      </Card>\n    )\n  }\n}\n\nexport default DropzoneAccept\n"]},"metadata":{},"sourceType":"module"}