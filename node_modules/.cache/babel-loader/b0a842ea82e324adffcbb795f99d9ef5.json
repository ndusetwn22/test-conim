{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\rombak-react-vuexy2\\\\src\\\\layouts\\\\components\\\\menu\\\\vertical-menu\\\\Sidebar.js\";\nimport React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\nimport { connect } from \"react-redux\";\nimport SidebarHeader from \"./SidebarHeader\";\nimport Hammer from \"react-hammerjs\";\nimport SideMenuContent from \"./sidemenu/SideMenuContent\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nclass Sidebar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: window.innerWidth,\n      activeIndex: null,\n      hoveredMenuItem: null,\n      activeItem: this.props.activePath,\n      menuShadow: false,\n      ScrollbarTag: PerfectScrollbar\n    };\n    this.mounted = false;\n\n    this.updateWidth = () => {\n      if (this.mounted) {\n        this.setState(prevState => ({\n          width: window.innerWidth\n        }));\n        this.checkDevice();\n      }\n    };\n\n    this.checkDevice = () => {\n      var prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\n\n      var mq = function (query) {\n        return window.matchMedia(query).matches;\n      };\n\n      if (\"ontouchstart\" in window || window.DocumentTouch) {\n        this.setState({\n          ScrollbarTag: \"div\"\n        });\n      } else {\n        this.setState({\n          ScrollbarTag: PerfectScrollbar\n        });\n      }\n\n      var query = [\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\");\n      return mq(query);\n    };\n\n    this.changeActiveIndex = id => {\n      if (id !== this.state.activeIndex) {\n        this.setState({\n          activeIndex: id\n        });\n      } else {\n        this.setState({\n          activeIndex: null\n        });\n      }\n    };\n\n    this.handleSidebarMouseEnter = id => {\n      if (id !== this.state.hoveredMenuItem) {\n        this.setState({\n          hoveredMenuItem: id\n        });\n      } else {\n        this.setState({\n          hoveredMenuItem: null\n        });\n      }\n    };\n\n    this.handleActiveItem = url => {\n      this.setState({\n        activeItem: url\n      });\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.activePath !== state.activeItem) {\n      return {\n        activeItem: props.activePath\n      };\n    } // Return null if the state hasn't changed\n\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    if (this.mounted) {\n      if (window !== \"undefined\") {\n        window.addEventListener(\"resize\", this.updateWidth, false);\n      }\n\n      this.checkDevice();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let {\n      visibilityState,\n      toggleSidebarMenu,\n      sidebarHover,\n      toggle,\n      color,\n      sidebarVisibility,\n      activeTheme,\n      collapsed,\n      activePath,\n      sidebarState,\n      currentLang,\n      permission,\n      currentUser,\n      collapsedMenuPaths\n    } = this.props;\n    let {\n      menuShadow,\n      activeIndex,\n      hoveredMenuItem,\n      activeItem,\n      ScrollbarTag\n    } = this.state;\n\n    let scrollShadow = (container, dir) => {\n      if (container && dir === \"up\" && container.scrollTop >= 100) {\n        this.setState({\n          menuShadow: true\n        });\n      } else if (container && dir === \"down\" && container.scrollTop < 100) {\n        this.setState({\n          menuShadow: false\n        });\n      } else {\n        return;\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(ContextLayout.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, context => {\n      let dir = context.state.direction;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Hammer, {\n        onSwipe: e => {\n          sidebarVisibility();\n        },\n        direction: dir === \"rtl\" ? \"DIRECTION_LEFT\" : \"DIRECTION_RIGHT\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"menu-swipe-area d-xl-none d-block vh-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: classnames(`main-menu menu-fixed menu-light menu-accordion menu-shadow theme-${activeTheme}`, {\n          collapsed: sidebarState === true,\n          \"hide-sidebar\": this.state.width < 1200 && visibilityState === false\n        }),\n        onMouseEnter: () => sidebarHover(false),\n        onMouseLeave: () => sidebarHover(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(SidebarHeader, {\n        toggleSidebarMenu: toggleSidebarMenu,\n        toggle: toggle,\n        sidebarBgColor: color,\n        sidebarVisibility: sidebarVisibility,\n        activeTheme: activeTheme,\n        collapsed: collapsed,\n        menuShadow: menuShadow,\n        activePath: activePath,\n        sidebarState: sidebarState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ScrollbarTag, Object.assign({\n        className: classnames(\"main-menu-content\", {\n          \"overflow-hidden\": ScrollbarTag !== \"div\",\n          \"overflow-scroll\": ScrollbarTag === \"div\"\n        })\n      }, ScrollbarTag !== \"div\" && {\n        options: {\n          wheelPropagation: false\n        },\n        onScrollDown: container => scrollShadow(container, \"down\"),\n        onScrollUp: container => scrollShadow(container, \"up\"),\n        onYReachStart: () => menuShadow === true && this.setState({\n          menuShadow: false\n        })\n      }, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Hammer, {\n        onSwipe: () => {\n          sidebarVisibility();\n        },\n        direction: dir === \"rtl\" ? \"DIRECTION_RIGHT\" : \"DIRECTION_LEFT\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navigation navigation-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(SideMenuContent, {\n        setActiveIndex: this.changeActiveIndex,\n        activeIndex: activeIndex,\n        hoverIndex: hoveredMenuItem,\n        handleSidebarMouseEnter: this.handleSidebarMouseEnter,\n        activeItemState: activeItem,\n        handleActiveItem: this.handleActiveItem,\n        activePath: activePath,\n        lang: currentLang,\n        permission: permission,\n        currentUser: currentUser,\n        collapsedMenuPaths: collapsedMenuPaths,\n        toggleMenu: sidebarVisibility,\n        deviceWidth: this.props.deviceWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 23\n        }\n      }))))));\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.login.userRole\n  };\n};\n\nexport default connect(mapStateToProps)(Sidebar);","map":{"version":3,"sources":["E:/react/rombak-react-vuexy2/src/layouts/components/menu/vertical-menu/Sidebar.js"],"names":["React","Component","classnames","ContextLayout","connect","SidebarHeader","Hammer","SideMenuContent","PerfectScrollbar","Sidebar","state","width","window","innerWidth","activeIndex","hoveredMenuItem","activeItem","props","activePath","menuShadow","ScrollbarTag","mounted","updateWidth","setState","prevState","checkDevice","prefixes","split","mq","query","matchMedia","matches","DocumentTouch","join","changeActiveIndex","id","handleSidebarMouseEnter","handleActiveItem","url","getDerivedStateFromProps","componentDidMount","addEventListener","componentWillUnmount","render","visibilityState","toggleSidebarMenu","sidebarHover","toggle","color","sidebarVisibility","activeTheme","collapsed","sidebarState","currentLang","permission","currentUser","collapsedMenuPaths","scrollShadow","container","dir","scrollTop","context","direction","e","options","wheelPropagation","onScrollDown","onScrollUp","onYReachStart","deviceWidth","mapStateToProps","auth","login","userRole"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport classnames from \"classnames\"\nimport { ContextLayout } from \"../../../../utility/context/Layout\"\nimport { connect } from \"react-redux\"\nimport SidebarHeader from \"./SidebarHeader\"\nimport Hammer from \"react-hammerjs\"\nimport SideMenuContent from \"./sidemenu/SideMenuContent\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nclass Sidebar extends Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.activePath !== state.activeItem) {\n      return {\n        activeItem: props.activePath\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    width: window.innerWidth,\n    activeIndex: null,\n    hoveredMenuItem: null,\n    activeItem: this.props.activePath,\n    menuShadow: false,\n    ScrollbarTag: PerfectScrollbar\n  }\n\n  mounted = false\n\n  updateWidth = () => {\n    if (this.mounted) {\n      this.setState(prevState => ({\n        width: window.innerWidth\n      }))\n      this.checkDevice()\n    }\n  }\n\n  componentDidMount() {\n    this.mounted = true\n    if (this.mounted) {\n      if (window !== \"undefined\") {\n        window.addEventListener(\"resize\", this.updateWidth, false)\n      }\n      this.checkDevice()\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false\n  }\n\n  checkDevice = () => {\n    var prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \")\n    var mq = function(query) {\n      return window.matchMedia(query).matches\n    }\n\n    if (\"ontouchstart\" in window || window.DocumentTouch) {\n      this.setState({\n        ScrollbarTag: \"div\"\n      })\n    } else {\n      this.setState({\n        ScrollbarTag: PerfectScrollbar\n      })\n    }\n    var query = [\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\")\n    return mq(query)\n  }\n\n  changeActiveIndex = id => {\n    if (id !== this.state.activeIndex) {\n      this.setState({\n        activeIndex: id\n      })\n    } else {\n      this.setState({\n        activeIndex: null\n      })\n    }\n  }\n\n  handleSidebarMouseEnter = id => {\n    if (id !== this.state.hoveredMenuItem) {\n      this.setState({\n        hoveredMenuItem: id\n      })\n    } else {\n      this.setState({\n        hoveredMenuItem: null\n      })\n    }\n  }\n\n  handleActiveItem = url => {\n    this.setState({\n      activeItem: url\n    })\n  }\n\n  render() {\n    let {\n      visibilityState,\n      toggleSidebarMenu,\n      sidebarHover,\n      toggle,\n      color,\n      sidebarVisibility,\n      activeTheme,\n      collapsed,\n      activePath,\n      sidebarState,\n      currentLang,\n      permission,\n      currentUser,\n      collapsedMenuPaths\n    } = this.props\n\n    let {\n      menuShadow,\n      activeIndex,\n      hoveredMenuItem,\n      activeItem,\n      ScrollbarTag\n    } = this.state\n    let scrollShadow = (container, dir) => {\n      if (container && dir === \"up\" && container.scrollTop >= 100) {\n        this.setState({ menuShadow: true })\n      } else if (container && dir === \"down\" && container.scrollTop < 100) {\n        this.setState({ menuShadow: false })\n      } else {\n        return\n      }\n    }\n    return (\n      <ContextLayout.Consumer>\n        {context => {\n          let dir = context.state.direction\n          return (\n            <React.Fragment>\n              <Hammer\n                onSwipe={e => {\n                  sidebarVisibility()\n                }}\n                direction={\n                  dir === \"rtl\" ? \"DIRECTION_LEFT\" : \"DIRECTION_RIGHT\"\n                }>\n                <div className=\"menu-swipe-area d-xl-none d-block vh-100\"></div>\n              </Hammer>\n\n              <div\n                className={classnames(\n                  `main-menu menu-fixed menu-light menu-accordion menu-shadow theme-${activeTheme}`,\n                  {\n                    collapsed: sidebarState === true,\n                    \"hide-sidebar\":\n                      this.state.width < 1200 && visibilityState === false\n                  }\n                )}\n                onMouseEnter={() => sidebarHover(false)}\n                onMouseLeave={() => sidebarHover(true)}>\n                <SidebarHeader\n                  toggleSidebarMenu={toggleSidebarMenu}\n                  toggle={toggle}\n                  sidebarBgColor={color}\n                  sidebarVisibility={sidebarVisibility}\n                  activeTheme={activeTheme}\n                  collapsed={collapsed}\n                  menuShadow={menuShadow}\n                  activePath={activePath}\n                  sidebarState={sidebarState}\n                />\n                <ScrollbarTag\n                  className={classnames(\"main-menu-content\", {\n                    \"overflow-hidden\": ScrollbarTag !== \"div\",\n                    \"overflow-scroll\": ScrollbarTag === \"div\"\n                  })}\n                  {...(ScrollbarTag !== \"div\" && {\n                    options: { wheelPropagation: false },\n                    onScrollDown: container => scrollShadow(container, \"down\"),\n                    onScrollUp: container => scrollShadow(container, \"up\"),\n                    onYReachStart: () =>\n                      menuShadow === true &&\n                      this.setState({ menuShadow: false })\n                  })}>\n                  <Hammer\n                    onSwipe={() => {\n                      sidebarVisibility()\n                    }}\n                    direction={\n                      dir === \"rtl\" ? \"DIRECTION_RIGHT\" : \"DIRECTION_LEFT\"\n                    }>\n                    <ul className=\"navigation navigation-main\">\n                      <SideMenuContent\n                        setActiveIndex={this.changeActiveIndex}\n                        activeIndex={activeIndex}\n                        hoverIndex={hoveredMenuItem}\n                        handleSidebarMouseEnter={this.handleSidebarMouseEnter}\n                        activeItemState={activeItem}\n                        handleActiveItem={this.handleActiveItem}\n                        activePath={activePath}\n                        lang={currentLang}\n                        permission={permission}\n                        currentUser={currentUser}\n                        collapsedMenuPaths={collapsedMenuPaths}\n                        toggleMenu={sidebarVisibility}\n                        deviceWidth={this.props.deviceWidth}\n                      />\n                    </ul>\n                  </Hammer>\n                </ScrollbarTag>\n              </div>\n            </React.Fragment>\n          )\n        }}\n      </ContextLayout.Consumer>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.login.userRole\n  }\n}\n\nexport default connect(mapStateToProps)(Sidebar)\n"]},"metadata":{},"sourceType":"module"}