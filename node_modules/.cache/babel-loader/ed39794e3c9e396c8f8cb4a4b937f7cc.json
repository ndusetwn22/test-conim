{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Card,CardBody,Input,Button,UncontrolledDropdown,DropdownMenu,DropdownItem,DropdownToggle}from\"reactstrap\";import{AgGridReact}from\"ag-grid-react\";import{ContextLayout}from\"../../../utility/context/Layout\";import{ChevronDown}from\"react-feather\";import axios from\"axios\";import\"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";import Breadcrumbs from\"../../../components/@vuexy/breadCrumbs/BreadCrumb\";var AggridTable=/*#__PURE__*/function(_React$Component){_inherits(AggridTable,_React$Component);var _super=_createSuper(AggridTable);function AggridTable(){var _this;_classCallCheck(this,AggridTable);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={rowData:null,paginationPageSize:20,currenPageSize:\"\",getPageSize:\"\",defaultColDef:{sortable:true,editable:true,resizable:true,suppressMenu:true},columnDefs:[{headerName:\"First Name\",field:\"firstname\",width:175,filter:true,checkboxSelection:true,headerCheckboxSelectionFilteredOnly:true,headerCheckboxSelection:true},{headerName:\"Last Name\",field:\"lastname\",filter:true,width:175},{headerName:\"Email\",field:\"email\",filter:true,width:250,pinned:window.innerWidth>992?\"left\":false},{headerName:\"Company\",field:\"company\",filter:true,width:250},{headerName:\"City\",field:\"city\",filter:true,width:150},{headerName:\"Country\",field:\"country\",filter:true,width:150},{headerName:\"State\",field:\"state\",filter:true,width:125},{headerName:\"Zip\",field:\"zip\",filter:\"agNumberColumnFilter\",width:140},{headerName:\"Followers\",field:\"followers\",filter:\"agNumberColumnFilter\",width:140}]};_this.onGridReady=function(params){_this.gridApi=params.api;_this.gridColumnApi=params.columnApi;_this.setState({currenPageSize:_this.gridApi.paginationGetCurrentPage()+1,getPageSize:_this.gridApi.paginationGetPageSize(),totalPages:_this.gridApi.paginationGetTotalPages()});};_this.updateSearchQuery=function(val){_this.gridApi.setQuickFilter(val);};_this.filterSize=function(val){if(_this.gridApi){_this.gridApi.paginationSetPageSize(Number(val));_this.setState({currenPageSize:val,getPageSize:val});}};return _this;}_createClass(AggridTable,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get(\"/api/aggrid/data\").then(function(response){var rowData=response.data.data;JSON.stringify(rowData);_this2.setState({rowData:rowData});});}},{key:\"render\",value:function render(){var _this3=this;var _this$state=this.state,rowData=_this$state.rowData,columnDefs=_this$state.columnDefs,defaultColDef=_this$state.defaultColDef;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Breadcrumbs,{breadCrumbTitle:\"Aggrid Table\",breadCrumbParent:\"Forms & Tables\",breadCrumbActive:\"Aggrid Table\"}),/*#__PURE__*/React.createElement(Card,{className:\"overflow-hidden agGrid-card\"},/*#__PURE__*/React.createElement(CardBody,{className:\"py-0\"},this.state.rowData===null?null:/*#__PURE__*/React.createElement(\"div\",{className:\"ag-theme-material w-100 my-2 ag-grid-table\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex flex-wrap justify-content-between align-items-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mb-1\"},/*#__PURE__*/React.createElement(UncontrolledDropdown,{className:\"p-1 ag-dropdown\"},/*#__PURE__*/React.createElement(DropdownToggle,{tag:\"div\"},this.gridApi?this.state.currenPageSize:\"\"*this.state.getPageSize-(this.state.getPageSize-1),\" \",\"-\",\" \",this.state.rowData.length-this.state.currenPageSize*this.state.getPageSize>0?this.state.currenPageSize*this.state.getPageSize:this.state.rowData.length,\" \",\"of \",this.state.rowData.length,/*#__PURE__*/React.createElement(ChevronDown,{className:\"ml-50\",size:15})),/*#__PURE__*/React.createElement(DropdownMenu,{right:true},/*#__PURE__*/React.createElement(DropdownItem,{tag:\"div\",onClick:function onClick(){return _this3.filterSize(20);}},\"20\"),/*#__PURE__*/React.createElement(DropdownItem,{tag:\"div\",onClick:function onClick(){return _this3.filterSize(50);}},\"50\"),/*#__PURE__*/React.createElement(DropdownItem,{tag:\"div\",onClick:function onClick(){return _this3.filterSize(100);}},\"100\"),/*#__PURE__*/React.createElement(DropdownItem,{tag:\"div\",onClick:function onClick(){return _this3.filterSize(134);}},\"134\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex flex-wrap justify-content-between mb-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"table-input mr-1\"},/*#__PURE__*/React.createElement(Input,{placeholder:\"search...\",onChange:function onChange(e){return _this3.updateSearchQuery(e.target.value);},value:this.state.value})),/*#__PURE__*/React.createElement(\"div\",{className:\"export-btn\"},/*#__PURE__*/React.createElement(Button.Ripple,{color:\"primary\",onClick:function onClick(){return _this3.gridApi.exportDataAsCsv();}},\"Export as CSV\")))),/*#__PURE__*/React.createElement(ContextLayout.Consumer,null,function(context){return/*#__PURE__*/React.createElement(AgGridReact,{gridOptions:{},rowSelection:\"multiple\",defaultColDef:defaultColDef,columnDefs:columnDefs,rowData:rowData,onGridReady:_this3.onGridReady,colResizeDefault:\"shift\",animateRows:true,floatingFilter:true,pagination:true,paginationPageSize:_this3.state.paginationPageSize,pivotPanelShow:\"always\",enableRtl:context.state.direction===\"rtl\"});})))));}}]);return AggridTable;}(React.Component);export default AggridTable;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/tables/aggrid/Aggrid.js"],"names":["React","Card","CardBody","Input","Button","UncontrolledDropdown","DropdownMenu","DropdownItem","DropdownToggle","AgGridReact","ContextLayout","ChevronDown","axios","Breadcrumbs","AggridTable","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","filter","checkboxSelection","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","pinned","window","innerWidth","onGridReady","params","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","get","then","response","data","JSON","stringify","length","e","target","value","exportDataAsCsv","context","direction","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardBody,\n  Input,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { AgGridReact } from \"ag-grid-react\"\nimport { ContextLayout } from \"../../../utility/context/Layout\"\nimport { ChevronDown } from \"react-feather\"\nimport axios from \"axios\"\n\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\n\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\n\nclass AggridTable extends React.Component {\n  state = {\n    rowData: null,\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true\n    },\n    columnDefs: [\n      {\n        headerName: \"First Name\",\n        field: \"firstname\",\n        width: 175,\n        filter: true,\n        checkboxSelection: true,\n        headerCheckboxSelectionFilteredOnly: true,\n        headerCheckboxSelection: true\n      },\n      {\n        headerName: \"Last Name\",\n        field: \"lastname\",\n        filter: true,\n        width: 175\n      },\n      {\n        headerName: \"Email\",\n        field: \"email\",\n        filter: true,\n        width: 250,\n        pinned: window.innerWidth > 992 ? \"left\" : false\n      },\n      {\n        headerName: \"Company\",\n        field: \"company\",\n        filter: true,\n        width: 250\n      },\n      {\n        headerName: \"City\",\n        field: \"city\",\n        filter: true,\n        width: 150\n      },\n      {\n        headerName: \"Country\",\n        field: \"country\",\n        filter: true,\n        width: 150\n      },\n      {\n        headerName: \"State\",\n        field: \"state\",\n        filter: true,\n        width: 125\n      },\n      {\n        headerName: \"Zip\",\n        field: \"zip\",\n        filter: \"agNumberColumnFilter\",\n        width: 140\n      },\n      {\n        headerName: \"Followers\",\n        field: \"followers\",\n        filter: \"agNumberColumnFilter\",\n        width: 140\n      }\n    ]\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/aggrid/data\").then(response => {\n      let rowData = response.data.data\n      JSON.stringify(rowData)\n      this.setState({ rowData })\n    })\n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api\n    this.gridColumnApi = params.columnApi\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages()\n    })\n  }\n\n  updateSearchQuery = val => {\n    this.gridApi.setQuickFilter(val)\n  }\n\n  filterSize = val => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val))\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val\n      })\n    }\n  }\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Aggrid Table\"\n          breadCrumbParent=\"Forms & Tables\"\n          breadCrumbActive=\"Aggrid Table\"\n        />\n        <Card className=\"overflow-hidden agGrid-card\">\n          <CardBody className=\"py-0\">\n            {this.state.rowData === null ? null : (\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                  <div className=\"mb-1\">\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                      <DropdownToggle tag=\"div\">\n                        {this.gridApi\n                          ? this.state.currenPageSize\n                          : \"\" * this.state.getPageSize -\n                            (this.state.getPageSize - 1)}{\" \"}\n                        -{\" \"}\n                        {this.state.rowData.length -\n                          this.state.currenPageSize * this.state.getPageSize >\n                        0\n                          ? this.state.currenPageSize * this.state.getPageSize\n                          : this.state.rowData.length}{\" \"}\n                        of {this.state.rowData.length}\n                        <ChevronDown className=\"ml-50\" size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(20)}\n                        >\n                          20\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(50)}\n                        >\n                          50\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(100)}\n                        >\n                          100\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(134)}\n                        >\n                          134\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                    <div className=\"table-input mr-1\">\n                      <Input\n                        placeholder=\"search...\"\n                        onChange={e => this.updateSearchQuery(e.target.value)}\n                        value={this.state.value}\n                      />\n                    </div>\n                    <div className=\"export-btn\">\n                      <Button.Ripple\n                        color=\"primary\"\n                        onClick={() => this.gridApi.exportDataAsCsv()}\n                      >\n                        Export as CSV\n                      </Button.Ripple>\n                    </div>\n                  </div>\n                </div>\n                <ContextLayout.Consumer>\n                  {context => (\n                    <AgGridReact\n                      gridOptions={{}}\n                      rowSelection=\"multiple\"\n                      defaultColDef={defaultColDef}\n                      columnDefs={columnDefs}\n                      rowData={rowData}\n                      onGridReady={this.onGridReady}\n                      colResizeDefault={\"shift\"}\n                      animateRows={true}\n                      floatingFilter={true}\n                      pagination={true}\n                      paginationPageSize={this.state.paginationPageSize}\n                      pivotPanelShow=\"always\"\n                      enableRtl={context.state.direction === \"rtl\"}\n                    />\n                  )}\n                </ContextLayout.Consumer>\n              </div>\n            )}\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AggridTable\n"]},"metadata":{},"sourceType":"module"}