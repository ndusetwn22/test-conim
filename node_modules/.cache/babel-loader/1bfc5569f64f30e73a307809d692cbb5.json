{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\template-belajar-react\\\\src\\\\utility\\\\context\\\\Internationalization.js\";\nimport React from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport messages_en from \"../../assets/data/locales/en.json\";\nimport messages_de from \"../../assets/data/locales/de.json\";\nimport messages_fr from \"../../assets/data/locales/fr.json\";\nimport messages_pt from \"../../assets/data/locales/pt.json\";\nconst menu_messages = {\n  en: messages_en,\n  de: messages_de,\n  fr: messages_fr,\n  pt: messages_pt\n};\nconst Context = React.createContext();\n\nclass IntlProviderWrapper extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      locale: \"en\",\n      messages: menu_messages[\"en\"]\n    };\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      locale,\n      messages\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Context.Provider, {\n      value: {\n        state: this.state,\n        switchLanguage: language => {\n          this.setState({\n            locale: language,\n            messages: menu_messages[language]\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IntlProvider, {\n      key: locale,\n      locale: locale,\n      messages: messages,\n      defaultLocale: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, children));\n  }\n\n}\n\nexport { IntlProviderWrapper, Context as IntlContext };","map":{"version":3,"sources":["E:/react/template-belajar-react/src/utility/context/Internationalization.js"],"names":["React","IntlProvider","messages_en","messages_de","messages_fr","messages_pt","menu_messages","en","de","fr","pt","Context","createContext","IntlProviderWrapper","Component","state","locale","messages","render","children","props","switchLanguage","language","setState","IntlContext"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,EAAE,EAAEL,WADgB;AAEpBM,EAAAA,EAAE,EAAEL,WAFgB;AAGpBM,EAAAA,EAAE,EAAEL,WAHgB;AAIpBM,EAAAA,EAAE,EAAEL;AAJgB,CAAtB;AAOA,MAAMM,OAAO,GAAGX,KAAK,CAACY,aAAN,EAAhB;;AAEA,MAAMC,mBAAN,SAAkCb,KAAK,CAACc,SAAxC,CAAkD;AAAA;AAAA;AAAA,SAChDC,KADgD,GACxC;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,QAAQ,EAAEX,aAAa,CAAC,IAAD;AAFjB,KADwC;AAAA;;AAMhDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAM;AAAEJ,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAuB,KAAKF,KAAlC;AACA,wBACE,oBAAC,OAAD,CAAS,QAAT;AACE,MAAA,KAAK,EAAE;AACLA,QAAAA,KAAK,EAAE,KAAKA,KADP;AAELM,QAAAA,cAAc,EAAEC,QAAQ,IAAI;AAC1B,eAAKC,QAAL,CAAc;AACZP,YAAAA,MAAM,EAAEM,QADI;AAEZL,YAAAA,QAAQ,EAAEX,aAAa,CAACgB,QAAD;AAFX,WAAd;AAID;AAPI,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEN,MADP;AAEE,MAAA,MAAM,EAAEA,MAFV;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,aAAa,EAAC,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGE,QANH,CAXF,CADF;AAsBD;;AA/B+C;;AAkClD,SAASN,mBAAT,EAA8BF,OAAO,IAAIa,WAAzC","sourcesContent":["import React from \"react\"\nimport { IntlProvider } from \"react-intl\"\n\nimport messages_en from \"../../assets/data/locales/en.json\"\nimport messages_de from \"../../assets/data/locales/de.json\"\nimport messages_fr from \"../../assets/data/locales/fr.json\"\nimport messages_pt from \"../../assets/data/locales/pt.json\"\n\nconst menu_messages = {\n  en: messages_en,\n  de: messages_de,\n  fr: messages_fr,\n  pt: messages_pt\n}\n\nconst Context = React.createContext()\n\nclass IntlProviderWrapper extends React.Component {\n  state = {\n    locale: \"en\",\n    messages: menu_messages[\"en\"]\n  }\n\n  render() {\n    const { children } = this.props\n    const { locale, messages } = this.state\n    return (\n      <Context.Provider\n        value={{\n          state: this.state,\n          switchLanguage: language => {\n            this.setState({\n              locale: language,\n              messages: menu_messages[language]\n            })\n          }\n        }}\n      >\n        <IntlProvider\n          key={locale}\n          locale={locale}\n          messages={messages}\n          defaultLocale=\"en\"\n        >\n          {children}\n        </IntlProvider>\n      </Context.Provider>\n    )\n  }\n}\n\nexport { IntlProviderWrapper, Context as IntlContext }\n"]},"metadata":{},"sourceType":"module"}