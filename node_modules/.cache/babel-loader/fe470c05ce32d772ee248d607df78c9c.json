{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/views/apps/todo/Todo.js\";\nimport React from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport TodoSidebar from \"./TodoSidebar\";\nimport TodoList from \"./TodoList\";\nimport TaskSidebar from \"./TaskSidebar\";\nimport \"../../../assets/scss/pages/app-todo.scss\";\nvar mql = window.matchMedia(\"(min-width: 992px)\");\n\nvar TODO = /*#__PURE__*/function (_React$Component) {\n  _inherits(TODO, _React$Component);\n\n  function TODO() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TODO);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TODO)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      addTask: false,\n      sidebarDocked: mql.matches,\n      sidebarOpen: false,\n      taskToUpdate: null,\n      prevState: null\n    };\n\n    _this.onSetSidebarOpen = function (open) {\n      _this.setState({\n        sidebarOpen: open\n      });\n    };\n\n    _this.mediaQueryChanged = function () {\n      _this.setState({\n        sidebarDocked: mql.matches,\n        sidebarOpen: false\n      });\n    };\n\n    _this.handleAddTask = function (status) {\n      status === \"open\" ? _this.setState({\n        addTask: true\n      }) : _this.setState({\n        addTask: false,\n        taskToUpdate: null\n      });\n    };\n\n    _this.handleUpdateTask = function (todo) {\n      if (todo !== undefined) {\n        _this.setState({\n          addTask: true,\n          taskToUpdate: todo\n        });\n      } else {\n        _this.setState({\n          taskToUpdate: null\n        });\n      }\n    };\n\n    _this.handleUndoChanges = function (arr) {\n      _this.setState({\n        prevState: arr\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TODO, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      mql.addListener(this.mediaQueryChanged);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      mql.removeListener(this.mediaQueryChanged);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-application position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app-content-overlay \".concat(this.state.addTask || this.state.sidebarOpen ? \"show\" : \"\"),\n        onClick: function onClick() {\n          _this2.handleAddTask(\"close\");\n\n          _this2.onSetSidebarOpen(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ContextLayout.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, function (context) {\n        return /*#__PURE__*/React.createElement(Sidebar, {\n          sidebar: /*#__PURE__*/React.createElement(TodoSidebar, {\n            routerProps: _this2.props,\n            addTask: _this2.handleAddTask,\n            mainSidebar: _this2.onSetSidebarOpen,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }\n          }),\n          docked: _this2.state.sidebarDocked,\n          open: _this2.state.sidebarOpen,\n          sidebarClassName: \"sidebar-content todo-sidebar d-flex\",\n          touch: false,\n          contentClassName: \"sidebar-children d-none\",\n          pullRight: context.state.direction === \"rtl\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }, \"\\\"\\\"\");\n      }), /*#__PURE__*/React.createElement(TodoList, {\n        routerProps: this.props,\n        handleUpdateTask: this.handleUpdateTask,\n        mainSidebar: this.onSetSidebarOpen,\n        prevState: this.state.prevState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(TaskSidebar, {\n        addTask: this.handleAddTask,\n        addTaskState: this.state.addTask,\n        taskToUpdate: this.state.taskToUpdate,\n        newTask: this.state.newTask,\n        mainSidebar: this.onSetSidebarOpen,\n        handleUndoChanges: this.handleUndoChanges,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return TODO;\n}(React.Component);\n\nexport default TODO;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/apps/todo/Todo.js"],"names":["React","Sidebar","ContextLayout","TodoSidebar","TodoList","TaskSidebar","mql","window","matchMedia","TODO","state","addTask","sidebarDocked","matches","sidebarOpen","taskToUpdate","prevState","onSetSidebarOpen","open","setState","mediaQueryChanged","handleAddTask","status","handleUpdateTask","todo","undefined","handleUndoChanges","arr","addListener","removeListener","context","props","direction","newTask","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Sidebar from \"react-sidebar\"\nimport { ContextLayout } from \"../../../utility/context/Layout\"\nimport TodoSidebar from \"./TodoSidebar\"\nimport TodoList from \"./TodoList\"\nimport TaskSidebar from \"./TaskSidebar\"\nimport \"../../../assets/scss/pages/app-todo.scss\"\nconst mql = window.matchMedia(`(min-width: 992px)`)\n\nclass TODO extends React.Component {\n  state = {\n    addTask: false,\n    sidebarDocked: mql.matches,\n    sidebarOpen: false,\n    taskToUpdate: null,\n    prevState: null\n  }\n  UNSAFE_componentWillMount() {\n    mql.addListener(this.mediaQueryChanged)\n  }\n\n  componentWillUnmount() {\n    mql.removeListener(this.mediaQueryChanged)\n  }\n\n  onSetSidebarOpen = open => {\n    this.setState({ sidebarOpen: open })\n  }\n\n  mediaQueryChanged = () => {\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\n  }\n\n  handleAddTask = status => {\n    status === \"open\"\n      ? this.setState({ addTask: true })\n      : this.setState({ addTask: false, taskToUpdate: null })\n  }\n  handleUpdateTask = todo => {\n    if (todo !== undefined) {\n      this.setState({ addTask: true, taskToUpdate: todo })\n    } else {\n      this.setState({ taskToUpdate: null })\n    }\n  }\n\n  handleUndoChanges = arr => {\n    this.setState({\n      prevState: arr\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"todo-application position-relative\">\n        <div\n          className={`app-content-overlay ${\n            this.state.addTask || this.state.sidebarOpen ? \"show\" : \"\"\n          }`}\n          onClick={() => {\n            this.handleAddTask(\"close\")\n            this.onSetSidebarOpen(false)\n          }}\n        />\n        <ContextLayout.Consumer>\n          {context => (\n            <Sidebar\n              sidebar={\n                <TodoSidebar\n                  routerProps={this.props}\n                  addTask={this.handleAddTask}\n                  mainSidebar={this.onSetSidebarOpen}\n                />\n              }\n              docked={this.state.sidebarDocked}\n              open={this.state.sidebarOpen}\n              sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\n              touch={false}\n              contentClassName=\"sidebar-children d-none\"\n              pullRight={context.state.direction === \"rtl\"}>\n              \"\"\n            </Sidebar>\n          )}\n        </ContextLayout.Consumer>\n        <TodoList\n          routerProps={this.props}\n          handleUpdateTask={this.handleUpdateTask}\n          mainSidebar={this.onSetSidebarOpen}\n          prevState={this.state.prevState}\n        />\n        <TaskSidebar\n          addTask={this.handleAddTask}\n          addTaskState={this.state.addTask}\n          taskToUpdate={this.state.taskToUpdate}\n          newTask={this.state.newTask}\n          mainSidebar={this.onSetSidebarOpen}\n          handleUndoChanges={this.handleUndoChanges}\n        />\n      </div>\n    )\n  }\n}\n\nexport default TODO\n"]},"metadata":{},"sourceType":"module"}