{"ast":null,"code":"import _defineProperty from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/extensions/sweet-alert/SweetAlertOptions.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\";\nimport SweetAlert from 'react-bootstrap-sweetalert'; // import alertImg from \"../../assets/img/slider/04.jpg\"\n\nvar SweetAlertOptions = /*#__PURE__*/function (_React$Component) {\n  _inherits(SweetAlertOptions, _React$Component);\n\n  function SweetAlertOptions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SweetAlertOptions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SweetAlertOptions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      imgAlert: false,\n      timerAlert: false,\n      outsideClickAlert: false,\n      overlayAlert: false,\n      inputAlert: false\n    };\n\n    _this.handleAlert = function (state, value) {\n      _this.setState(_defineProperty({}, state, value));\n    };\n\n    return _this;\n  }\n\n  _createClass(SweetAlertOptions, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, \"Options\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mr-1 mb-1\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleAlert(\"imgAlert\", true);\n        },\n        outline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, \"Image\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mr-1 mb-1\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleAlert(\"timerAlert\", true);\n        },\n        outline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, \"Timeout\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mr-1 mb-1\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleAlert(\"overlayAlert\", true);\n        },\n        outline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, \"Overlay\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mr-1 mb-1\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleAlert(\"outsideClickAlert\", true);\n        },\n        outline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, \"Outside Click\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-1\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleAlert(\"inputAlert\", true);\n        },\n        outline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"Input Alert\"), /*#__PURE__*/React.createElement(SweetAlert, {\n        title: \"Sweet!\",\n        custom: true,\n        show: this.state.imgAlert,\n        customIcon: \"https://raw.githubusercontent.com/djorg83/react-bootstrap-sweetalert/master/demo/assets/thumbs-up.jpg\",\n        onConfirm: function onConfirm() {\n          return _this2.handleAlert(\"imgAlert\", false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"sweet-alert-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, \"Sweet Alert with an image.\")), /*#__PURE__*/React.createElement(SweetAlert, {\n        title: \"Auto close alert!\",\n        timeout: 2000,\n        show: this.state.timerAlert,\n        onConfirm: function onConfirm() {\n          return _this2.handleAlert(\"timerAlert\", false);\n        },\n        onCancel: function onCancel() {\n          return _this2.handleAlert(\"timerAlert\", false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"sweet-alert-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, \"I will close in 2 seconds.\")), /*#__PURE__*/React.createElement(SweetAlert, {\n        title: \"Click outside to close!\",\n        closeOnClickOutside: true,\n        show: this.state.outsideClickAlert,\n        onConfirm: function onConfirm() {\n          return _this2.handleAlert(\"outsideClickAlert\", false);\n        },\n        onCancel: function onCancel() {\n          return _this2.handleAlert(\"outsideClickAlert\", false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"sweet-alert-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, \"You clicked the button!\")), /*#__PURE__*/React.createElement(SweetAlert, {\n        title: \"No Overlay\",\n        hideOverlay: true,\n        show: this.state.overlayAlert,\n        onConfirm: function onConfirm() {\n          return _this2.handleAlert(\"overlayAlert\", false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"sweet-alert-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, \"You clicked the button!\")), /*#__PURE__*/React.createElement(SweetAlert, {\n        title: \"An input!\",\n        input: true,\n        show: this.state.inputAlert,\n        placeHolder: \"Write something\",\n        onConfirm: function onConfirm() {\n          return _this2.handleAlert(\"inputAlert\", false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"sweet-alert-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, \"Write something interesting:\"))));\n    }\n  }]);\n\n  return SweetAlertOptions;\n}(React.Component);\n\nexport default SweetAlertOptions;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/extensions/sweet-alert/SweetAlertOptions.js"],"names":["React","Card","CardHeader","CardBody","CardTitle","Button","SweetAlert","SweetAlertOptions","state","imgAlert","timerAlert","outsideClickAlert","overlayAlert","inputAlert","handleAlert","value","setState","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport SweetAlert from 'react-bootstrap-sweetalert';\n// import alertImg from \"../../assets/img/slider/04.jpg\"\n\nclass SweetAlertOptions extends React.Component {\n  state = {\n   imgAlert : false, \n   timerAlert : false, \n   outsideClickAlert : false, \n   overlayAlert : false,\n   inputAlert : false\n  }\n\n  handleAlert = (state, value) => {\n    this.setState({ [state] : value })\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Options</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"imgAlert\", true)} outline>Image</Button>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"timerAlert\", true)} outline>Timeout</Button>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"overlayAlert\", true)} outline>Overlay</Button>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"outsideClickAlert\", true)} outline>Outside Click</Button>\n        <Button className=\"mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"inputAlert\", true)} outline>Input Alert</Button>\n        \n\n        <SweetAlert title=\"Sweet!\"  \n          custom\n          show={this.state.imgAlert}\n          customIcon=\"https://raw.githubusercontent.com/djorg83/react-bootstrap-sweetalert/master/demo/assets/thumbs-up.jpg\"\n          onConfirm={() => this.handleAlert(\"imgAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">Sweet Alert with an image.</p>\n        </SweetAlert>\n\n        <SweetAlert title=\"Auto close alert!\"\n          timeout={2000}\n          show={this.state.timerAlert} \n          onConfirm={() => this.handleAlert(\"timerAlert\", false)}\n          onCancel={() => this.handleAlert(\"timerAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              I will close in 2 seconds.\n            </p>\n        </SweetAlert>\n\n        <SweetAlert title=\"Click outside to close!\"\n          closeOnClickOutside\n          show={this.state.outsideClickAlert} \n          onConfirm={() => this.handleAlert(\"outsideClickAlert\", false)}\n          onCancel={() => this.handleAlert(\"outsideClickAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert title=\"No Overlay\"\n          hideOverlay\n          show={this.state.overlayAlert} \n          onConfirm={() => this.handleAlert(\"overlayAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert title=\"An input!\"\n          input\n          show={this.state.inputAlert}\n          placeHolder=\"Write something\" \n          onConfirm={() => this.handleAlert(\"inputAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              Write something interesting:\n            </p>\n        </SweetAlert>\n\n      </CardBody>\n    </Card>\n    )\n  }\n}\n\nexport default SweetAlertOptions"]},"metadata":{},"sourceType":"module"}