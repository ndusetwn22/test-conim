{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/rombak-react-vuexy2/src/extensions/treeview/TreeView.js\";\nimport React from \"react\";\nimport ExtensionsHeader from \"../extensionsHeader\";\nimport { Row, Col, Card, CardHeader, CardBody, CardTitle, Spinner } from \"reactstrap\";\nimport { Treebeard, decorators } from \"react-treebeard\";\nimport Prism from \"prismjs\";\nimport { connect } from \"react-redux\";\nimport * as filters from \"./Filter\";\nimport NodeViewer from \"./NodeViewer\";\nimport { data } from \"./Data\";\nimport { styleLight, styleDark } from \"./Styles\";\n\nconst Loading = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: props.style.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"sm\",\n    color: \"primary\",\n    style: props.style.arrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n};\n\nclass TreeView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data\n    };\n\n    this.onToggle = (node, toggled) => {\n      const {\n        cursor,\n        data\n      } = this.state;\n\n      if (cursor) {\n        this.setState(() => ({\n          cursor,\n          active: false\n        }));\n      }\n\n      node.active = !node.active;\n\n      if (node.children) {\n        node.toggled = toggled;\n      }\n\n      this.setState(() => ({\n        cursor: node,\n        data: Object.assign({}, data)\n      }));\n    };\n\n    this.onFilterMouseUp = ({\n      target: {\n        value\n      }\n    }) => {\n      const filter = value.trim();\n\n      if (!filter) {\n        return this.setState(() => ({\n          data\n        }));\n      }\n\n      let filtered = filters.filterTree(data, filter);\n      filtered = filters.expandFilteredNodes(filtered, filter);\n      this.setState(() => ({\n        data: filtered\n      }));\n    };\n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  render() {\n    const {\n      data,\n      cursor\n    } = this.state;\n    decorators.Loading = Loading;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExtensionsHeader, {\n      title: \"React Treebeard\",\n      subTitle: \"Data-Driven, Fast, Efficient and Customisable tree view component. \",\n      link: \"https://github.com/storybookjs/react-treebeard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Default\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: \"6\",\n      lg: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-1\",\n      onKeyUp: this.onFilterMouseUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Treebeard, {\n      data: data,\n      onToggle: this.onToggle,\n      style: this.props.theme === \"light\" || this.props.theme === \"semi-dark\" ? styleLight : styleDark,\n      decorators: decorators,\n      animations: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xl: \"6\",\n      lg: \"12\",\n      className: \"mt-2 mt-xl-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NodeViewer, {\n      node: cursor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    theme: state.customizer.customizer.theme\n  };\n};\n\nexport default connect(mapStateToProps)(TreeView);","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/rombak-react-vuexy2/src/extensions/treeview/TreeView.js"],"names":["React","ExtensionsHeader","Row","Col","Card","CardHeader","CardBody","CardTitle","Spinner","Treebeard","decorators","Prism","connect","filters","NodeViewer","data","styleLight","styleDark","Loading","props","style","wrapper","arrow","TreeView","Component","state","onToggle","node","toggled","cursor","setState","active","children","Object","assign","onFilterMouseUp","target","value","filter","trim","filtered","filterTree","expandFilteredNodes","componentDidMount","highlightAll","render","theme","mapStateToProps","customizer"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport ExtensionsHeader from \"../extensionsHeader\"\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Spinner\n} from \"reactstrap\"\nimport { Treebeard, decorators } from \"react-treebeard\"\nimport Prism from \"prismjs\"\nimport { connect } from \"react-redux\"\nimport * as filters from \"./Filter\"\nimport NodeViewer from \"./NodeViewer\"\nimport { data } from \"./Data\"\nimport { styleLight, styleDark } from \"./Styles\"\nconst Loading = props => {\n  return (\n    <div style={props.style.wrapper}>\n      <Spinner size=\"sm\" color=\"primary\" style={props.style.arrow} />\n    </div>\n  )\n}\n\nclass TreeView extends React.Component {\n  state = {\n    data\n  }\n\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n\n  onToggle = (node, toggled) => {\n    const { cursor, data } = this.state\n\n    if (cursor) {\n      this.setState(() => ({ cursor, active: false }))\n    }\n\n    node.active = !node.active\n    if (node.children) {\n      node.toggled = toggled\n    }\n    this.setState(() => ({ cursor: node, data: Object.assign({}, data) }))\n  }\n\n  onFilterMouseUp = ({ target: { value } }) => {\n    const filter = value.trim()\n    if (!filter) {\n      return this.setState(() => ({ data }))\n    }\n    let filtered = filters.filterTree(data, filter)\n    filtered = filters.expandFilteredNodes(filtered, filter)\n    this.setState(() => ({ data: filtered }))\n  }\n\n  render() {\n    const { data, cursor } = this.state\n    decorators.Loading = Loading\n\n    return (\n      <React.Fragment>\n        <ExtensionsHeader\n          title=\"React Treebeard\"\n          subTitle=\"Data-Driven, Fast, Efficient and Customisable tree view component. \"\n          link=\"https://github.com/storybookjs/react-treebeard\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Default</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col xl=\"6\" lg=\"12\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control mb-1\"\n                      onKeyUp={this.onFilterMouseUp}\n                    />\n                    <Treebeard\n                      data={data}\n                      onToggle={this.onToggle}\n                      style={\n                        this.props.theme === \"light\" ||\n                        this.props.theme === \"semi-dark\"\n                          ? styleLight\n                          : styleDark\n                      }\n                      decorators={decorators}\n                      animations={false}\n                    />\n                  </Col>\n                  <Col xl=\"6\" lg=\"12\" className=\"mt-2 mt-xl-0\">\n                    <NodeViewer node={cursor} />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    theme: state.customizer.customizer.theme\n  }\n}\n\nexport default connect(mapStateToProps)(TreeView)\n"]},"metadata":{},"sourceType":"module"}