{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Row,Col}from\"reactstrap\";import Breadcrumbs from\"../../../components/@vuexy/breadCrumbs/BreadCrumb\";import NativeFontStack from\"./NativeFontStack\";import HTMLHeadings from\"./HTMLHeadings\";import LightBoldHeadings from\"./LightBoldHeadings\";import CustomizingHeadings from\"./CustomizingHeadings\";import HeadingColors from\"./HeadingColors\";import DisplayHeadings from\"./DisplayHeadings\";import BlockquoteDefault from\"./BlockquoteDefault\";import NamingSource from\"./NamingSource\";import BlockquoteStyling from\"./BlockquoteStyling\";import BlockquoteAvatar from\"./BlockquotesAvatar\";import ListUnstyled from\"./ListUnstyled\";import ListUnordered from\"./ListUnordered\";import ListOrdered from\"./ListOrdered\";import ListIcons from\"./ListIcons\";import ListInline from\"./ListInline\";import DescriptionList from\"./DescriptionList\";import DescriptionListVertical from\"./DescriptionListVertical\";import DescriptionListText from\"./DescriptionListText\";var Typography=/*#__PURE__*/function(_React$Component){_inherits(Typography,_React$Component);var _super=_createSuper(Typography);function Typography(){_classCallCheck(this,Typography);return _super.apply(this,arguments);}_createClass(Typography,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Breadcrumbs,{breadCrumbTitle:\"Typography\",breadCrumbParent:\"Content\",breadCrumbActive:\"Typography\"}),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\"},/*#__PURE__*/React.createElement(NativeFontStack,null)),/*#__PURE__*/React.createElement(Col,{md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(HTMLHeadings,null)),/*#__PURE__*/React.createElement(Col,{md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(LightBoldHeadings,null)),/*#__PURE__*/React.createElement(Col,{md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(CustomizingHeadings,null)),/*#__PURE__*/React.createElement(Col,{md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(HeadingColors,null)),/*#__PURE__*/React.createElement(Col,{sm:\"12\"},/*#__PURE__*/React.createElement(DisplayHeadings,null)),/*#__PURE__*/React.createElement(Col,{sm:\"12\",className:\"mt-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"group-area\"},/*#__PURE__*/React.createElement(\"h4\",null,\"BlockQuotes\"),/*#__PURE__*/React.createElement(\"p\",null,\"For quoting blocks of content from another source within your document. Wrap\",\" \",/*#__PURE__*/React.createElement(\"code\",null,\"&ltblockquote className=\\\"blockquote\\\"&gt\"),\" around any HTML as the quote.\"),/*#__PURE__*/React.createElement(\"hr\",null))),/*#__PURE__*/React.createElement(Col,{md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(BlockquoteDefault,null)),/*#__PURE__*/React.createElement(Col,{md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(NamingSource,null)),/*#__PURE__*/React.createElement(Col,{md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(BlockquoteStyling,null)),/*#__PURE__*/React.createElement(Col,{md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(BlockquoteAvatar,null)),/*#__PURE__*/React.createElement(Col,{sm:\"12\",className:\"mt-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"group-area\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Lists\"),/*#__PURE__*/React.createElement(\"hr\",null))),/*#__PURE__*/React.createElement(Col,{md:\"4\",sm:\"12\"},/*#__PURE__*/React.createElement(ListUnstyled,null)),/*#__PURE__*/React.createElement(Col,{md:\"4\",sm:\"12\"},/*#__PURE__*/React.createElement(ListUnordered,null)),/*#__PURE__*/React.createElement(Col,{md:\"4\",sm:\"12\"},/*#__PURE__*/React.createElement(ListOrdered,null)),/*#__PURE__*/React.createElement(Col,{md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(ListIcons,null)),/*#__PURE__*/React.createElement(Col,{md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(ListInline,null)),/*#__PURE__*/React.createElement(Col,{sm:\"12\",className:\"mt-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"group-area\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Description list alignment\"),/*#__PURE__*/React.createElement(\"p\",null,\"Align terms and descriptions horizontally by using our grid system\\u2019s predefined classes (or semantic mixins). For longer terms, you can optionally add a \",/*#__PURE__*/React.createElement(\"code\",null,\".text-truncate\"),\" \",\"class to truncate the text with an ellipsis.\"),/*#__PURE__*/React.createElement(\"hr\",null))),/*#__PURE__*/React.createElement(Col,{md:\"8\",sm:\"12\"},/*#__PURE__*/React.createElement(DescriptionList,null)),/*#__PURE__*/React.createElement(Col,{md:\"4\",sm:\"12\"},/*#__PURE__*/React.createElement(DescriptionListVertical,null)),/*#__PURE__*/React.createElement(Col,{sm:\"12\"},/*#__PURE__*/React.createElement(DescriptionListText,null))));}}]);return Typography;}(React.Component);export default Typography;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/ui-elements/typography/Typography.js"],"names":["React","Row","Col","Breadcrumbs","NativeFontStack","HTMLHeadings","LightBoldHeadings","CustomizingHeadings","HeadingColors","DisplayHeadings","BlockquoteDefault","NamingSource","BlockquoteStyling","BlockquoteAvatar","ListUnstyled","ListUnordered","ListOrdered","ListIcons","ListInline","DescriptionList","DescriptionListVertical","DescriptionListText","Typography","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport NativeFontStack from \"./NativeFontStack\"\nimport HTMLHeadings from \"./HTMLHeadings\"\nimport LightBoldHeadings from \"./LightBoldHeadings\"\nimport CustomizingHeadings from \"./CustomizingHeadings\"\nimport HeadingColors from \"./HeadingColors\"\nimport DisplayHeadings from \"./DisplayHeadings\"\nimport BlockquoteDefault from \"./BlockquoteDefault\"\nimport NamingSource from \"./NamingSource\"\nimport BlockquoteStyling from \"./BlockquoteStyling\"\nimport BlockquoteAvatar from \"./BlockquotesAvatar\"\nimport ListUnstyled from \"./ListUnstyled\"\nimport ListUnordered from \"./ListUnordered\"\nimport ListOrdered from \"./ListOrdered\"\nimport ListIcons from \"./ListIcons\"\nimport ListInline from \"./ListInline\"\nimport DescriptionList from \"./DescriptionList\"\nimport DescriptionListVertical from \"./DescriptionListVertical\"\nimport DescriptionListText from \"./DescriptionListText\"\n\nclass Typography extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Typography\"\n          breadCrumbParent=\"Content\"\n          breadCrumbActive=\"Typography\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <NativeFontStack />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <HTMLHeadings />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <LightBoldHeadings />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <CustomizingHeadings />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <HeadingColors />\n          </Col>\n          <Col sm=\"12\">\n            <DisplayHeadings />\n          </Col>\n          <Col sm=\"12\" className=\"mt-1\">\n            <div className=\"group-area\">\n              <h4>BlockQuotes</h4>\n              <p>\n                For quoting blocks of content from another source within your\n                document. Wrap{\" \"}\n                <code>&ltblockquote className=\"blockquote\"&gt</code> around any\n                HTML as the quote.\n              </p>\n              <hr />\n            </div>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <BlockquoteDefault />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <NamingSource />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <BlockquoteStyling />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <BlockquoteAvatar />\n          </Col>\n          <Col sm=\"12\" className=\"mt-1\">\n            <div className=\"group-area\">\n              <h4>Lists</h4>\n              <hr />\n            </div>\n          </Col>\n          <Col md=\"4\" sm=\"12\">\n            <ListUnstyled />\n          </Col>\n          <Col md=\"4\" sm=\"12\">\n            <ListUnordered />\n          </Col>\n          <Col md=\"4\" sm=\"12\">\n            <ListOrdered />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <ListIcons />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <ListInline />\n          </Col>\n          <Col sm=\"12\" className=\"mt-1\">\n            <div className=\"group-area\">\n              <h4>Description list alignment</h4>\n              <p>\n                Align terms and descriptions horizontally by using our grid\n                system’s predefined classes (or semantic mixins). For longer\n                terms, you can optionally add a <code>.text-truncate</code>{\" \"}\n                class to truncate the text with an ellipsis.\n              </p>\n              <hr />\n            </div>\n          </Col>\n          <Col md=\"8\" sm=\"12\">\n            <DescriptionList />\n          </Col>\n          <Col md=\"4\" sm=\"12\">\n            <DescriptionListVertical />\n          </Col>\n          <Col sm=\"12\">\n            <DescriptionListText />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default Typography\n"]},"metadata":{},"sourceType":"module"}