{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/components/reactstrap/modal/ModalDestructuring.js\";\nimport React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Card, CardHeader, CardBody, CardTitle, TabContent, TabPane, Nav, NavItem, NavLink, Input, Label, Form, FormGroup } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { Eye, Code } from \"react-feather\";\nimport { modalDestructuring } from \"./ModalSourceCode\";\n\nvar ModalDestructuring = /*#__PURE__*/function (_React$Component) {\n  _inherits(ModalDestructuring, _React$Component);\n\n  function ModalDestructuring() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModalDestructuring);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModalDestructuring)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTab: \"1\",\n      modal: false,\n      unmountOnClose: true\n    };\n\n    _this.toggleTab = function (tab) {\n      if (_this.state.activeTab !== tab) {\n        _this.setState({\n          activeTab: tab\n        });\n      }\n    };\n\n    _this.toggleModal = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    _this.changeUnmountOnClose = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        unmountOnClose: JSON.parse(value)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalDestructuring, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, \"Unmount On Close\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"views\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        tabs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"1\"\n        }),\n        onClick: function onClick() {\n          _this2.toggleTab(\"1\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Eye, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"2\"\n        }),\n        onClick: function onClick() {\n          _this2.toggleTab(\"2\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Code, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      })))))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, \"Write something (data should remain in modal if unmountOnClose is set to false).\"), /*#__PURE__*/React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tabId: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        inline: true,\n        onSubmit: function onSubmit(e) {\n          return e.preventDefault();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"unmountOnClose\",\n        className: \"mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, \"UnmountOnClose value\"), \" \", /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"unmountOnClose\",\n        id: \"unmountOnClose\",\n        onChange: this.changeUnmountOnClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }\n      }, \"true\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"false\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }\n      }, \"false\"))), \" \", /*#__PURE__*/React.createElement(Button.Ripple, {\n        color: \"success\",\n        className: \"ml-1\",\n        outline: true,\n        onClick: this.toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, \"Launch modal\")), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggleModal,\n        className: this.props.className,\n        unmountOnClose: this.state.unmountOnClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }\n      }, \"Modal title\"), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"textarea\",\n        placeholder: \"Write something (data should remain in modal if unmountOnClose is set to false)\",\n        rows: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        outline: true,\n        onClick: this.toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, \"Accept\"), \" \"))), /*#__PURE__*/React.createElement(TabPane, {\n        className: \"component-code\",\n        tabId: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, modalDestructuring)))));\n    }\n  }]);\n\n  return ModalDestructuring;\n}(React.Component);\n\nexport default ModalDestructuring;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/components/reactstrap/modal/ModalDestructuring.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","Card","CardHeader","CardBody","CardTitle","TabContent","TabPane","Nav","NavItem","NavLink","Input","Label","Form","FormGroup","classnames","Eye","Code","modalDestructuring","ModalDestructuring","state","activeTab","modal","unmountOnClose","toggleTab","tab","setState","toggleModal","prevState","changeUnmountOnClose","e","value","target","JSON","parse","active","preventDefault","props","className","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Input,\n  Label,\n  Form,\n  FormGroup\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { modalDestructuring } from \"./ModalSourceCode\"\n\nclass ModalDestructuring extends React.Component {\n  state = {\n    activeTab: \"1\",\n    modal: false,\n    unmountOnClose: true\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  changeUnmountOnClose = e => {\n    let value = e.target.value\n    this.setState({ unmountOnClose: JSON.parse(value) })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Unmount On Close</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Write something (data should remain in modal if unmountOnClose is\n              set to false).\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Form inline onSubmit={e => e.preventDefault()}>\n                  <FormGroup>\n                    <Label for=\"unmountOnClose\" className=\"mr-1\">\n                      UnmountOnClose value\n                    </Label>{\" \"}\n                    <Input\n                      type=\"select\"\n                      name=\"unmountOnClose\"\n                      id=\"unmountOnClose\"\n                      onChange={this.changeUnmountOnClose}\n                    >\n                      <option value=\"true\">true</option>\n                      <option value=\"false\">false</option>\n                    </Input>\n                  </FormGroup>{\" \"}\n                  <Button.Ripple\n                    color=\"success\"\n                    className=\"ml-1\"\n                    outline\n                    onClick={this.toggleModal}\n                  >\n                    Launch modal\n                  </Button.Ripple>\n                </Form>\n                <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggleModal}\n                  className={this.props.className}\n                  unmountOnClose={this.state.unmountOnClose}\n                >\n                  <ModalHeader toggle={this.toggleModal}>\n                    Modal title\n                  </ModalHeader>\n                  <ModalBody>\n                    <Input\n                      type=\"textarea\"\n                      placeholder=\"Write something (data should remain in modal if unmountOnClose is set to false)\"\n                      rows={5}\n                    />\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" outline onClick={this.toggleModal}>\n                      Accept\n                    </Button>{\" \"}\n                  </ModalFooter>\n                </Modal>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {modalDestructuring}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ModalDestructuring\n"]},"metadata":{},"sourceType":"module"}