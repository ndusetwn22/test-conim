{"ast":null,"code":"import _defineProperty from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var initialState={todos:[],routeParam:null,filteredTodos:[]};var todo=function todo(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"GET_TODOS\":return _objectSpread(_objectSpread({},state),{},{todos:action.todos,routeParam:action.routeParams});case\"UPDATE_TODOS\":var _todo=action.todo;var updatedState=_objectSpread(_objectSpread({},state.todos),{},_defineProperty({},_todo.id,_objectSpread({},_todo)));return _objectSpread(_objectSpread({},state),{},{todos:updatedState});case\"COMPLETE_TASK\":state.todos.find(function(i){return i.id===action.id;}).isCompleted=!action.value;return _objectSpread({},state);case\"STAR_TASK\":state.todos.find(function(i){return i.id===action.id;}).isStarred=!action.value;return _objectSpread({},state);case\"IMPORTANT_TASK\":state.todos.find(function(i){return i.id===action.id;}).isImportant=!action.value;return _objectSpread({},state);case\"TRASH_TASK\":state.todos.find(function(i){return i.id===action.id;}).isTrashed=true;return _objectSpread({},state);case\"UPDATE_LABEL\":var taskToUpdate=state.todos.find(function(i){return i.id===action.id;}).tags;if(!taskToUpdate.includes(action.label))taskToUpdate.push(action.label);else taskToUpdate.splice(taskToUpdate.indexOf(action.label),1);return _objectSpread({},state);case\"UPDATE_TASK\":var todoToUpdate=state.todos.find(function(i){return i.id===action.id;});todoToUpdate.title=action.title;todoToUpdate.desc=action.desc;return _objectSpread({},state);case\"ADD_TASK\":return _objectSpread({},state);case\"SEARCH_TASK\":if(action.val.length){var filteredTodos=state.todos.filter(function(query){return query.title.toLowerCase().includes(action.val)||query.desc.toLowerCase().includes(action.val);});return _objectSpread(_objectSpread({},state),{},{filteredTodos:filteredTodos});}else{return _objectSpread({},state);}case\"CHANGE_FILTER\":state.routeParam=action.filter;return _objectSpread({},state);default:return state;}};export default todo;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/redux/reducers/todo/todo.js"],"names":["initialState","todos","routeParam","filteredTodos","todo","state","action","type","routeParams","updatedState","id","find","i","isCompleted","value","isStarred","isImportant","isTrashed","taskToUpdate","tags","includes","label","push","splice","indexOf","todoToUpdate","title","desc","val","length","filter","query","toLowerCase"],"mappings":"uUAAA,GAAMA,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,EADY,CAEnBC,UAAU,CAAE,IAFO,CAGnBC,aAAa,CAAE,EAHI,CAArB,CAMA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CAC7C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,WAAL,CACE,sCAAYF,KAAZ,MAAmBJ,KAAK,CAAEK,MAAM,CAACL,KAAjC,CAAwCC,UAAU,CAAEI,MAAM,CAACE,WAA3D,GACF,IAAK,cAAL,CACE,GAAIJ,CAAAA,KAAI,CAAGE,MAAM,CAACF,IAAlB,CACA,GAAIK,CAAAA,YAAY,gCAAQJ,KAAK,CAACJ,KAAd,wBAAsBG,KAAI,CAACM,EAA3B,kBAAqCN,KAArC,GAAhB,CACA,sCAAYC,KAAZ,MAAmBJ,KAAK,CAAEQ,YAA1B,GAEF,IAAK,eAAL,CACEJ,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAiB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACF,EAAF,GAASJ,MAAM,CAACI,EAApB,EAAlB,EAA0CG,WAA1C,CAAwD,CAACP,MAAM,CAACQ,KAAhE,CACA,wBAAYT,KAAZ,EAEF,IAAK,WAAL,CACEA,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAiB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACF,EAAF,GAASJ,MAAM,CAACI,EAApB,EAAlB,EAA0CK,SAA1C,CAAsD,CAACT,MAAM,CAACQ,KAA9D,CACA,wBAAYT,KAAZ,EAEF,IAAK,gBAAL,CACEA,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAiB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACF,EAAF,GAASJ,MAAM,CAACI,EAApB,EAAlB,EAA0CM,WAA1C,CAAwD,CAACV,MAAM,CAACQ,KAAhE,CACA,wBAAYT,KAAZ,EAEF,IAAK,YAAL,CACEA,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAiB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACF,EAAF,GAASJ,MAAM,CAACI,EAApB,EAAlB,EAA0CO,SAA1C,CAAsD,IAAtD,CACA,wBAAYZ,KAAZ,EAEF,IAAK,cAAL,CACE,GAAIa,CAAAA,YAAY,CAAGb,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAiB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACF,EAAF,GAASJ,MAAM,CAACI,EAApB,EAAlB,EAA0CS,IAA7D,CACA,GAAI,CAACD,YAAY,CAACE,QAAb,CAAsBd,MAAM,CAACe,KAA7B,CAAL,CAA0CH,YAAY,CAACI,IAAb,CAAkBhB,MAAM,CAACe,KAAzB,EAA1C,IACKH,CAAAA,YAAY,CAACK,MAAb,CAAoBL,YAAY,CAACM,OAAb,CAAqBlB,MAAM,CAACe,KAA5B,CAApB,CAAwD,CAAxD,EACL,wBAAYhB,KAAZ,EAEF,IAAK,aAAL,CACE,GAAIoB,CAAAA,YAAY,CAAGpB,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAiB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACF,EAAF,GAASJ,MAAM,CAACI,EAApB,EAAlB,CAAnB,CACAe,YAAY,CAACC,KAAb,CAAqBpB,MAAM,CAACoB,KAA5B,CACAD,YAAY,CAACE,IAAb,CAAoBrB,MAAM,CAACqB,IAA3B,CACA,wBAAYtB,KAAZ,EAEF,IAAK,UAAL,CACE,wBAAYA,KAAZ,EAEF,IAAK,aAAL,CACE,GAAIC,MAAM,CAACsB,GAAP,CAAWC,MAAf,CAAuB,CACrB,GAAI1B,CAAAA,aAAa,CAAGE,KAAK,CAACJ,KAAN,CAAY6B,MAAZ,CAAmB,SAAAC,KAAK,CAAI,CAC9C,MACEA,CAAAA,KAAK,CAACL,KAAN,CAAYM,WAAZ,GAA0BZ,QAA1B,CAAmCd,MAAM,CAACsB,GAA1C,GACAG,KAAK,CAACJ,IAAN,CAAWK,WAAX,GAAyBZ,QAAzB,CAAkCd,MAAM,CAACsB,GAAzC,CAFF,CAID,CALmB,CAApB,CAMA,sCAAYvB,KAAZ,MAAmBF,aAAa,CAAbA,aAAnB,GACD,CARD,IAQO,CACL,wBAAYE,KAAZ,EACD,CAEH,IAAK,eAAL,CACEA,KAAK,CAACH,UAAN,CAAmBI,MAAM,CAACwB,MAA1B,CACA,wBAAYzB,KAAZ,EAEF,QACE,MAAOA,CAAAA,KAAP,CAzDJ,CA2DD,CA5DD,CA8DA,cAAeD,CAAAA,IAAf","sourcesContent":["const initialState = {\n  todos: [],\n  routeParam: null,\n  filteredTodos: []\n}\n\nconst todo = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_TODOS\":\n      return { ...state, todos: action.todos, routeParam: action.routeParams }\n    case \"UPDATE_TODOS\":\n      let todo = action.todo\n      let updatedState = { ...state.todos, [todo.id]: { ...todo } }\n      return { ...state, todos: updatedState }\n\n    case \"COMPLETE_TASK\":\n      state.todos.find(i => i.id === action.id).isCompleted = !action.value\n      return { ...state }\n\n    case \"STAR_TASK\":\n      state.todos.find(i => i.id === action.id).isStarred = !action.value\n      return { ...state }\n\n    case \"IMPORTANT_TASK\":\n      state.todos.find(i => i.id === action.id).isImportant = !action.value\n      return { ...state }\n\n    case \"TRASH_TASK\":\n      state.todos.find(i => i.id === action.id).isTrashed = true\n      return { ...state }\n\n    case \"UPDATE_LABEL\":\n      let taskToUpdate = state.todos.find(i => i.id === action.id).tags\n      if (!taskToUpdate.includes(action.label)) taskToUpdate.push(action.label)\n      else taskToUpdate.splice(taskToUpdate.indexOf(action.label), 1)\n      return { ...state }\n\n    case \"UPDATE_TASK\":\n      let todoToUpdate = state.todos.find(i => i.id === action.id)\n      todoToUpdate.title = action.title\n      todoToUpdate.desc = action.desc\n      return { ...state }\n\n    case \"ADD_TASK\":\n      return { ...state }\n\n    case \"SEARCH_TASK\":\n      if (action.val.length) {\n        let filteredTodos = state.todos.filter(query => {\n          return (\n            query.title.toLowerCase().includes(action.val) ||\n            query.desc.toLowerCase().includes(action.val)\n          )\n        })\n        return { ...state, filteredTodos }\n      } else {\n        return { ...state }\n      }\n\n    case \"CHANGE_FILTER\":\n      state.routeParam = action.filter\n      return { ...state }\n\n    default:\n      return state\n  }\n}\n\nexport default todo\n"]},"metadata":{},"sourceType":"module"}