{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\rombak-react-vuexy\\\\src\\\\views\\\\forms\\\\formik\\\\FormikBasic.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody, Button, FormGroup } from \"reactstrap\";\nimport { Formik, Field, Form } from \"formik\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass FormikBasic extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, \"Basic\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, \"Getting values in and out of form state is easy using formik, you won't have to manage state to make your input a controlled element.\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\"\n      },\n      onSubmit: values => {\n        setTimeout(() => {\n          toast.success(JSON.stringify(values, null, 2));\n        }, 500);\n      },\n      render: () => /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n        className: \"form-control\",\n        name: \"firstName\",\n        placeholder: \"Jane\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(Field, {\n        className: \"form-control\",\n        name: \"lastName\",\n        placeholder: \"Doe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n        className: \"form-control\",\n        name: \"email\",\n        placeholder: \"jane@acme.com\",\n        type: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Button.Ripple, {\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, \"Submit\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default FormikBasic;","map":{"version":3,"sources":["E:/react/rombak-react-vuexy/src/views/forms/formik/FormikBasic.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Button","FormGroup","Formik","Field","Form","ToastContainer","toast","FormikBasic","Component","render","firstName","lastName","email","values","setTimeout","success","JSON","stringify"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Button,\n  FormGroup\n} from \"reactstrap\"\nimport { Formik, Field, Form } from \"formik\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\n\nclass FormikBasic extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Basic</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <p>\n            Getting values in and out of form state is easy using formik, you\n            won't have to manage state to make your input a controlled element.\n          </p>\n          <Formik\n            initialValues={{\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\"\n            }}\n            onSubmit={values => {\n              setTimeout(() => {\n                toast.success(JSON.stringify(values, null, 2))\n              }, 500)\n            }}\n            render={() => (\n              <Form>\n                <FormGroup>\n                  <label htmlFor=\"firstName\">First Name</label>\n                  <Field\n                    className=\"form-control\"\n                    name=\"firstName\"\n                    placeholder=\"Jane\"\n                  />\n                </FormGroup>\n\n                <FormGroup>\n                  <label htmlFor=\"lastName\">Last Name</label>\n                  <Field\n                    className=\"form-control\"\n                    name=\"lastName\"\n                    placeholder=\"Doe\"\n                  />\n                </FormGroup>\n\n                <FormGroup>\n                  <label htmlFor=\"email\">Email</label>\n                  <Field\n                    className=\"form-control\"\n                    name=\"email\"\n                    placeholder=\"jane@acme.com\"\n                    type=\"email\"\n                  />\n                </FormGroup>\n                <Button.Ripple color=\"primary\" type=\"submit\">\n                  Submit\n                </Button.Ripple>\n              </Form>\n            )}\n          />\n          <ToastContainer />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default FormikBasic\n"]},"metadata":{},"sourceType":"module"}