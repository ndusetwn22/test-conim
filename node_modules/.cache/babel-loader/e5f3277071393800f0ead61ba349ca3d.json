{"ast":null,"code":"import _objectSpread from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initialState = {\n  mails: [],\n  params: null,\n  query: null,\n  selectedEmails: [],\n  filteredMails: []\n};\n\nvar emails = function emails() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_MAILS\":\n      var mails = _toConsumableArray(state.mails);\n\n      mails = action.mails;\n      return _objectSpread({}, state, {\n        mails: mails,\n        params: action.routeParams\n      });\n\n    case \"SET_STARRED\":\n      state.mails.find(function (i) {\n        return i.id === action.mailId;\n      }).isStarred = !state.mails.find(function (i) {\n        return i.id === action.mailId;\n      }).isStarred;\n      return _objectSpread({}, state);\n\n    case \"SEARCH_MAIL\":\n      var filteredMails = state.mails.filter(function (val) {\n        if (action.query.length > 0) {\n          return val.sender_name.toLowerCase().includes(action.query) || val.sender.toLowerCase().includes(action.query) || val.message.includes(action.query) || val.subject.toLowerCase().includes(action.query);\n        } else {\n          return state.mails;\n        }\n      });\n      return _objectSpread({}, state, {\n        query: action.query,\n        filteredMails: filteredMails\n      });\n\n    case \"SELECT_MAIL\":\n      var mailId = action.id;\n\n      var selectedEmails = _toConsumableArray(state.selectedEmails);\n\n      if (selectedEmails.find(function (id) {\n        return id === mailId;\n      }) !== undefined) {\n        selectedEmails = selectedEmails.filter(function (id) {\n          return id !== mailId;\n        });\n      } else {\n        selectedEmails = [].concat(_toConsumableArray(selectedEmails), [mailId]);\n      }\n\n      return _objectSpread({}, state, {\n        selectedEmails: selectedEmails\n      });\n\n    case \"SELECT_ALL_MAILS\":\n      var arr = Object.keys(state.mails).map(function (k) {\n        return state.mails[k];\n      });\n      var selectedEmailsID = arr.map(function (mail) {\n        return mail.id;\n      });\n      return _objectSpread({}, state, {\n        selectedEmails: selectedEmailsID\n      });\n\n    case \"DESELECT_ALL_MAILS\":\n      {\n        return _objectSpread({}, state, {\n          selectedEmails: []\n        });\n      }\n\n    case \"MOVE_MAIL\":\n      return _objectSpread({}, state, {\n        selectedEmails: []\n      });\n\n    case \"SET_UNREAD\":\n      var updatedEmails = action.id.forEach(function (mailId) {\n        var mailIndex = state.mails.findIndex(function (mail) {\n          return mail.id === mailId;\n        });\n        if (mailIndex !== -1) state.mails[mailIndex].unread = action.unreadFlag;\n        state.selectedEmails = [];\n      });\n      return _objectSpread({}, state, {\n        updatedEmails: updatedEmails\n      });\n\n    case \"CHANGE_FILTER\":\n      state.params = action.filter;\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default emails;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/redux/reducers/email/emails.js"],"names":["initialState","mails","params","query","selectedEmails","filteredMails","emails","state","action","type","routeParams","find","i","id","mailId","isStarred","filter","val","length","sender_name","toLowerCase","includes","sender","message","subject","undefined","arr","Object","keys","map","k","selectedEmailsID","mail","updatedEmails","forEach","mailIndex","findIndex","unread","unreadFlag"],"mappings":"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","sourcesContent":["let initialState = {\n  mails: [],\n  params: null,\n  query: null,\n  selectedEmails: [],\n  filteredMails: []\n}\n\nconst emails = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_MAILS\":\n      let mails = [...state.mails]\n      mails = action.mails\n      return { ...state, mails, params: action.routeParams }\n\n    case \"SET_STARRED\":\n      state.mails.find(\n        i => i.id === action.mailId\n      ).isStarred = !state.mails.find(i => i.id === action.mailId).isStarred\n      return { ...state }\n\n    case \"SEARCH_MAIL\":\n      let filteredMails = state.mails.filter(val => {\n        if (action.query.length > 0) {\n          return (\n            val.sender_name.toLowerCase().includes(action.query) ||\n            val.sender.toLowerCase().includes(action.query) ||\n            val.message.includes(action.query) ||\n            val.subject.toLowerCase().includes(action.query)\n          )\n        } else {\n          return state.mails\n        }\n      })\n\n      return { ...state, query: action.query, filteredMails }\n\n    case \"SELECT_MAIL\":\n      const mailId = action.id\n      let selectedEmails = [...state.selectedEmails]\n\n      if (selectedEmails.find(id => id === mailId) !== undefined) {\n        selectedEmails = selectedEmails.filter(id => id !== mailId)\n      } else {\n        selectedEmails = [...selectedEmails, mailId]\n      }\n\n      return { ...state, selectedEmails }\n\n    case \"SELECT_ALL_MAILS\":\n      const arr = Object.keys(state.mails).map(k => {\n        return state.mails[k]\n      })\n\n      const selectedEmailsID = arr.map(mail => mail.id)\n      return {\n        ...state,\n        selectedEmails: selectedEmailsID\n      }\n\n    case \"DESELECT_ALL_MAILS\": {\n      return {\n        ...state,\n        selectedEmails: []\n      }\n    }\n    case \"MOVE_MAIL\":\n      return { ...state, selectedEmails: [] }\n    case \"SET_UNREAD\":\n      let updatedEmails = action.id.forEach(mailId => {\n        const mailIndex = state.mails.findIndex(mail => mail.id === mailId)\n        if (mailIndex !== -1) state.mails[mailIndex].unread = action.unreadFlag\n        state.selectedEmails = []\n      })\n      return { ...state, updatedEmails }\n    case \"CHANGE_FILTER\":\n      state.params = action.filter\n      return { ...state }\n    default:\n      return { ...state }\n  }\n}\nexport default emails\n"]},"metadata":{},"sourceType":"module"}