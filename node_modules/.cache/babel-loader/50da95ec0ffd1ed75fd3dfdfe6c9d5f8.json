{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.1/src/views/forms/form-elements/number-input/NumberInputHTML.js\";\nimport React from \"react\";\nimport NumericInput from \"react-numeric-input\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport { mobileStyle } from \"./InputStyles\";\n\nclass NumberInputHTML extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, \"HTML Props\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, \"You can use any additional HTML attributes that make sence, just don't forget to camelCase them as JSX requires. Only the type attribute will be overriden to text. Following input will be auto focused.\"), /*#__PURE__*/React.createElement(NumericInput, {\n      mobile: true,\n      autoComplete: \"on\",\n      autoCorrect: \"on\",\n      autoFocus: true,\n      value: 10,\n      style: mobileStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default NumberInputHTML;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.1/src/views/forms/form-elements/number-input/NumberInputHTML.js"],"names":["React","NumericInput","Card","CardHeader","CardTitle","CardBody","mobileStyle","NumberInputHTML","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,YAAtD;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,eAAN,SAA8BP,KAAK,CAACQ,SAApC,CAA8C;AAC5CC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mNADF,eAOE,oBAAC,YAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,YAAY,EAAC,IAFf;AAGE,MAAA,WAAW,EAAC,IAHd;AAIE,MAAA,SAAS,EAAE,IAJb;AAKE,MAAA,KAAK,EAAE,EALT;AAME,MAAA,KAAK,EAAEH,WANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAJF,CADF;AAuBD;;AAzB2C;;AA2B9C,eAAeC,eAAf","sourcesContent":["import React from \"react\"\nimport NumericInput from \"react-numeric-input\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { mobileStyle } from \"./InputStyles\"\n\nclass NumberInputHTML extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>HTML Props</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <p>\n            You can use any additional HTML attributes that make sence, just\n            don't forget to camelCase them as JSX requires. Only the type\n            attribute will be overriden to text. Following input will be auto\n            focused.\n          </p>\n          <NumericInput\n            mobile\n            autoComplete=\"on\"\n            autoCorrect=\"on\"\n            autoFocus={true}\n            value={10}\n            style={mobileStyle}\n          />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default NumberInputHTML\n"]},"metadata":{},"sourceType":"module"}