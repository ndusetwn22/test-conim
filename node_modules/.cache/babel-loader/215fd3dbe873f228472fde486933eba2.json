{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.1/src/extensions/sweet-alert/SweetAlertBasic.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\";\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass BasicSweetAlert extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      basicAlert: false,\n      titleAlert: false,\n      htmlAlert: false\n    };\n\n    this.handleAlert = (state, value) => {\n      this.setState({\n        [state]: value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"Basic\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"SweetAlert automatically centers itself on the page and looks great no matter if you're using a desktop computer, mobile or tablet. It's even highly customizable, as you can see below!\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-1 mb-1\",\n      color: \"primary\",\n      onClick: () => this.handleAlert(\"basicAlert\", true),\n      outline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Basic\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-1 mb-1\",\n      color: \"primary\",\n      onClick: () => this.handleAlert(\"titleAlert\", true),\n      outline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"With Title\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mb-1\",\n      color: \"primary\",\n      onClick: () => this.handleAlert(\"htmlAlert\", true),\n      outline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \"HTML\"), /*#__PURE__*/React.createElement(SweetAlert, {\n      title: \"Any fool can use a computer\",\n      show: this.state.basicAlert,\n      onConfirm: () => this.handleAlert(\"basicAlert\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SweetAlert, {\n      title: \"The Internet?,\",\n      show: this.state.titleAlert,\n      onConfirm: () => this.handleAlert(\"titleAlert\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sweet-alert-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"That thing is still around?\")), /*#__PURE__*/React.createElement(SweetAlert, {\n      title: /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 28\n        }\n      }, \"HTML \", /*#__PURE__*/React.createElement(\"u\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 41\n        }\n      }, \"example\")),\n      show: this.state.htmlAlert,\n      onConfirm: () => this.handleAlert(\"htmlAlert\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sweet-alert-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"You can use bold text,\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://pixinvent.com\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, \"links\"), \" \", \" \", \"and other HTML tags\"))));\n  }\n\n}\n\nexport default BasicSweetAlert;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.1/src/extensions/sweet-alert/SweetAlertBasic.js"],"names":["React","Card","CardHeader","CardBody","CardTitle","Button","SweetAlert","BasicSweetAlert","Component","state","basicAlert","titleAlert","htmlAlert","handleAlert","value","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass BasicSweetAlert extends React.Component {\n  state = {\n   basicAlert : false, \n   titleAlert : false, \n   htmlAlert : false, \n  }\n\n  handleAlert = (state, value) => {\n    this.setState({ [state] : value })\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <p>SweetAlert automatically centers itself on the page and looks great no matter if you're using a desktop computer, mobile or tablet. \n          It's even highly customizable, as you can see below!\n        </p>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"basicAlert\", true)} outline>Basic</Button>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"titleAlert\", true)} outline>With Title</Button>\n        <Button className=\"mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"htmlAlert\", true)} outline>HTML</Button>\n        \n        <SweetAlert title=\"Any fool can use a computer\" \n          show={this.state.basicAlert}\n          onConfirm={() => this.handleAlert(\"basicAlert\", false)}\n        >\n        </SweetAlert>\n\n        <SweetAlert title=\"The Internet?,\" \n          show={this.state.titleAlert} \n          onConfirm={() => this.handleAlert(\"titleAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">That thing is still around?</p>\n        </SweetAlert>\n\n        <SweetAlert title={<strong>HTML <u>example</u></strong>} \n          show={this.state.htmlAlert} \n          onConfirm={() => this.handleAlert(\"htmlAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">You can use bold text,{\" \"}\n              <a href=\"http://pixinvent.com\" target=\"_blank\" rel=\"noopener noreferrer\">links</a> {\" \"}\n              and other HTML tags\n            </p>\n        </SweetAlert>\n\n      </CardBody>\n    </Card>\n    )\n  }\n}\n\nexport default BasicSweetAlert"]},"metadata":{},"sourceType":"module"}