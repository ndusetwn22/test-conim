{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { history } from \"../../../history\";\nexport var getTodos = function getTodos(routeParams) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"api/apps/todo\", {\n                params: routeParams\n              }).then(function (result) {\n                dispatch({\n                  type: \"GET_TODOS\",\n                  todos: result.data,\n                  routeParams: routeParams\n                });\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var completeTask = function completeTask(todo) {\n  return function (dispatch) {\n    dispatch({\n      type: \"COMPLETE_TASK\",\n      id: todo.id,\n      value: todo.isCompleted\n    });\n  };\n};\nexport var starTask = function starTask(todo) {\n  return function (dispatch) {\n    Promise.all([dispatch({\n      type: \"STAR_TASK\",\n      id: todo.id,\n      value: todo.isStarred\n    })]);\n  };\n};\nexport var importantTask = function importantTask(todo) {\n  return function (dispatch) {\n    Promise.all([dispatch({\n      type: \"IMPORTANT_TASK\",\n      id: todo.id,\n      value: todo.isImportant\n    })]);\n  };\n};\nexport var trashTask = function trashTask(id) {\n  return function (dispatch, getState) {\n    var params = getState().todoApp.todo.routeParam;\n    axios.post(\"/api/app/todo/trash-todo\", id).then(function (response) {\n      return dispatch({\n        type: \"TRASH_TASK\",\n        id: id\n      });\n    }).then(dispatch(getTodos(params)));\n  };\n};\nexport var updateTodo = function updateTodo(todo) {\n  var request = axios.post(\"/api/apps/todo/update-todo\", todo);\n  return function (dispatch, getState) {\n    var params = getState().todoApp.todo.routeParam;\n    request.then(function (response) {\n      Promise.all([dispatch({\n        type: \"UPDATE_TODO\",\n        todos: response.data\n      })]).then(function () {\n        return dispatch(getTodos(params));\n      });\n    });\n  };\n};\nexport var updateTask = function updateTask(id, title, desc) {\n  return function (dispatch) {\n    dispatch({\n      type: \"UPDATE_TASK\",\n      id: id,\n      title: title,\n      desc: desc\n    });\n  };\n};\nexport var updateLabel = function updateLabel(id, label) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: \"UPDATE_LABEL\",\n      label: label,\n      id: id\n    });\n  };\n};\nexport var addNewTask = function addNewTask(task) {\n  return function (dispatch, getState) {\n    var params = getState().todoApp.todo.routeParam;\n    axios.post(\"/api/apps/todo/new-task\", {\n      task: task\n    }).then(function (response) {\n      dispatch({\n        type: \"ADD_TASK\",\n        task: task\n      });\n      dispatch(getTodos(params));\n    });\n  };\n};\nexport var searchTask = function searchTask(val) {\n  return function (dispatch) {\n    dispatch({\n      type: \"SEARCH_TASK\",\n      val: val\n    });\n  };\n};\nexport var changeFilter = function changeFilter(filter) {\n  return function (dispatch) {\n    dispatch({\n      type: \"CHANGE_FILTER\",\n      filter: filter\n    });\n    history.push(\"/todo/\".concat(filter));\n    dispatch(getTodos({\n      filter: filter\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/redux/actions/todo/index.js"],"names":["axios","history","getTodos","routeParams","dispatch","get","params","then","result","type","todos","data","catch","err","console","log","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","trashTask","getState","todoApp","routeParam","post","response","updateTodo","request","updateTask","title","desc","updateLabel","label","addNewTask","task","searchTask","val","changeFilter","filter","push"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { history } from \"../../../history\"\n\nexport const getTodos = routeParams => {\n  return async dispatch => {\n    await axios\n      .get(\"api/apps/todo\", {\n        params: routeParams\n      })\n      .then(result => {\n        dispatch({\n          type: \"GET_TODOS\",\n          todos: result.data,\n          routeParams\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\nexport const completeTask = todo => {\n  return dispatch => {\n    dispatch({ type: \"COMPLETE_TASK\", id: todo.id, value: todo.isCompleted })\n  }\n}\n\nexport const starTask = todo => {\n  return dispatch => {\n    Promise.all([\n      dispatch({ type: \"STAR_TASK\", id: todo.id, value: todo.isStarred })\n    ])\n  }\n}\n\nexport const importantTask = todo => {\n  \n  return dispatch => {\n    Promise.all([\n      dispatch({ type: \"IMPORTANT_TASK\", id: todo.id, value: todo.isImportant })\n    ])\n  }\n}\n\nexport const trashTask = id => {\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    axios\n      .post(\"/api/app/todo/trash-todo\", id)\n      .then(response => dispatch({ type: \"TRASH_TASK\", id }))\n      .then(dispatch(getTodos(params)))\n  }\n}\n\nexport const updateTodo = todo => {\n  const request = axios.post(\"/api/apps/todo/update-todo\", todo)\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    request.then(response => {\n      Promise.all([\n        dispatch({\n          type: \"UPDATE_TODO\",\n          todos: response.data\n        })\n      ]).then(() => dispatch(getTodos(params)))\n    })\n  }\n}\n\nexport const updateTask = (id, title, desc) => {\n  return dispatch => {\n    dispatch({ type: \"UPDATE_TASK\", id, title, desc })\n  }\n}\n\nexport const updateLabel = (id, label) => {\n  return (dispatch, getState) => {\n    dispatch({ type: \"UPDATE_LABEL\", label, id })\n  }\n}\n\nexport const addNewTask = task => {\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    axios.post(\"/api/apps/todo/new-task\", { task }).then(response => {\n      dispatch({ type: \"ADD_TASK\", task })\n      dispatch(getTodos(params))\n    })\n  }\n}\n\nexport const searchTask = val => {\n  return dispatch => {\n    dispatch({\n      type: \"SEARCH_TASK\",\n      val\n    })\n  }\n}\n\nexport const changeFilter = filter => {\n  return dispatch => {\n    dispatch({ type: \"CHANGE_FILTER\", filter })\n    history.push(`/todo/${filter}`)\n    dispatch(getTodos({ filter }))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}