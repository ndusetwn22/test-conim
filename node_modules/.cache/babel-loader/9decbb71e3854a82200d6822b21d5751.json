{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Card,CardHeader,CardTitle,CardBody,Form,FormGroup,Label,Input,Row,Col,Button}from\"reactstrap\";var InputValidation=/*#__PURE__*/function(_React$Component){_inherits(InputValidation,_React$Component);var _super=_createSuper(InputValidation);function InputValidation(){var _this;_classCallCheck(this,InputValidation);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={firstName:\"\",lastName:\"\",city:\"\",isValid:null};_this.handleSubmit=function(e){e.preventDefault();if(_this.state.firstName.length>0){_this.setState({isValid:true});}else if(_this.state.firstName.length===0){_this.setState({isValid:false});}if(_this.state.city.length>0){_this.setState({isValid:true});}else if(_this.state.city.length===0){_this.setState({isValid:false});}if(_this.state.lastName.length>0){_this.setState({isValid:true});}else if(_this.state.lastName.length===0){_this.setState({isValid:false});}};return _this;}_createClass(InputValidation,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(CardTitle,null,\"Input Validation With Tooltip\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",null,\"Use class \",/*#__PURE__*/React.createElement(\"code\",null,\".valid/invalid-tooltip\"),\" to display validation tooltip.\"),/*#__PURE__*/React.createElement(Form,{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"4\",sm:\"12\",className:\"mb-2\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"firstName\"},\"First Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",onChange:function onChange(e){return _this2.setState({firstName:e.target.value});},value:this.state.firstName,id:\"firstName\",name:\"firstName\",valid:this.state.isValid===true,invalid:this.state.isValid===false}),this.state.isValid?/*#__PURE__*/React.createElement(\"span\",{className:\"valid-tooltip\"},\"Looks Good!\"):this.state.isValid===false?/*#__PURE__*/React.createElement(\"span\",{className:\"invalid-tooltip\"},\"Please enter a First Name\"):\"\")),/*#__PURE__*/React.createElement(Col,{md:\"4\",sm:\"12\",className:\"mb-2\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"lastName\"},\"Last Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",onChange:function onChange(e){return _this2.setState({lastName:e.target.value});},value:this.state.lastName,id:\"lastName\",name:\"lastName\",valid:this.state.isValid===true,invalid:this.state.isValid===false}),this.state.isValid?/*#__PURE__*/React.createElement(\"span\",{className:\"valid-tooltip\"},\"Looks Good!\"):this.state.isValid===false?/*#__PURE__*/React.createElement(\"span\",{className:\"invalid-tooltip\"},\"Please enter a Last Name\"):\"\")),/*#__PURE__*/React.createElement(Col,{md:\"4\",sm:\"12\",className:\"mb-2\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"city\"},\"City\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",onChange:function onChange(e){return _this2.setState({city:e.target.value});},value:this.state.city,id:\"city\",name:\"city\",valid:this.state.isValid===true,invalid:this.state.isValid===false}),this.state.isValid?/*#__PURE__*/React.createElement(\"span\",{className:\"valid-tooltip\"},\"Looks Good!\"):this.state.isValid===false?/*#__PURE__*/React.createElement(\"span\",{className:\"invalid-tooltip\"},\"Please enter a City\"):\"\"))),/*#__PURE__*/React.createElement(Button.Ripple,{color:\"primary\",onClick:this.handleSubmit},\"Submit\"))));}}]);return InputValidation;}(React.Component);export default InputValidation;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/forms/form-elements/input/InputValidation.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Form","FormGroup","Label","Input","Row","Col","Button","InputValidation","state","firstName","lastName","city","isValid","handleSubmit","e","preventDefault","length","setState","target","value","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n  Button\n} from \"reactstrap\"\n\nclass InputValidation extends React.Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    city: \"\",\n    isValid: null\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    if (this.state.firstName.length > 0) {\n      this.setState({ isValid: true })\n    } else if (this.state.firstName.length === 0) {\n      this.setState({ isValid: false })\n    }\n\n    if (this.state.city.length > 0) {\n      this.setState({ isValid: true })\n    } else if (this.state.city.length === 0) {\n      this.setState({ isValid: false })\n    }\n    if (this.state.lastName.length > 0) {\n      this.setState({ isValid: true })\n    } else if (this.state.lastName.length === 0) {\n      this.setState({ isValid: false })\n    }\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Input Validation With Tooltip</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <p>\n            Use class <code>.valid/invalid-tooltip</code> to display validation\n            tooltip.\n          </p>\n          <Form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col md=\"4\" sm=\"12\" className=\"mb-2\">\n                <FormGroup>\n                  <Label for=\"firstName\">First Name</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={e => this.setState({ firstName: e.target.value })}\n                    value={this.state.firstName}\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    valid={this.state.isValid === true}\n                    invalid={this.state.isValid === false}\n                  />\n                  {this.state.isValid ? (\n                    <span className=\"valid-tooltip\">Looks Good!</span>\n                  ) : this.state.isValid === false ? (\n                    <span className=\"invalid-tooltip\">\n                      Please enter a First Name\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </Col>\n              <Col md=\"4\" sm=\"12\" className=\"mb-2\">\n                <FormGroup>\n                  <Label for=\"lastName\">Last Name</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={e => this.setState({ lastName: e.target.value })}\n                    value={this.state.lastName}\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    valid={this.state.isValid === true}\n                    invalid={this.state.isValid === false}\n                  />\n                  {this.state.isValid ? (\n                    <span className=\"valid-tooltip\">Looks Good!</span>\n                  ) : this.state.isValid === false ? (\n                    <span className=\"invalid-tooltip\">\n                      Please enter a Last Name\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </Col>\n              <Col md=\"4\" sm=\"12\" className=\"mb-2\">\n                <FormGroup>\n                  <Label for=\"city\">City</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={e => this.setState({ city: e.target.value })}\n                    value={this.state.city}\n                    id=\"city\"\n                    name=\"city\"\n                    valid={this.state.isValid === true}\n                    invalid={this.state.isValid === false}\n                  />\n                  {this.state.isValid ? (\n                    <span className=\"valid-tooltip\">Looks Good!</span>\n                  ) : this.state.isValid === false ? (\n                    <span className=\"invalid-tooltip\">Please enter a City</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </Col>\n            </Row>\n            <Button.Ripple color=\"primary\" onClick={this.handleSubmit}>\n              Submit\n            </Button.Ripple>\n          </Form>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default InputValidation\n"]},"metadata":{},"sourceType":"module"}