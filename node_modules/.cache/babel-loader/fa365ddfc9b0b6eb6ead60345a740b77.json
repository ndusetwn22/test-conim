{"ast":null,"code":"import _defineProperty from\"/Users/pandusetiawan/Documents/react/df-v1.3 backup build/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/pandusetiawan/Documents/react/df-v1.3 backup build/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var initialState={todos:[],routeParam:null,filteredTodos:[]};var todo=function todo(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"GET_TODOS\":return _objectSpread(_objectSpread({},state),{},{todos:action.todos,routeParam:action.routeParams});case\"UPDATE_TODOS\":var _todo=action.todo;var updatedState=_objectSpread(_objectSpread({},state.todos),{},_defineProperty({},_todo.id,_objectSpread({},_todo)));return _objectSpread(_objectSpread({},state),{},{todos:updatedState});case\"COMPLETE_TASK\":state.todos.find(function(i){return i.id===action.id;}).isCompleted=!action.value;return _objectSpread({},state);case\"STAR_TASK\":state.todos.find(function(i){return i.id===action.id;}).isStarred=!action.value;return _objectSpread({},state);case\"IMPORTANT_TASK\":state.todos.find(function(i){return i.id===action.id;}).isImportant=!action.value;return _objectSpread({},state);case\"TRASH_TASK\":state.todos.find(function(i){return i.id===action.id;}).isTrashed=true;return _objectSpread({},state);case\"UPDATE_LABEL\":var taskToUpdate=state.todos.find(function(i){return i.id===action.id;}).tags;if(!taskToUpdate.includes(action.label))taskToUpdate.push(action.label);else taskToUpdate.splice(taskToUpdate.indexOf(action.label),1);return _objectSpread({},state);case\"UPDATE_TASK\":var todoToUpdate=state.todos.find(function(i){return i.id===action.id;});todoToUpdate.title=action.title;todoToUpdate.desc=action.desc;return _objectSpread({},state);case\"ADD_TASK\":return _objectSpread({},state);case\"SEARCH_TASK\":if(action.val.length){var filteredTodos=state.todos.filter(function(query){return query.title.toLowerCase().includes(action.val)||query.desc.toLowerCase().includes(action.val);});return _objectSpread(_objectSpread({},state),{},{filteredTodos:filteredTodos});}else{return _objectSpread({},state);}case\"CHANGE_FILTER\":state.routeParam=action.filter;return _objectSpread({},state);default:return state;}};export default todo;","map":null,"metadata":{},"sourceType":"module"}