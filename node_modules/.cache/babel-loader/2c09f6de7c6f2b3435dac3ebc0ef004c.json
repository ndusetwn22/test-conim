{"ast":null,"code":"import _objectSpread from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { searchResult } from \"../../../@fake-db/navbar/navbarBookmarkSearch\";\nvar defaultStarred = searchResult.filter(function (item) {\n  return item.starred === true;\n});\nvar initialState = {\n  suggestions: [],\n  isLoading: false,\n  value: \"\",\n  starred: defaultStarred,\n  noSuggestions: false,\n  extraStarred: []\n};\n\nvar navbarReducer = function navbarReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"MAYBE_UPDATE_SUGGESTIONS\":\n      return _objectSpread({}, state, {\n        suggestions: action.suggestions,\n        isLoading: false\n      });\n\n    case \"UPDATE_STARRED\":\n      var starredState = state.starred.map(function (i) {\n        return i.id;\n      });\n      var extraStarredState = state.extraStarred.map(function (j) {\n        return j.id;\n      }); // Update main suggestions\n\n      if (state) {\n        state.suggestions.find(function (i) {\n          if (i.id === action.object.id) {\n            i.starred = !action.object.starred;\n            return _objectSpread({}, state);\n          } else {\n            return null;\n          }\n        });\n      } // checks if it includes and length is 0 < 10 then pushes object\n\n\n      if (!starredState.includes(action.object.id) && state.starred.length < 10) {\n        var newState = state.starred.push(action.object);\n        return _objectSpread({}, state, {\n          newState: newState\n        });\n      } // checks if it already includes and then removes it\n      else if (starredState.includes(action.object.id)) {\n          if (state.extraStarred.length === 0) {\n            var _newState = state.starred.splice(starredState.indexOf(action.object.id), 1);\n\n            return _objectSpread({}, state, {\n              newState: _newState\n            });\n          } else if (state.extraStarred.length > 0) {\n            var getBookmark = state.extraStarred.splice(0, 1);\n            state.starred.splice(starredState.indexOf(action.object.id), 1);\n            var updatedState = state.starred.push(getBookmark[0]);\n            return _objectSpread({}, state, {\n              updatedState: updatedState\n            });\n          } else {\n            return _objectSpread({}, state);\n          }\n        } // checks if extraState doesn't includes and main starred length is 10+\n        else if (!extraStarredState.includes(action.object.id) && state.starred.length >= 10) {\n            var extraStarred = state.extraStarred.concat(action.object);\n            return _objectSpread({}, state, {\n              extraStarred: extraStarred\n            });\n          } else {\n            return _objectSpread({}, state);\n          }\n\n    default:\n      return state;\n  }\n};\n\nexport default navbarReducer;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/redux/reducers/navbar/Index.js"],"names":["searchResult","defaultStarred","filter","item","starred","initialState","suggestions","isLoading","value","noSuggestions","extraStarred","navbarReducer","state","action","type","starredState","map","i","id","extraStarredState","j","find","object","includes","length","newState","push","splice","indexOf","getBookmark","updatedState","concat"],"mappings":"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","sourcesContent":["import { searchResult } from \"../../../@fake-db/navbar/navbarBookmarkSearch\"\n\nconst defaultStarred = searchResult.filter(item => {\n  return item.starred === true\n})\n\nconst initialState = {\n  suggestions: [],\n  isLoading: false,\n  value: \"\",\n  starred: defaultStarred,\n  noSuggestions: false,\n  extraStarred: []\n}\n\nconst navbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"MAYBE_UPDATE_SUGGESTIONS\":\n      return {\n        ...state,\n        suggestions: action.suggestions,\n        isLoading: false\n      }\n    case \"UPDATE_STARRED\":\n      const starredState = state.starred.map(i => i.id)\n      const extraStarredState = state.extraStarred.map(j => j.id)\n      // Update main suggestions\n      if (state) {\n        state.suggestions.find(i => {\n          if (i.id === action.object.id) {\n            i.starred = !action.object.starred\n            return { ...state }\n          } else {\n            return null\n          }\n        })\n      }\n      // checks if it includes and length is 0 < 10 then pushes object\n      if (\n        !starredState.includes(action.object.id) &&\n        state.starred.length < 10\n      ) {\n        let newState = state.starred.push(action.object)\n        return { ...state, newState }\n      }\n\n      // checks if it already includes and then removes it\n      else if (starredState.includes(action.object.id)) {\n        if (state.extraStarred.length === 0) {\n          let newState = state.starred.splice(\n            starredState.indexOf(action.object.id),\n            1\n          )\n          return { ...state, newState }\n        } else if (state.extraStarred.length > 0) {\n          let getBookmark = state.extraStarred.splice(0, 1)\n          state.starred.splice(starredState.indexOf(action.object.id), 1)\n          let updatedState = state.starred.push(getBookmark[0])\n          return { ...state, updatedState }\n        } else {\n          return { ...state }\n        }\n      }\n\n      // checks if extraState doesn't includes and main starred length is 10+\n      else if (\n        !extraStarredState.includes(action.object.id) &&\n        state.starred.length >= 10\n      ) {\n        let extraStarred = state.extraStarred.concat(action.object)\n        return { ...state, extraStarred }\n      } else {\n        return { ...state }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default navbarReducer\n"]},"metadata":{},"sourceType":"module"}