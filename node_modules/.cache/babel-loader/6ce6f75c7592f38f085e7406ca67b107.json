{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/components/@vuexy/customizer/Customizer.js\";\nimport React from \"react\";\nimport { CustomInput } from \"reactstrap\";\nimport { Settings, X } from \"react-feather\";\nimport classnames from \"classnames\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport Radio from \"../radio/RadioVuexy\";\nimport \"../../../assets/scss/components/customizer.scss\";\n\nclass Customizer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeNavbar: this.props.activeNavbar,\n      navbarType: null,\n      footerType: null,\n      menuTheme: null,\n      collapsedSidebar: null\n    };\n\n    this.handleNavbarChange = color => {\n      this.props.changeNavbar(color);\n      this.setState({\n        activeNavbar: color\n      });\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.navbarType !== state.navbarType || props.footerType !== state.footerType || props.menuTheme !== state.menuTheme || props.activeMode !== state.activeMode || props.sidebarState !== state.collapsedSidebar) {\n      return {\n        activeNavbar: props.activeNavbar,\n        navbarType: props.navbarType,\n        footerType: props.footerType,\n        menuTheme: props.menuTheme,\n        activeMode: props.activeMode,\n        collapsedSidebar: props.sidebarState\n      };\n    } // Return null if the state hasn't changed\n\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.setState({\n      navbarType: this.props.navbarType,\n      footerType: this.props.footerType,\n      menuTheme: this.props.menuTheme,\n      activeMode: this.props.activeMode,\n      collapseSidebar: this.props.sidebarState\n    });\n  }\n\n  render() {\n    const {\n      activeNavbar,\n      navbarType,\n      footerType,\n      menuTheme,\n      activeMode,\n      collapsedSidebar\n    } = this.state;\n    return /*#__PURE__*/React.createElement(ContextLayout.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, context => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classnames(\"customizer d-none d-md-block\", {\n          open: this.props.customizerState === true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"customizer-toggle\",\n        onClick: () => this.props.handleCustomizer(!this.props.customizerState),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Settings, {\n        className: \"open-icon\",\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header d-flex justify-content-between px-2 pt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"text-uppercase mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, \"Theme Customizer\"), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }, \"Customize & Preview in Real Time\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"close-icon cursor-pointer\",\n        onClick: () => this.props.handleCustomizer(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(X, {\n        size: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n        options: {\n          wheelPropagation: false\n        },\n        className: \"customizer-content p-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"menu-theme-colors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }, \"Menu Colors\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-inline unstyled-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-primary\", {\n          selected: menuTheme === \"primary\" || ![\"primary\", \"danger\", \"info\", \"warning\", \"dark\", \"success\"].includes(menuTheme)\n        }),\n        onClick: () => this.props.changeMenuTheme(\"primary\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-success\", {\n          selected: menuTheme === \"success\"\n        }),\n        onClick: () => this.props.changeMenuTheme(\"success\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-danger\", {\n          selected: menuTheme === \"danger\"\n        }),\n        onClick: () => this.props.changeMenuTheme(\"danger\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-info\", {\n          selected: menuTheme === \"info\"\n        }),\n        onClick: () => this.props.changeMenuTheme(\"info\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-warning\", {\n          selected: menuTheme === \"warning\"\n        }),\n        onClick: () => this.props.changeMenuTheme(\"warning\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-dark\", {\n          selected: menuTheme === \"dark\"\n        }),\n        onClick: () => this.props.changeMenuTheme(\"dark\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"theme-layout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      }, \"Theme Layout\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Vertical\",\n        color: \"primary\",\n        checked: context.state.activeLayout === \"vertical\" || ![\"vertical\", \"horizontal\"].includes(context.state.activeLayout),\n        name: \"themeMode\",\n        onChange: () => context.switchLayout(\"vertical\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Horizontal\",\n        color: \"primary\",\n        checked: context.state.activeLayout === \"horizontal\",\n        name: \"themeMode\",\n        onChange: () => context.switchLayout(\"horizontal\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"theme-mode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 19\n        }\n      }, \"Theme Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Light\",\n        color: \"primary\",\n        checked: activeMode === \"light\" || ![\"light\", \"dark\", \"semi-dark\"].includes(activeMode) ? true : false,\n        name: \"themeLayout\",\n        onChange: () => this.props.changeMode(\"light\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Dark\",\n        color: \"primary\",\n        checked: activeMode === \"dark\" ? true : false,\n        name: \"themeLayout\",\n        onChange: () => this.props.changeMode(\"dark\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }\n      })), context.state.activeLayout !== \"horizontal\" && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Semi Dark\",\n        color: \"primary\",\n        checked: activeMode === \"semi-dark\" ? true : false,\n        name: \"themeLayout\",\n        onChange: () => this.props.changeMode(\"semi-dark\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 23\n        }\n      }))), context.state.activeLayout !== \"horizontal\" && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 66\n        }\n      }, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"collapse-sidebar d-flex justify-content-between align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"pt-25\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 23\n        }\n      }, \"Collapse Sidebar\"), /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"switch\",\n        id: \"collapseSidebar\",\n        name: \"collapseSidebar\",\n        checked: collapsedSidebar,\n        onChange: () => {\n          this.props.collapseSidebar(!collapsedSidebar);\n        },\n        inline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }\n      }), context.state.activeLayout === \"vertical\" && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar-colors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 23\n        }\n      }, \"Navbar Colors\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-inline unstyled-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-default border\", {\n          selected: activeNavbar === \"default\" || navbarType === \"static\" || ![\"default\", \"primary\", \"danger\", \"info\", \"warning\", \"dark\", \"success\"].includes(activeNavbar),\n          disabled: navbarType === \"static\"\n        }),\n        onClick: () => this.handleNavbarChange(\"default\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-primary\", {\n          selected: activeNavbar === \"primary\" && navbarType !== \"static\",\n          disabled: navbarType === \"static\"\n        }),\n        onClick: () => this.handleNavbarChange(\"primary\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-success\", {\n          selected: activeNavbar === \"success\" && this.props.navbarType !== \"static\",\n          disabled: navbarType === \"static\"\n        }),\n        onClick: () => this.handleNavbarChange(\"success\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-danger\", {\n          selected: activeNavbar === \"danger\" && this.props.navbarType !== \"static\",\n          disabled: navbarType === \"static\"\n        }),\n        onClick: () => this.handleNavbarChange(\"danger\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-info\", {\n          selected: activeNavbar === \"info\" && this.props.navbarType !== \"static\",\n          disabled: navbarType === \"static\"\n        }),\n        onClick: () => this.handleNavbarChange(\"info\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-warning\", {\n          selected: activeNavbar === \"warning\" && this.props.navbarType !== \"static\",\n          disabled: navbarType === \"static\"\n        }),\n        onClick: () => this.handleNavbarChange(\"warning\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: classnames(\"color-box bg-dark\", {\n          selected: activeNavbar === \"dark\" && this.props.navbarType !== \"static\",\n          disabled: navbarType === \"static\"\n        }),\n        onClick: () => this.handleNavbarChange(\"dark\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar-type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 19\n        }\n      }, \"Navbar Type\"), context.state.activeLayout !== \"horizontal\" && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Hidden\",\n        color: \"primary\",\n        checked: navbarType === \"hidden\" ? true : false,\n        name: \"navbarType\",\n        onChange: () => this.props.changeNavbarType(\"hidden\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Static\",\n        color: \"primary\",\n        checked: navbarType === \"static\" ? true : false,\n        name: \"navbarType\",\n        onChange: () => this.props.changeNavbarType(\"static\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Sticky\",\n        color: \"primary\",\n        checked: navbarType === \"sticky\" ? true : false,\n        name: \"navbarType\",\n        onChange: () => this.props.changeNavbarType(\"sticky\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Floating\",\n        color: \"primary\",\n        checked: navbarType === \"floating\" || ![\"floating\", \"hidden\", \"static\", \"sticky\"].includes(navbarType) ? true : false,\n        name: \"navbarType\",\n        onChange: () => this.props.changeNavbarType(\"floating\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"footer-type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 19\n        }\n      }, \"Footer Type\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Hidden\",\n        color: \"primary\",\n        checked: footerType === \"hidden\" ? true : false,\n        name: \"footerType\",\n        onChange: () => this.props.changeFooterType(\"hidden\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Static\",\n        color: \"primary\",\n        checked: footerType === \"static\" ? true : false,\n        name: \"footerType\",\n        onChange: () => this.props.changeFooterType(\"static\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Sticky\",\n        color: \"primary\",\n        checked: footerType === \"sticky\" ? true : false,\n        name: \"footerType\",\n        onChange: () => this.props.changeFooterType(\"sticky\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"pt-25\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 19\n        }\n      }, \"RTL\"), /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"switch\",\n        id: \"rtl-version\",\n        name: \"rtl-version\",\n        inline: true,\n        checked: context.state.direction === \"rtl\",\n        onChange: () => {\n          if (context.state.direction === \"rtl\") {\n            context.switchDir(\"ltr\");\n          } else {\n            context.switchDir(\"rtl\");\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"scroll-to-top d-flex justify-content-between align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"pt-25\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 19\n        }\n      }, \"Hide Scroll To Top\"), /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"switch\",\n        id: \"scrollToTop\",\n        name: \"scrollToTop\",\n        inline: true,\n        onClick: () => this.props.hideScrollToTop(!this.props.scrollToTop),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 19\n        }\n      }))));\n    });\n  }\n\n}\n\nexport default Customizer;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/components/@vuexy/customizer/Customizer.js"],"names":["React","CustomInput","Settings","X","classnames","PerfectScrollbar","ContextLayout","Radio","Customizer","Component","state","activeNavbar","props","navbarType","footerType","menuTheme","collapsedSidebar","handleNavbarChange","color","changeNavbar","setState","getDerivedStateFromProps","activeMode","sidebarState","componentDidMount","collapseSidebar","render","context","open","customizerState","handleCustomizer","wheelPropagation","selected","includes","changeMenuTheme","activeLayout","switchLayout","changeMode","disabled","changeNavbarType","changeFooterType","direction","switchDir","hideScrollToTop","scrollToTop"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { CustomInput } from \"reactstrap\"\nimport { Settings, X } from \"react-feather\"\nimport classnames from \"classnames\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { ContextLayout } from \"../../../utility/context/Layout\"\nimport Radio from \"../radio/RadioVuexy\"\nimport \"../../../assets/scss/components/customizer.scss\"\n\nclass Customizer extends React.Component {\n  state = {\n    activeNavbar: this.props.activeNavbar,\n    navbarType: null,\n    footerType: null,\n    menuTheme: null,\n    collapsedSidebar: null\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.navbarType !== state.navbarType ||\n      props.footerType !== state.footerType ||\n      props.menuTheme !== state.menuTheme ||\n      props.activeMode !== state.activeMode ||\n      props.sidebarState !== state.collapsedSidebar\n    ) {\n      return {\n        activeNavbar: props.activeNavbar,\n        navbarType: props.navbarType,\n        footerType: props.footerType,\n        menuTheme: props.menuTheme,\n        activeMode: props.activeMode,\n        collapsedSidebar: props.sidebarState\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n\n  handleNavbarChange = color => {\n    this.props.changeNavbar(color)\n    this.setState({\n      activeNavbar: color\n    })\n  }\n\n  componentDidMount() {\n    this.setState({\n      navbarType: this.props.navbarType,\n      footerType: this.props.footerType,\n      menuTheme: this.props.menuTheme,\n      activeMode: this.props.activeMode,\n      collapseSidebar: this.props.sidebarState\n    })\n  }\n\n  render() {\n    const {\n      activeNavbar,\n      navbarType,\n      footerType,\n      menuTheme,\n      activeMode,\n      collapsedSidebar\n    } = this.state\n    return (\n      <ContextLayout.Consumer>\n        {context => {\n          return (\n            <div\n              className={classnames(\"customizer d-none d-md-block\", {\n                open: this.props.customizerState === true\n              })}\n            >\n              <div\n                className=\"customizer-toggle\"\n                onClick={() =>\n                  this.props.handleCustomizer(!this.props.customizerState)\n                }\n              >\n                <Settings className=\"open-icon\" size={15} />\n              </div>\n              <div className=\"header d-flex justify-content-between px-2 pt-2\">\n                <div className=\"title\">\n                  <h4 className=\"text-uppercase mb-0\">Theme Customizer</h4>\n                  <small>Customize & Preview in Real Time</small>\n                </div>\n                <div\n                  className=\"close-icon cursor-pointer\"\n                  onClick={() => this.props.handleCustomizer(false)}\n                >\n                  <X size={24} />\n                </div>\n              </div>\n              <hr />\n              <PerfectScrollbar\n                options={{\n                  wheelPropagation: false\n                }}\n                className=\"customizer-content p-2\"\n              >\n                <div className=\"menu-theme-colors\">\n                  <h5>Menu Colors</h5>\n                  <ul className=\"list-inline unstyled-list\">\n                    <li\n                      className={classnames(\"color-box bg-primary\", {\n                        selected: menuTheme === \"primary\" ||  ![\"primary\", \"danger\", \"info\", \"warning\", \"dark\", \"success\"].includes(menuTheme)\n                      })}\n                      onClick={() => this.props.changeMenuTheme(\"primary\")}\n                    />\n                    <li\n                      className={classnames(\"color-box bg-success\", {\n                        selected: menuTheme === \"success\"\n                      })}\n                      onClick={() => this.props.changeMenuTheme(\"success\")}\n                    />\n                    <li\n                      className={classnames(\"color-box bg-danger\", {\n                        selected: menuTheme === \"danger\"\n                      })}\n                      onClick={() => this.props.changeMenuTheme(\"danger\")}\n                    />\n                    <li\n                      className={classnames(\"color-box bg-info\", {\n                        selected: menuTheme === \"info\"\n                      })}\n                      onClick={() => this.props.changeMenuTheme(\"info\")}\n                    />\n                    <li\n                      className={classnames(\"color-box bg-warning\", {\n                        selected: menuTheme === \"warning\"\n                      })}\n                      onClick={() => this.props.changeMenuTheme(\"warning\")}\n                    />\n                    <li\n                      className={classnames(\"color-box bg-dark\", {\n                        selected: menuTheme === \"dark\"\n                      })}\n                      onClick={() => this.props.changeMenuTheme(\"dark\")}\n                    />\n                  </ul>\n                </div>\n                <hr />\n                <div className=\"theme-layout\">\n                  <h5 className=\"mt-1\">Theme Layout</h5>\n                  <div className=\"d-inline-block mr-1\">\n                    <Radio\n                      label=\"Vertical\"\n                      color=\"primary\"\n                      checked={context.state.activeLayout === \"vertical\" || ![\"vertical\" , \"horizontal\"].includes(context.state.activeLayout)}\n                      name=\"themeMode\"\n                      onChange={() => context.switchLayout(\"vertical\")}\n                    />\n                  </div>\n                  <div className=\"d-inline-block\">\n                    <Radio\n                      label=\"Horizontal\"\n                      color=\"primary\"\n                      checked={context.state.activeLayout === \"horizontal\"}\n                      name=\"themeMode\"\n                      onChange={() => context.switchLayout(\"horizontal\")}\n                    />\n                  </div>\n                </div>\n                <hr />\n                <div className=\"theme-mode\">\n                  <h5 className=\"mt-1\">Theme Mode</h5>\n                  <div className=\"d-inline-block mr-1\">\n                    <Radio\n                      label=\"Light\"\n                      color=\"primary\"\n                      checked={activeMode === \"light\" || ![\"light\", \"dark\", \"semi-dark\"].includes(activeMode) ? true : false}\n                      name=\"themeLayout\"\n                      onChange={() => this.props.changeMode(\"light\")}\n                    />\n                  </div>\n                  <div className=\"d-inline-block mr-1\">\n                    <Radio\n                      label=\"Dark\"\n                      color=\"primary\"\n                      checked={activeMode === \"dark\" ? true : false}\n                      name=\"themeLayout\"\n                      onChange={() => this.props.changeMode(\"dark\")}\n                    />\n                  </div>\n                  {context.state.activeLayout !== \"horizontal\" && \n                    <div className=\"d-inline-block\">\n                      <Radio\n                        label=\"Semi Dark\"\n                        color=\"primary\"\n                        checked={activeMode === \"semi-dark\" ? true : false}\n                        name=\"themeLayout\"\n                        onChange={() => this.props.changeMode(\"semi-dark\")}\n                      />\n                    </div>\n                  }\n                </div>\n                { context.state.activeLayout !== \"horizontal\" && <React.Fragment>\n                    <hr />\n                    <div className=\"collapse-sidebar d-flex justify-content-between align-items-center\">\n                      <h5 className=\"pt-25\">Collapse Sidebar</h5>\n                      <CustomInput\n                        type=\"switch\"\n                        id=\"collapseSidebar\"\n                        name=\"collapseSidebar\"\n                        checked={collapsedSidebar}\n                        onChange={() => {\n                          this.props.collapseSidebar(!collapsedSidebar)\n                        }}\n                        inline\n                      />\n                    </div>\n                  </React.Fragment>\n                }\n                <hr />\n                {context.state.activeLayout === \"vertical\" && (\n                  <React.Fragment>\n                    <div className=\"navbar-colors\">\n                      <h5>Navbar Colors</h5>\n                      <ul className=\"list-inline unstyled-list\">\n                        <li\n                          className={classnames(\"color-box bg-default border\", {\n                            selected:\n                              activeNavbar === \"default\" ||\n                              navbarType === \"static\" || \n                              ![\"default\", \"primary\", \"danger\", \"info\", \"warning\", \"dark\", \"success\"].includes(activeNavbar),\n                            disabled: navbarType === \"static\"\n                          })}\n                          onClick={() => this.handleNavbarChange(\"default\")}\n                        />\n                        <li\n                          className={classnames(\"color-box bg-primary\", {\n                            selected:\n                              activeNavbar === \"primary\" &&\n                              navbarType !== \"static\",\n                            disabled: navbarType === \"static\"\n                          })}\n                          onClick={() => this.handleNavbarChange(\"primary\")}\n                        />\n                        <li\n                          className={classnames(\"color-box bg-success\", {\n                            selected:\n                              activeNavbar === \"success\" &&\n                              this.props.navbarType !== \"static\",\n                            disabled: navbarType === \"static\"\n                          })}\n                          onClick={() => this.handleNavbarChange(\"success\")}\n                        />\n                        <li\n                          className={classnames(\"color-box bg-danger\", {\n                            selected:\n                              activeNavbar === \"danger\" &&\n                              this.props.navbarType !== \"static\",\n                            disabled: navbarType === \"static\"\n                          })}\n                          onClick={() => this.handleNavbarChange(\"danger\")}\n                        />\n                        <li\n                          className={classnames(\"color-box bg-info\", {\n                            selected:\n                              activeNavbar === \"info\" &&\n                              this.props.navbarType !== \"static\",\n                            disabled: navbarType === \"static\"\n                          })}\n                          onClick={() => this.handleNavbarChange(\"info\")}\n                        />\n                        <li\n                          className={classnames(\"color-box bg-warning\", {\n                            selected:\n                              activeNavbar === \"warning\" &&\n                              this.props.navbarType !== \"static\",\n                            disabled: navbarType === \"static\"\n                          })}\n                          onClick={() => this.handleNavbarChange(\"warning\")}\n                        />\n                        <li\n                          className={classnames(\"color-box bg-dark\", {\n                            selected:\n                              activeNavbar === \"dark\" &&\n                              this.props.navbarType !== \"static\",\n                            disabled: navbarType === \"static\"\n                          })}\n                          onClick={() => this.handleNavbarChange(\"dark\")}\n                        />\n                      </ul>\n                    </div>\n                    <hr />\n                  </React.Fragment>\n                )}\n                <div className=\"navbar-type\">\n                  <h5>Navbar Type</h5>\n                  { context.state.activeLayout !== \"horizontal\" && \n                    <div className=\"d-inline-block mr-1\">\n                      <Radio\n                        label=\"Hidden\"\n                        color=\"primary\"\n                        checked={navbarType === \"hidden\" ? true : false}\n                        name=\"navbarType\"\n                        onChange={() => this.props.changeNavbarType(\"hidden\")}\n                      />\n                    </div>                  \n                  }\n                  <div className=\"d-inline-block mr-1\">\n                    <Radio\n                      label=\"Static\"\n                      color=\"primary\"\n                      checked={navbarType === \"static\" ? true : false}\n                      name=\"navbarType\"\n                      onChange={() => this.props.changeNavbarType(\"static\")}\n                    />\n                  </div>\n                  <div className=\"d-inline-block mr-1\">\n                    <Radio\n                      label=\"Sticky\"\n                      color=\"primary\"\n                      checked={navbarType === \"sticky\" ? true : false}\n                      name=\"navbarType\"\n                      onChange={() => this.props.changeNavbarType(\"sticky\")}\n                    />\n                  </div>\n                  <div className=\"d-inline-block\">\n                    <Radio\n                      label=\"Floating\"\n                      color=\"primary\"\n                      checked={navbarType === \"floating\" || ![\"floating\", \"hidden\", \"static\", \"sticky\"].includes(navbarType) ? true : false}\n                      name=\"navbarType\"\n                      onChange={() => this.props.changeNavbarType(\"floating\")}\n                    />\n                  </div>\n                </div>\n                <hr />\n                <div className=\"footer-type\">\n                  <h5>Footer Type</h5>\n                  <div className=\"d-inline-block mr-1\">\n                    <Radio\n                      label=\"Hidden\"\n                      color=\"primary\"\n                      checked={footerType === \"hidden\" ? true : false}\n                      name=\"footerType\"\n                      onChange={() => this.props.changeFooterType(\"hidden\")}\n                    />\n                  </div>\n                  <div className=\"d-inline-block mr-1\">\n                    <Radio\n                      label=\"Static\"\n                      color=\"primary\"\n                      checked={footerType === \"static\" ? true : false}\n                      name=\"footerType\"\n                      onChange={() => this.props.changeFooterType(\"static\")}\n                    />\n                  </div>\n                  <div className=\"d-inline-block\">\n                    <Radio\n                      label=\"Sticky\"\n                      color=\"primary\"\n                      checked={footerType === \"sticky\" ? true : false}\n                      name=\"footerType\"\n                      onChange={() => this.props.changeFooterType(\"sticky\")}\n                    />\n                  </div>\n                </div>\n                <hr />\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <h5 className=\"pt-25\">RTL</h5>\n                  <CustomInput\n                    type=\"switch\"\n                    id=\"rtl-version\"\n                    name=\"rtl-version\"\n                    inline\n                    checked={context.state.direction === \"rtl\"}\n                    onChange={() => {\n                      if (context.state.direction === \"rtl\") {\n                        context.switchDir(\"ltr\")\n                      } else {\n                        context.switchDir(\"rtl\")\n                      }\n                    }}\n                  />\n                </div>\n                <hr />\n                <div className=\"scroll-to-top d-flex justify-content-between align-items-center\">\n                  <h5 className=\"pt-25\">Hide Scroll To Top</h5>\n                  <CustomInput\n                    type=\"switch\"\n                    id=\"scrollToTop\"\n                    name=\"scrollToTop\"\n                    inline\n                    onClick={() =>\n                      this.props.hideScrollToTop(!this.props.scrollToTop)\n                    }\n                  />\n                </div>\n              </PerfectScrollbar>\n            </div>\n          )\n        }}\n      </ContextLayout.Consumer>\n    )\n  }\n}\n\nexport default Customizer\n"]},"metadata":{},"sourceType":"module"}