{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/rombak-react-vuexy2/src/views/forms/form-elements/input/InputValidation.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody, Form, FormGroup, Label, Input, Row, Col, Button } from \"reactstrap\";\n\nclass InputValidation extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      city: \"\",\n      isValid: null\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.firstName.length > 0) {\n        this.setState({\n          isValid: true\n        });\n      } else if (this.state.firstName.length === 0) {\n        this.setState({\n          isValid: false\n        });\n      }\n\n      if (this.state.city.length > 0) {\n        this.setState({\n          isValid: true\n        });\n      } else if (this.state.city.length === 0) {\n        this.setState({\n          isValid: false\n        });\n      }\n\n      if (this.state.lastName.length > 0) {\n        this.setState({\n          isValid: true\n        });\n      } else if (this.state.lastName.length === 0) {\n        this.setState({\n          isValid: false\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Input Validation With Tooltip\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Use class \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }\n    }, \".valid/invalid-tooltip\"), \" to display validation tooltip.\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      sm: \"12\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      onChange: e => this.setState({\n        firstName: e.target.value\n      }),\n      value: this.state.firstName,\n      id: \"firstName\",\n      name: \"firstName\",\n      valid: this.state.isValid === true,\n      invalid: this.state.isValid === false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }), this.state.isValid ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"valid-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Looks Good!\") : this.state.isValid === false ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"invalid-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Please enter a First Name\") : \"\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      sm: \"12\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      onChange: e => this.setState({\n        lastName: e.target.value\n      }),\n      value: this.state.lastName,\n      id: \"lastName\",\n      name: \"lastName\",\n      valid: this.state.isValid === true,\n      invalid: this.state.isValid === false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }), this.state.isValid ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"valid-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Looks Good!\") : this.state.isValid === false ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"invalid-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"Please enter a Last Name\") : \"\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      sm: \"12\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"city\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      onChange: e => this.setState({\n        city: e.target.value\n      }),\n      value: this.state.city,\n      id: \"city\",\n      name: \"city\",\n      valid: this.state.isValid === true,\n      invalid: this.state.isValid === false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }), this.state.isValid ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"valid-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \"Looks Good!\") : this.state.isValid === false ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"invalid-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Please enter a City\") : \"\"))), /*#__PURE__*/React.createElement(Button.Ripple, {\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default InputValidation;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/rombak-react-vuexy2/src/views/forms/form-elements/input/InputValidation.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Form","FormGroup","Label","Input","Row","Col","Button","InputValidation","Component","state","firstName","lastName","city","isValid","handleSubmit","e","preventDefault","length","setState","render","target","value"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n  Button\n} from \"reactstrap\"\n\nclass InputValidation extends React.Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    city: \"\",\n    isValid: null\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    if (this.state.firstName.length > 0) {\n      this.setState({ isValid: true })\n    } else if (this.state.firstName.length === 0) {\n      this.setState({ isValid: false })\n    }\n\n    if (this.state.city.length > 0) {\n      this.setState({ isValid: true })\n    } else if (this.state.city.length === 0) {\n      this.setState({ isValid: false })\n    }\n    if (this.state.lastName.length > 0) {\n      this.setState({ isValid: true })\n    } else if (this.state.lastName.length === 0) {\n      this.setState({ isValid: false })\n    }\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Input Validation With Tooltip</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <p>\n            Use class <code>.valid/invalid-tooltip</code> to display validation\n            tooltip.\n          </p>\n          <Form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col md=\"4\" sm=\"12\" className=\"mb-2\">\n                <FormGroup>\n                  <Label for=\"firstName\">First Name</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={e => this.setState({ firstName: e.target.value })}\n                    value={this.state.firstName}\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    valid={this.state.isValid === true}\n                    invalid={this.state.isValid === false}\n                  />\n                  {this.state.isValid ? (\n                    <span className=\"valid-tooltip\">Looks Good!</span>\n                  ) : this.state.isValid === false ? (\n                    <span className=\"invalid-tooltip\">\n                      Please enter a First Name\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </Col>\n              <Col md=\"4\" sm=\"12\" className=\"mb-2\">\n                <FormGroup>\n                  <Label for=\"lastName\">Last Name</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={e => this.setState({ lastName: e.target.value })}\n                    value={this.state.lastName}\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    valid={this.state.isValid === true}\n                    invalid={this.state.isValid === false}\n                  />\n                  {this.state.isValid ? (\n                    <span className=\"valid-tooltip\">Looks Good!</span>\n                  ) : this.state.isValid === false ? (\n                    <span className=\"invalid-tooltip\">\n                      Please enter a Last Name\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </Col>\n              <Col md=\"4\" sm=\"12\" className=\"mb-2\">\n                <FormGroup>\n                  <Label for=\"city\">City</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={e => this.setState({ city: e.target.value })}\n                    value={this.state.city}\n                    id=\"city\"\n                    name=\"city\"\n                    valid={this.state.isValid === true}\n                    invalid={this.state.isValid === false}\n                  />\n                  {this.state.isValid ? (\n                    <span className=\"valid-tooltip\">Looks Good!</span>\n                  ) : this.state.isValid === false ? (\n                    <span className=\"invalid-tooltip\">Please enter a City</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </Col>\n            </Row>\n            <Button.Ripple color=\"primary\" onClick={this.handleSubmit}>\n              Submit\n            </Button.Ripple>\n          </Form>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default InputValidation\n"]},"metadata":{},"sourceType":"module"}