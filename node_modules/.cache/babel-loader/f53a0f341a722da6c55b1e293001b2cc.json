{"ast":null,"code":"import axios from\"axios\";export var getChats=function getChats(){return function(dispatch){axios.get(\"api/app/chat/chats\").then(function(response){dispatch({type:\"GET_CONTACTS\",contacts:response.data.contacts,chats:response.data.chats});}).catch(function(err){return console.log(err);});};};export var getContactChats=function getContactChats(){return function(dispatch){axios.get(\"api/app/chat/chat-contacts\").then(function(response){dispatch({type:\"GET_CHAT_CONTACTS\",chats:response.data});}).catch(function(err){return console.log(err);});};};export var togglePinned=function togglePinned(id,value){return function(dispatch){axios.post(\"/api/apps/chat/set-pinned/\",{contactId:id,value:value}).then(function(response){dispatch({type:\"SET_PINNED\",id:id,value:value});}).catch(function(err){return console.log(err);});};};export var sendMessage=function sendMessage(id,isPinned,text){if(text.length>0){return function(dispatch){var newMsg={textContent:text,isSent:true,isSeen:false,time:new Date().toString()};axios.post(\"/api/app/chat/send-message\",{contactId:id,message:newMsg,isPinned:isPinned}).then(function(response){dispatch({type:\"SEND_MESSAGE\",msg:newMsg,id:id,isPinned:isPinned,text:text});dispatch(getChats());}).catch(function(err){return console.log(err);});};}else{return;}};export var changeStatus=function changeStatus(status){return function(dispatch){dispatch({type:\"CHANGE_STATUS\",status:status});};};export var searchContacts=function searchContacts(query){return function(dispatch){dispatch({type:\"SEARCH_CONTACTS\",query:query});};};export var markSeenAllMessages=function markSeenAllMessages(id){return function(dispatch){axios.post(\"/api/apps/chat/mark-all-seen/\",{contactId:id}).then(function(response){dispatch({type:\"MARK_AS_SEEN\",id:id});}).catch(function(err){return console.log(err);});};};","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/redux/actions/chat/index.js"],"names":["axios","getChats","dispatch","get","then","response","type","contacts","data","chats","catch","err","console","log","getContactChats","togglePinned","id","value","post","contactId","sendMessage","isPinned","text","length","newMsg","textContent","isSent","isSeen","time","Date","toString","message","msg","changeStatus","status","searchContacts","query","markSeenAllMessages"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\nexport const getChats = () => {\n  return dispatch => {\n    axios\n      .get(\"api/app/chat/chats\")\n      .then(response => {\n        dispatch({\n          type: \"GET_CONTACTS\",\n          contacts: response.data.contacts,\n          chats: response.data.chats\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const getContactChats = () => {\n  return dispatch => {\n    axios\n      .get(\"api/app/chat/chat-contacts\")\n      .then(response => {\n        dispatch({\n          type: \"GET_CHAT_CONTACTS\",\n          chats: response.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const togglePinned = (id, value) => {\n  return dispatch => {\n    axios\n      .post(\"/api/apps/chat/set-pinned/\", {\n        contactId: id,\n        value\n      })\n      .then(response => {\n        dispatch({\n          type: \"SET_PINNED\",\n          id,\n          value\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const sendMessage = (id, isPinned, text) => {\n  if (text.length > 0) {\n    return dispatch => {\n      let newMsg = {\n        textContent: text,\n        isSent: true,\n        isSeen: false,\n        time: new Date().toString()\n      }\n      axios\n        .post(\"/api/app/chat/send-message\", {\n          contactId: id,\n          message: newMsg,\n          isPinned\n        })\n        .then(response => {\n          dispatch({\n            type: \"SEND_MESSAGE\",\n            msg: newMsg,\n            id,\n            isPinned,\n            text\n          })\n          dispatch(getChats())\n        })\n        .catch(err => console.log(err))\n    }\n  } else {\n    return\n  }\n}\n\nexport const changeStatus = status => {\n  return dispatch => {\n    dispatch({\n      type: \"CHANGE_STATUS\",\n      status\n    })\n  }\n}\n\nexport const searchContacts = query => {\n  return dispatch => {\n    dispatch({\n      type: \"SEARCH_CONTACTS\",\n      query\n    })\n  }\n}\n\nexport const markSeenAllMessages = id => {\n  return dispatch => {\n    axios\n      .post(\"/api/apps/chat/mark-all-seen/\", {\n        contactId: id\n      })\n      .then(response => {\n        dispatch({\n          type: \"MARK_AS_SEEN\",\n          id\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}