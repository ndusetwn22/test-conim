{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/views/ui-elements/cards/actions/CardActions.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Table, Collapse, Spinner } from \"reactstrap\";\nimport { ChevronDown, RotateCw, X } from \"react-feather\";\nimport classnames from \"classnames\";\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\nvar CardActions = /*#__PURE__*/function (_React$Component) {\n  _inherits(CardActions, _React$Component);\n\n  function CardActions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardActions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardActions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      collapse: true,\n      reload: false,\n      isVisible: true,\n      status: \"Opened\",\n      isVisibleAll: true,\n      reloadAll: false,\n      collapseAll: true,\n      statusAll: \"Opened\"\n    };\n\n    _this.refreshCard = function () {\n      _this.setState({\n        reload: true\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          reload: false\n        });\n      }, 2000);\n    };\n\n    _this.refreshCardAll = function () {\n      _this.setState({\n        reloadAll: true\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          reloadAll: false\n        });\n      }, 2000);\n    };\n\n    _this.toggle = function () {\n      _this.setState(function (state) {\n        return {\n          collapse: !state.collapse\n        };\n      });\n    };\n\n    _this.toggleAll = function () {\n      _this.setState(function (state) {\n        return {\n          collapseAll: !state.collapseAll\n        };\n      });\n    };\n\n    _this.onEntered = function () {\n      _this.setState({\n        status: \"Opened\"\n      });\n    };\n\n    _this.onEnteredAll = function () {\n      _this.setState({\n        status: \"Opened\"\n      });\n    };\n\n    _this.onEntering = function () {\n      _this.setState({\n        status: \"Opening...\"\n      });\n    };\n\n    _this.onEnteringAll = function () {\n      _this.setState({\n        statusAll: \"Opening...\"\n      });\n    };\n\n    _this.onEnteredAll = function () {\n      _this.setState({\n        statusAll: \"Opened\"\n      });\n    };\n\n    _this.onExited = function () {\n      _this.setState({\n        status: \"Closed\"\n      });\n    };\n\n    _this.onExiting = function () {\n      _this.setState({\n        status: \"Closing...\"\n      });\n    };\n\n    _this.onExitingAll = function () {\n      _this.setState({\n        statusAll: \"Closing...\"\n      });\n    };\n\n    _this.onExitedAll = function () {\n      _this.setState({\n        statusAll: \"Closed\"\n      });\n    };\n\n    _this.removeCard = function () {\n      _this.setState({\n        isVisible: false\n      });\n    };\n\n    _this.removeCardAll = function () {\n      _this.setState({\n        isVisibleAll: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CardActions, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumbs, {\n        breadCrumbTitle: \"Card Actions\",\n        breadCrumbParent: \"Card\",\n        breadCrumbActive: \"Card Actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, \"Card Actions\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        responsive: true,\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 23\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 23\n        }\n      }, \"Icon\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 23\n        }\n      }, \"Details\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 23\n        }\n      }, \"Collapse\"), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ChevronDown, {\n        className: \"collapse-icon\",\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 23\n        }\n      }, \" Collapse card content using collapse action.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 23\n        }\n      }, \"Refresh Content\"), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(RotateCw, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 23\n        }\n      }, \"Refresh your card content using refresh action.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 23\n        }\n      }, \"Remove Card\"), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(X, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 23\n        }\n      }, \" Remove card from page using remove card action\"))))))), /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: classnames(\"card-action\", {\n          \"card-collapsed\": this.state.status === \"Closed\",\n          \"card-shown\": this.state.status === \"Opened\",\n          closing: this.state.status === \"Closing...\",\n          opening: this.state.status === \"Opening...\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, \"Collapsible\"), /*#__PURE__*/React.createElement(ChevronDown, {\n        className: \"collapse-icon\",\n        size: 15,\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Collapse, {\n        isOpen: this.state.collapse,\n        onExited: this.onExited,\n        onEntered: this.onEntered,\n        onExiting: this.onExiting,\n        onEntering: this.onEntering,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }\n      }, \"You can create collapsible card using reactstrap's collapse component, to create a collapsible card you'll have to manage it's collapse state.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 19\n        }\n      }, \"Click on \", /*#__PURE__*/React.createElement(ChevronDown, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 30\n        }\n      }), \" to see card collapse in action\"))))), /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: classnames(\"card-reload card-action\", {\n          refreshing: this.state.reload\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }, \"Refresh\"), /*#__PURE__*/React.createElement(RotateCw, {\n        size: 15,\n        onClick: this.refreshCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      }, this.state.reload ? /*#__PURE__*/React.createElement(Spinner, {\n        color: \"primary\",\n        className: \"reload-spinner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }\n      }) : \"\", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, \"You can add refresh content action to card by adding class\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 19\n        }\n      }, \".card-reload\"), \" with your card tag, and add conditional spinner into card body to showp when card is refreshing.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, \"Click on \", /*#__PURE__*/React.createElement(RotateCw, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 28\n        }\n      }), \" to see card refresh in action\")))), /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: classnames(\"card-action\", {\n          \"d-none\": this.state.isVisible === false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, \"Remove Card\"), /*#__PURE__*/React.createElement(X, {\n        size: 15,\n        onClick: this.removeCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }\n      }, \"You can create a removable card by managing state\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }\n      }, \"isVisible\"), \", which will add conditional d-none class which clicked on icon to remove your card.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, \"Click on \", /*#__PURE__*/React.createElement(X, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 28\n        }\n      }), \" to see card refresh in action\")))), /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: classnames(\"card-action card-reload\", {\n          \"d-none\": this.state.isVisibleAll === false,\n          refreshing: this.state.reloadAll,\n          \"card-collapsed\": this.state.statusAll === \"Closed\",\n          closing: this.state.statusAll === \"Closing...\",\n          opening: this.state.statusAll === \"Opening...\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, \"All Actions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ChevronDown, {\n        className: \"collapse-icon mr-50\",\n        size: 15,\n        onClick: this.toggleAll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(RotateCw, {\n        className: \"mr-50\",\n        size: 15,\n        onClick: this.refreshCardAll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(X, {\n        size: 15,\n        onClick: this.removeCardAll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Collapse, {\n        isOpen: this.state.collapseAll,\n        onExited: this.onExitedAll,\n        onEntered: this.onEnteredAll,\n        onExiting: this.onExitingAll,\n        onEntering: this.onEnteringAll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      }, this.state.reloadAll ? /*#__PURE__*/React.createElement(Spinner, {\n        color: \"primary\",\n        className: \"reload-spinner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }\n      }) : \"\", \"You can also add all three action together by managing all three actions's required classes and by managing their states.\"))))));\n    }\n  }]);\n\n  return CardActions;\n}(React.Component);\n\nexport default CardActions;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/ui-elements/cards/actions/CardActions.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Row","Col","Table","Collapse","Spinner","ChevronDown","RotateCw","X","classnames","Breadcrumbs","CardActions","state","collapse","reload","isVisible","status","isVisibleAll","reloadAll","collapseAll","statusAll","refreshCard","setState","setTimeout","refreshCardAll","toggle","toggleAll","onEntered","onEnteredAll","onEntering","onEnteringAll","onExited","onExiting","onExitingAll","onExitedAll","removeCard","removeCardAll","closing","opening","refreshing","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Row,\n  Col,\n  Table,\n  Collapse,\n  Spinner\n} from \"reactstrap\"\nimport { ChevronDown, RotateCw, X } from \"react-feather\"\nimport classnames from \"classnames\"\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\n\nclass CardActions extends React.Component {\n  state = {\n    collapse: true,\n    reload: false,\n    isVisible: true,\n    status: \"Opened\",\n    isVisibleAll: true,\n    reloadAll: false,\n    collapseAll: true,\n    statusAll: \"Opened\"\n  }\n\n  refreshCard = () => {\n    this.setState({ reload: true })\n    setTimeout(() => {\n      this.setState({ reload: false })\n    }, 2000)\n  }\n  refreshCardAll = () => {\n    this.setState({ reloadAll: true })\n    setTimeout(() => {\n      this.setState({ reloadAll: false })\n    }, 2000)\n  }\n\n  toggle = () => {\n    this.setState(state => ({ collapse: !state.collapse }))\n  }\n  toggleAll = () => {\n    this.setState(state => ({ collapseAll: !state.collapseAll }))\n  }\n  onEntered = () => {\n    this.setState({ status: \"Opened\" })\n  }\n  onEnteredAll = () => {\n    this.setState({ status: \"Opened\" })\n  }\n\n  onEntering = () => {\n    this.setState({ status: \"Opening...\" })\n  }\n  onEnteringAll = () => {\n    this.setState({ statusAll: \"Opening...\" })\n  }\n\n  onEnteredAll = () => {\n    this.setState({ statusAll: \"Opened\" })\n  }\n\n  onExited = () => {\n    this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = () => {\n    this.setState({ status: \"Closing...\" })\n  }\n\n  onExitingAll = () => {\n    this.setState({ statusAll: \"Closing...\" })\n  }\n  onExitedAll = () => {\n    this.setState({ statusAll: \"Closed\" })\n  }\n\n  removeCard = () => {\n    this.setState({ isVisible: false })\n  }\n  removeCardAll = () => {\n    this.setState({ isVisibleAll: false })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Card Actions\"\n          breadCrumbParent=\"Card\"\n          breadCrumbActive=\"Card Actions\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Card Actions</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table responsive bordered>\n                  <thead>\n                    <tr>\n                      <th>Action</th>\n                      <th>Icon</th>\n                      <th>Details</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>Collapse</td>\n                      <td className=\"text-center\">\n                        <ChevronDown className=\"collapse-icon\" size={15} />\n                      </td>\n                      <td> Collapse card content using collapse action.</td>\n                    </tr>\n                    <tr>\n                      <td>Refresh Content</td>\n                      <td className=\"text-center\">\n                        <RotateCw size={15} />\n                      </td>\n                      <td>Refresh your card content using refresh action.</td>\n                    </tr>\n                    <tr>\n                      <td>Remove Card</td>\n                      <td className=\"text-center\">\n                        <X size={15} />\n                      </td>\n                      <td> Remove card from page using remove card action</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <Card\n              className={classnames(\"card-action\", {\n                \"card-collapsed\": this.state.status === \"Closed\",\n                \"card-shown\": this.state.status === \"Opened\",\n                closing: this.state.status === \"Closing...\",\n                opening: this.state.status === \"Opening...\"\n              })}\n            >\n              <CardHeader>\n                <CardTitle>Collapsible</CardTitle>\n                <ChevronDown\n                  className=\"collapse-icon\"\n                  size={15}\n                  onClick={this.toggle}\n                />\n              </CardHeader>\n              <Collapse\n                isOpen={this.state.collapse}\n                onExited={this.onExited}\n                onEntered={this.onEntered}\n                onExiting={this.onExiting}\n                onEntering={this.onEntering}\n              >\n                <CardBody>\n                  <p>\n                    You can create collapsible card using reactstrap's collapse\n                    component, to create a collapsible card you'll have to\n                    manage it's collapse state.\n                  </p>\n                  <p>\n                    Click on <ChevronDown size={15} /> to see card collapse in\n                    action\n                  </p>\n                </CardBody>\n              </Collapse>\n            </Card>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <Card\n              className={classnames(\"card-reload card-action\", {\n                refreshing: this.state.reload\n              })}\n            >\n              <CardHeader>\n                <CardTitle>Refresh</CardTitle>\n                <RotateCw size={15} onClick={this.refreshCard} />\n              </CardHeader>\n              <CardBody>\n                {this.state.reload ? (\n                  <Spinner color=\"primary\" className=\"reload-spinner\" />\n                ) : (\n                  \"\"\n                )}\n                <p>\n                  You can add refresh content action to card by adding class{\" \"}\n                  <code>.card-reload</code> with your card tag, and add\n                  conditional spinner into card body to showp when card is\n                  refreshing.\n                </p>\n                <p>\n                  Click on <RotateCw size={15} /> to see card refresh in action\n                </p>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <Card\n              className={classnames(\"card-action\", {\n                \"d-none\": this.state.isVisible === false\n              })}\n            >\n              <CardHeader>\n                <CardTitle>Remove Card</CardTitle>\n                <X size={15} onClick={this.removeCard} />\n              </CardHeader>\n              <CardBody>\n                <p>\n                  You can create a removable card by managing state{\" \"}\n                  <code>isVisible</code>, which will add conditional d-none\n                  class which clicked on icon to remove your card.\n                </p>\n                <p>\n                  Click on <X size={15} /> to see card refresh in action\n                </p>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <Card\n              className={classnames(\"card-action card-reload\", {\n                \"d-none\": this.state.isVisibleAll === false,\n                refreshing: this.state.reloadAll,\n                \"card-collapsed\": this.state.statusAll === \"Closed\",\n                closing: this.state.statusAll === \"Closing...\",\n                opening: this.state.statusAll === \"Opening...\"\n              })}\n            >\n              <CardHeader>\n                <CardTitle>All Actions</CardTitle>\n                <div className=\"actions\">\n                  <ChevronDown\n                    className=\"collapse-icon mr-50\"\n                    size={15}\n                    onClick={this.toggleAll}\n                  />\n                  <RotateCw\n                    className=\"mr-50\"\n                    size={15}\n                    onClick={this.refreshCardAll}\n                  />\n                  <X size={15} onClick={this.removeCardAll} />\n                </div>\n              </CardHeader>\n              <Collapse\n                isOpen={this.state.collapseAll}\n                onExited={this.onExitedAll}\n                onEntered={this.onEnteredAll}\n                onExiting={this.onExitingAll}\n                onEntering={this.onEnteringAll}\n              >\n                <CardBody>\n                  {this.state.reloadAll ? (\n                    <Spinner color=\"primary\" className=\"reload-spinner\" />\n                  ) : (\n                    \"\"\n                  )}\n                  You can also add all three action together by managing all\n                  three actions's required classes and by managing their states.\n                </CardBody>\n              </Collapse>\n            </Card>\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default CardActions\n"]},"metadata":{},"sourceType":"module"}