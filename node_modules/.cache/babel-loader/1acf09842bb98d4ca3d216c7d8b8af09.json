{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import ReactDOM from\"react-dom\";import{Input,Button}from\"reactstrap\";import{MessageSquare,Menu,Star,Send}from\"react-feather\";import PerfectScrollbar from\"react-perfect-scrollbar\";import{connect}from\"react-redux\";import{togglePinned,sendMessage}from\"../../../redux/actions/chat/index\";import userImg from\"../../../assets/img/portrait/small/avatar-s-11.jpg\";var ChatLog=/*#__PURE__*/function(_React$Component){_inherits(ChatLog,_React$Component);var _super=_createSuper(ChatLog);function ChatLog(){var _this;_classCallCheck(this,ChatLog);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={msg:\"\",activeUser:null,activeChat:null};_this.handleSendMessage=function(id,isPinned,text){if(text.length>0){_this.props.sendMessage(id,isPinned,text);_this.setState({msg:\"\"});}};_this.handleTime=function(time_to,time_from){var date_time_to=new Date(Date.parse(time_to));var date_time_from=new Date(Date.parse(time_from));return date_time_to.getFullYear()===date_time_from.getFullYear()&&date_time_to.getMonth()===date_time_from.getMonth()&&date_time_to.getDate()===date_time_from.getDate();};_this.scrollToBottom=function(){var chatContainer=ReactDOM.findDOMNode(_this.chatArea);chatContainer.scrollTop=chatContainer.scrollHeight;};return _this;}_createClass(ChatLog,[{key:\"componentDidMount\",value:function componentDidMount(){this.scrollToBottom();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.scrollToBottom();}},{key:\"render\",value:function render(){var _this2=this;var activeUser=this.state.activeUser;var activeUserUid=activeUser&&activeUser.uid?activeUser.uid:null,activeChat=activeUser&&activeUser.uid?this.props.chat.chats[activeUserUid]:null;var renderChats=activeChat&&activeChat!==undefined&&activeChat.msg?activeChat.msg.map(function(chat,i){var renderSentTime=function renderSentTime(){if(i>0&&!_this2.handleTime(chat.time,activeChat.msg[i-1].time)){return/*#__PURE__*/React.createElement(\"div\",{className:\"divider\"},/*#__PURE__*/React.createElement(\"div\",{className:\"divider-text\"},new Date().getDate()+\" \"+new Date().toLocaleString(\"default\",{month:\"short\"})));}};var renderAvatar=function renderAvatar(){if(i>0){if(chat.isSent===true&&activeChat.msg[i-1].isSent!==true){return/*#__PURE__*/React.createElement(\"div\",{className:\"chat-avatar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"avatar m-0\"},/*#__PURE__*/React.createElement(\"img\",{src:userImg,alt:\"chat avatar\",height:\"40\",width:\"40\"})));}else if(chat.isSent!==true){return/*#__PURE__*/React.createElement(\"div\",{className:\"chat-avatar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"avatar m-0\"},/*#__PURE__*/React.createElement(\"img\",{src:activeUser.photoURL,alt:\"chat avatar\",height:\"40\",width:\"40\"})));}else{return\"\";}}else{return/*#__PURE__*/React.createElement(\"div\",{className:\"chat-avatar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"avatar m-0\"},/*#__PURE__*/React.createElement(\"img\",{src:chat.isSent?userImg:activeUser.photoURL,alt:\"chat avatar\",height:\"40\",width:\"40\"})));}};return/*#__PURE__*/React.createElement(React.Fragment,{key:i},renderSentTime(),/*#__PURE__*/React.createElement(\"div\",{className:\"chat \".concat(chat.isSent!==true?\"chat-left\":\"chat-right\")},renderAvatar(),/*#__PURE__*/React.createElement(\"div\",{className:\"chat-body\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat-content\"},chat.textContent))));}):null;return/*#__PURE__*/React.createElement(\"div\",{className:\"content-right\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat-app-window\"},/*#__PURE__*/React.createElement(\"div\",{className:\"start-chat-area \".concat(activeUser!==null?\"d-none\":\"d-flex\")},/*#__PURE__*/React.createElement(\"span\",{className:\"mb-1 start-chat-icon\"},/*#__PURE__*/React.createElement(MessageSquare,{size:50})),/*#__PURE__*/React.createElement(\"h4\",{className:\"py-50 px-1 sidebar-toggle start-chat-text\",onClick:function onClick(){if(_this2.props.mql.matches===false){_this2.props.mainSidebar(true);}else{return null;}}},\"Start Conversation\")),/*#__PURE__*/React.createElement(\"div\",{className:\"active-chat \".concat(activeUser===null?\"d-none\":\"d-block\")},/*#__PURE__*/React.createElement(\"div\",{className:\"chat_navbar\"},/*#__PURE__*/React.createElement(\"header\",{className:\"chat_header d-flex justify-content-between align-items-center p-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-toggle d-block d-lg-none mr-1\",onClick:function onClick(){return _this2.props.mainSidebar(true);}},/*#__PURE__*/React.createElement(Menu,{size:24})),/*#__PURE__*/React.createElement(\"div\",{className:\"avatar user-profile-toggle m-0 m-0 mr-1\",onClick:function onClick(){return _this2.props.handleReceiverSidebar(\"open\");}},/*#__PURE__*/React.createElement(\"img\",{src:activeUser!==null?activeUser.photoURL:\"\",alt:activeUser!==null?activeUser.displayName:\"\",height:\"40\",width:\"40\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"\\n                    \".concat(activeUser!==null&&activeUser.status===\"do not disturb\"?\"avatar-status-busy\":activeUser!==null&&activeUser.status===\"away\"?\"avatar-status-away\":activeUser!==null&&activeUser.status===\"offline\"?\"avatar-status-offline\":\"avatar-status-online\",\"\\n                    \")})),/*#__PURE__*/React.createElement(\"h6\",{className:\"mb-0\"},activeUser!==null?activeUser.displayName:\"\")),/*#__PURE__*/React.createElement(\"span\",{className:\"favorite\",onClick:function onClick(){if(activeChat){_this2.props.togglePinned(activeUser.uid,!activeChat.isPinned);}}},/*#__PURE__*/React.createElement(Star,{size:22,stroke:activeChat&&activeChat.isPinned===true?\"#FF9F43\":\"#626262\"})))),/*#__PURE__*/React.createElement(PerfectScrollbar,{className:\"user-chats\",options:{wheelPropagation:false},ref:function ref(el){_this2.chatArea=el;}},/*#__PURE__*/React.createElement(\"div\",{className:\"chats\"},renderChats)),/*#__PURE__*/React.createElement(\"div\",{className:\"chat-app-form\"},/*#__PURE__*/React.createElement(\"form\",{className:\"chat-app-input d-flex align-items-center\",onSubmit:function onSubmit(e){e.preventDefault();_this2.handleSendMessage(activeUser.uid,false,_this2.state.msg,activeUser);}},/*#__PURE__*/React.createElement(Input,{type:\"text\",className:\"message mr-1 ml-50\",placeholder:\"Type your message\",value:this.state.msg,onChange:function onChange(e){e.preventDefault();_this2.setState({msg:e.target.value});}}),/*#__PURE__*/React.createElement(Button,{color:\"primary\"},/*#__PURE__*/React.createElement(Send,{className:\"d-lg-none\",size:15}),/*#__PURE__*/React.createElement(\"span\",{className:\"d-lg-block d-none\"},\"Send\")))))));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.activeUser!==state.activeChat||props.activeChat!==state.activeChat){return{activeUser:props.activeUser,activeChat:props.activeChat};}// Return null if the state hasn't changed\nreturn null;}}]);return ChatLog;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{chat:state.chatApp.chats};};export default connect(mapStateToProps,{togglePinned:togglePinned,sendMessage:sendMessage})(ChatLog);","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/apps/chat/ChatLog.js"],"names":["React","ReactDOM","Input","Button","MessageSquare","Menu","Star","Send","PerfectScrollbar","connect","togglePinned","sendMessage","userImg","ChatLog","state","msg","activeUser","activeChat","handleSendMessage","id","isPinned","text","length","props","setState","handleTime","time_to","time_from","date_time_to","Date","parse","date_time_from","getFullYear","getMonth","getDate","scrollToBottom","chatContainer","findDOMNode","chatArea","scrollTop","scrollHeight","activeUserUid","uid","chat","chats","renderChats","undefined","map","i","renderSentTime","time","toLocaleString","month","renderAvatar","isSent","photoURL","textContent","mql","matches","mainSidebar","handleReceiverSidebar","displayName","status","wheelPropagation","el","e","preventDefault","target","value","Component","mapStateToProps","chatApp"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Input, Button } from \"reactstrap\"\nimport { MessageSquare, Menu, Star, Send } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport { togglePinned, sendMessage } from \"../../../redux/actions/chat/index\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\n\nclass ChatLog extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.activeUser !== state.activeChat ||\n      props.activeChat !== state.activeChat\n    ) {\n      return {\n        activeUser: props.activeUser,\n        activeChat: props.activeChat\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    msg: \"\",\n    activeUser: null,\n    activeChat: null\n  }\n\n  handleSendMessage = (id, isPinned, text) => {\n    if (text.length > 0) {\n      this.props.sendMessage(id, isPinned, text)\n      this.setState({\n        msg: \"\"\n      })\n    }\n  }\n  componentDidMount() {\n    this.scrollToBottom()\n  }\n  componentDidUpdate() {\n    this.scrollToBottom()\n  }\n\n  handleTime = (time_to, time_from) => {\n    const date_time_to = new Date(Date.parse(time_to))\n    const date_time_from = new Date(Date.parse(time_from))\n    return (\n      date_time_to.getFullYear() === date_time_from.getFullYear() &&\n      date_time_to.getMonth() === date_time_from.getMonth() &&\n      date_time_to.getDate() === date_time_from.getDate()\n    )\n  }\n\n  scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(this.chatArea)\n    chatContainer.scrollTop = chatContainer.scrollHeight\n  }\n\n  render() {\n    const { activeUser } = this.state\n    let activeUserUid = activeUser && activeUser.uid ? activeUser.uid : null,\n      activeChat =\n        activeUser && activeUser.uid\n          ? this.props.chat.chats[activeUserUid]\n          : null\n\n    let renderChats =\n      activeChat && activeChat !== undefined && activeChat.msg\n        ? activeChat.msg.map((chat, i) => {\n            let renderSentTime = () => {\n              if (\n                i > 0 &&\n                !this.handleTime(chat.time, activeChat.msg[i - 1].time)\n              ) {\n                return (\n                  <div className=\"divider\">\n                    <div className=\"divider-text\">\n                      {new Date().getDate() +\n                        \" \" +\n                        new Date().toLocaleString(\"default\", {\n                          month: \"short\"\n                        })}\n                    </div>\n                  </div>\n                )\n              }\n            }\n            let renderAvatar = () => {\n              if (i > 0) {\n                if (\n                  chat.isSent === true &&\n                  activeChat.msg[i - 1].isSent !== true\n                ) {\n                  return (\n                    <div className=\"chat-avatar\">\n                      <div className=\"avatar m-0\">\n                        <img\n                          src={userImg}\n                          alt=\"chat avatar\"\n                          height=\"40\"\n                          width=\"40\"\n                        />\n                      </div>\n                    </div>\n                  )\n                } else if (chat.isSent !== true) {\n                  return (\n                    <div className=\"chat-avatar\">\n                      <div className=\"avatar m-0\">\n                        <img\n                          src={activeUser.photoURL}\n                          alt=\"chat avatar\"\n                          height=\"40\"\n                          width=\"40\"\n                        />\n                      </div>\n                    </div>\n                  )\n                } else {\n                  return \"\"\n                }\n              } else {\n                return (\n                  <div className=\"chat-avatar\">\n                    <div className=\"avatar m-0\">\n                      <img\n                        src={chat.isSent ? userImg : activeUser.photoURL}\n                        alt=\"chat avatar\"\n                        height=\"40\"\n                        width=\"40\"\n                      />\n                    </div>\n                  </div>\n                )\n              }\n            }\n            return (\n              <React.Fragment key={i}>\n                {renderSentTime()}\n                <div\n                  className={`chat ${\n                    chat.isSent !== true ? \"chat-left\" : \"chat-right\"\n                  }`}>\n                  {renderAvatar()}\n                  <div className=\"chat-body\">\n                    <div className=\"chat-content\">{chat.textContent}</div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )\n          })\n        : null\n\n    return (\n      <div className=\"content-right\">\n        <div className=\"chat-app-window\">\n          <div\n            className={`start-chat-area ${\n              activeUser !== null ? \"d-none\" : \"d-flex\"\n            }`}>\n            <span className=\"mb-1 start-chat-icon\">\n              <MessageSquare size={50} />\n            </span>\n            <h4\n              className=\"py-50 px-1 sidebar-toggle start-chat-text\"\n              onClick={() => {\n                if (this.props.mql.matches === false) {\n                  this.props.mainSidebar(true)\n                } else {\n                  return null\n                }\n              }}>\n              Start Conversation\n            </h4>\n          </div>\n          <div\n            className={`active-chat ${\n              activeUser === null ? \"d-none\" : \"d-block\"\n            }`}>\n            <div className=\"chat_navbar\">\n              <header className=\"chat_header d-flex justify-content-between align-items-center p-1\">\n                <div className=\"d-flex align-items-center\">\n                  <div\n                    className=\"sidebar-toggle d-block d-lg-none mr-1\"\n                    onClick={() => this.props.mainSidebar(true)}>\n                    <Menu size={24} />\n                  </div>\n                  <div\n                    className=\"avatar user-profile-toggle m-0 m-0 mr-1\"\n                    onClick={() => this.props.handleReceiverSidebar(\"open\")}>\n                    <img\n                      src={activeUser !== null ? activeUser.photoURL : \"\"}\n                      alt={activeUser !== null ? activeUser.displayName : \"\"}\n                      height=\"40\"\n                      width=\"40\"\n                    />\n                    <span\n                      className={`\n                    ${\n                      activeUser !== null &&\n                      activeUser.status === \"do not disturb\"\n                        ? \"avatar-status-busy\"\n                        : activeUser !== null && activeUser.status === \"away\"\n                        ? \"avatar-status-away\"\n                        : activeUser !== null && activeUser.status === \"offline\"\n                        ? \"avatar-status-offline\"\n                        : \"avatar-status-online\"\n                    }\n                    `}\n                    />\n                  </div>\n                  <h6 className=\"mb-0\">\n                    {activeUser !== null ? activeUser.displayName : \"\"}\n                  </h6>\n                </div>\n                <span\n                  className=\"favorite\"\n                  onClick={() => {\n                    if (activeChat) {\n                      this.props.togglePinned(\n                        activeUser.uid,\n                        !activeChat.isPinned\n                      )\n                    }\n                  }}>\n                  <Star\n                    size={22}\n                    stroke={\n                      activeChat && activeChat.isPinned === true\n                        ? \"#FF9F43\"\n                        : \"#626262\"\n                    }\n                  />\n                </span>\n              </header>\n            </div>\n            <PerfectScrollbar\n              className=\"user-chats\"\n              options={{\n                wheelPropagation: false\n              }}\n              ref={el => {\n                this.chatArea = el\n              }}>\n              <div className=\"chats\">{renderChats}</div>\n            </PerfectScrollbar>\n            <div className=\"chat-app-form\">\n              <form\n                className=\"chat-app-input d-flex align-items-center\"\n                onSubmit={e => {\n                  e.preventDefault()\n                  this.handleSendMessage(\n                    activeUser.uid,\n                    false,\n                    this.state.msg,\n                    activeUser\n                  )\n                }}>\n                <Input\n                  type=\"text\"\n                  className=\"message mr-1 ml-50\"\n                  placeholder=\"Type your message\"\n                  value={this.state.msg}\n                  onChange={e => {\n                    e.preventDefault()\n                    this.setState({\n                      msg: e.target.value\n                    })\n                  }}\n                />\n                <Button color=\"primary\">\n                  <Send className=\"d-lg-none\" size={15} />\n                  <span className=\"d-lg-block d-none\">Send</span>\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, { togglePinned, sendMessage })(ChatLog)\n"]},"metadata":{},"sourceType":"module"}