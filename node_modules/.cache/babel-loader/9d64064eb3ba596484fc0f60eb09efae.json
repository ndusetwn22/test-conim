{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\rombak-react-vuexy\\\\src\\\\layouts\\\\components\\\\navbar\\\\Navbar.js\";\nimport React from \"react\";\nimport { Navbar } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { useAuth0 } from \"../../../authServices/auth0/auth0Service\";\nimport { logoutWithJWT, logoutWithFirebase, logoutWithCustom } from \"../../../redux/actions/auth/loginActions\";\nimport NavbarBookmarks from \"./NavbarBookmarks\";\nimport NavbarUser from \"./NavbarUser\";\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\";\n\nconst UserName = props => {\n  console.log('User navbar : ', props);\n  let username = \"\";\n\n  if (props.userdata !== undefined) {\n    username = props.userdata.name;\n  } else if (props.user.login.values !== undefined) {\n    username = props.user.login.values.name;\n\n    if (props.user.login.values.loggedInWith !== undefined && props.user.login.values.loggedInWith === \"jwt\") {\n      username = props.user.login.values.loggedInUser.name;\n    }\n  } else {\n    username = \"John Doe\";\n  }\n\n  return username;\n};\n\nconst ThemeNavbar = props => {\n  const {\n    user\n  } = useAuth0();\n  const colorsArr = [\"primary\", \"danger\", \"success\", \"info\", \"warning\", \"dark\"];\n  const navbarTypes = [\"floating\", \"static\", \"sticky\", \"hidden\"];\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-navbar-shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Navbar, {\n    className: classnames(\"header-navbar navbar-expand-lg navbar navbar-with-menu navbar-shadow\", {\n      \"navbar-light\": props.navbarColor === \"default\" || !colorsArr.includes(props.navbarColor),\n      \"navbar-dark\": colorsArr.includes(props.navbarColor),\n      \"bg-primary\": props.navbarColor === \"primary\" && props.navbarType !== \"static\",\n      \"bg-danger\": props.navbarColor === \"danger\" && props.navbarType !== \"static\",\n      \"bg-success\": props.navbarColor === \"success\" && props.navbarType !== \"static\",\n      \"bg-info\": props.navbarColor === \"info\" && props.navbarType !== \"static\",\n      \"bg-warning\": props.navbarColor === \"warning\" && props.navbarType !== \"static\",\n      \"bg-dark\": props.navbarColor === \"dark\" && props.navbarType !== \"static\",\n      \"d-none\": props.navbarType === \"hidden\" && !props.horizontal,\n      \"floating-nav\": props.navbarType === \"floating\" && !props.horizontal || !navbarTypes.includes(props.navbarType) && !props.horizontal,\n      \"navbar-static-top\": props.navbarType === \"static\" && !props.horizontal,\n      \"fixed-top\": props.navbarType === \"sticky\" || props.horizontal,\n      \"scrolling\": props.horizontal && props.scrolling\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-collapse d-flex justify-content-between align-items-center\",\n    id: \"navbar-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bookmark-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavbarBookmarks, {\n    sidebarVisibility: props.sidebarVisibility,\n    handleAppOverlay: props.handleAppOverlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })), props.horizontal ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"brand-logo mr-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary brand-text mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, \"Vuexy - BCourt\")) : null, /*#__PURE__*/React.createElement(NavbarUser, {\n    handleAppOverlay: props.handleAppOverlay,\n    changeCurrentLang: props.changeCurrentLang,\n    userName: /*#__PURE__*/React.createElement(UserName, Object.assign({\n      userdata: user\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 27\n      }\n    })),\n    userImg: props.user.login.values !== undefined && props.user.login.values.loggedInWith !== \"jwt\" && props.user.login.values.photoUrl ? props.user.login.values.photoUrl : user !== undefined && user.picture ? user.picture : userImg,\n    loggedInWith: props.user !== undefined && props.user.login.values !== undefined ? props.user.login.values.loggedInWith : null,\n    logoutWithJWT: props.logoutWithJWT,\n    logoutWithFirebase: props.logoutWithFirebase,\n    logoutWithCustom: props.logoutWithCustom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logoutWithJWT,\n  logoutWithFirebase,\n  logoutWithCustom,\n  useAuth0\n})(ThemeNavbar);","map":{"version":3,"sources":["E:/react/rombak-react-vuexy/src/layouts/components/navbar/Navbar.js"],"names":["React","Navbar","connect","classnames","useAuth0","logoutWithJWT","logoutWithFirebase","logoutWithCustom","NavbarBookmarks","NavbarUser","userImg","UserName","props","console","log","username","userdata","undefined","name","user","login","values","loggedInWith","loggedInUser","ThemeNavbar","colorsArr","navbarTypes","navbarColor","includes","navbarType","horizontal","scrolling","sidebarVisibility","handleAppOverlay","changeCurrentLang","photoUrl","picture","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Navbar } from \"reactstrap\"\nimport { connect } from \"react-redux\"\nimport classnames from \"classnames\"\nimport { useAuth0 } from \"../../../authServices/auth0/auth0Service\"\nimport {\n  logoutWithJWT,\n  logoutWithFirebase,\n  logoutWithCustom\n} from \"../../../redux/actions/auth/loginActions\"\nimport NavbarBookmarks from \"./NavbarBookmarks\"\nimport NavbarUser from \"./NavbarUser\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\n\nconst UserName = props => {\n  console.log('User navbar : ', props)\n  let username = \"\"\n  if (props.userdata !== undefined) {\n    username = props.userdata.name\n  } else if (props.user.login.values !== undefined) {\n    username = props.user.login.values.name\n    if (\n      props.user.login.values.loggedInWith !== undefined &&\n      props.user.login.values.loggedInWith === \"jwt\"\n    ) {\n      username = props.user.login.values.loggedInUser.name\n    }\n  } else {\n    username = \"John Doe\"\n  }\n\n  return username\n}\nconst ThemeNavbar = props => {\n  const { user } = useAuth0()\n  const colorsArr = [ \"primary\", \"danger\", \"success\", \"info\", \"warning\", \"dark\"]\n  const navbarTypes = [\"floating\" , \"static\" , \"sticky\" , \"hidden\"]\n  return (\n    <React.Fragment>\n      <div className=\"content-overlay\" />\n      <div className=\"header-navbar-shadow\" />\n      <Navbar\n        className={classnames(\n          \"header-navbar navbar-expand-lg navbar navbar-with-menu navbar-shadow\",\n          {\n            \"navbar-light\": props.navbarColor === \"default\" || !colorsArr.includes(props.navbarColor),\n            \"navbar-dark\": colorsArr.includes(props.navbarColor),\n            \"bg-primary\":\n              props.navbarColor === \"primary\" && props.navbarType !== \"static\",\n            \"bg-danger\":\n              props.navbarColor === \"danger\" && props.navbarType !== \"static\",\n            \"bg-success\":\n              props.navbarColor === \"success\" && props.navbarType !== \"static\",\n            \"bg-info\":\n              props.navbarColor === \"info\" && props.navbarType !== \"static\",\n            \"bg-warning\":\n              props.navbarColor === \"warning\" && props.navbarType !== \"static\",\n            \"bg-dark\":\n              props.navbarColor === \"dark\" && props.navbarType !== \"static\",\n            \"d-none\": props.navbarType === \"hidden\" && !props.horizontal,\n            \"floating-nav\":\n              (props.navbarType === \"floating\" && !props.horizontal) || (!navbarTypes.includes(props.navbarType) && !props.horizontal),\n            \"navbar-static-top\":\n              props.navbarType === \"static\" && !props.horizontal,\n            \"fixed-top\": props.navbarType === \"sticky\" || props.horizontal,\n            \"scrolling\": props.horizontal && props.scrolling\n\n          }\n        )}\n      >\n        <div className=\"navbar-wrapper\">\n          <div className=\"navbar-container content\">\n            <div\n              className=\"navbar-collapse d-flex justify-content-between align-items-center\"\n              id=\"navbar-mobile\"\n            >\n              <div className=\"bookmark-wrapper\">\n                <NavbarBookmarks\n                  sidebarVisibility={props.sidebarVisibility}\n                  handleAppOverlay={props.handleAppOverlay}\n                />\n              </div>\n              {props.horizontal ? (\n                <div className=\"logo d-flex align-items-center\">\n                  <div className=\"brand-logo mr-50\"></div>\n                  <h2 className=\"text-primary brand-text mb-0\">Vuexy - BCourt</h2>\n                </div>\n              ) : null}\n              <NavbarUser\n                handleAppOverlay={props.handleAppOverlay}\n                changeCurrentLang={props.changeCurrentLang}\n                userName={<UserName userdata={user} {...props} />}\n                userImg={\n                  props.user.login.values !== undefined &&\n                  props.user.login.values.loggedInWith !== \"jwt\" &&\n                  props.user.login.values.photoUrl\n                    ? props.user.login.values.photoUrl \n                    : user !== undefined && user.picture ? user.picture\n                    : userImg\n                }\n                loggedInWith={\n                  props.user !== undefined &&\n                  props.user.login.values !== undefined\n                    ? props.user.login.values.loggedInWith\n                    : null\n                }\n                logoutWithJWT={props.logoutWithJWT}\n                logoutWithFirebase={props.logoutWithFirebase}\n                logoutWithCustom={props.logoutWithCustom}\n              />\n            </div>\n          </div>\n        </div>\n      </Navbar>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth\n  }\n}\n\nexport default connect(mapStateToProps, {\n  logoutWithJWT,\n  logoutWithFirebase,\n  logoutWithCustom,\n  useAuth0\n})(ThemeNavbar)\n"]},"metadata":{},"sourceType":"module"}