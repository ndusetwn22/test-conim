{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\rombak-react-vuexy\\\\src\\\\views\\\\apps\\\\chat\\\\ChatSidebar.js\";\nimport React from \"react\";\nimport { Card, FormGroup, Input, Badge } from \"reactstrap\";\nimport { X, Search } from \"react-feather\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { connect } from \"react-redux\";\nimport { getChats, getContactChats, searchContacts, markSeenAllMessages } from \"../../../redux/actions/chat/index\";\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\";\n\nclass ChatSidebar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chatsContacts: [],\n      contacts: [],\n      messages: [],\n      status: null,\n      value: \"\"\n    };\n\n    this.getChatContents = () => {\n      this.props.getChats();\n      this.props.getContactChats();\n    };\n\n    this.handleOnChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n      this.props.searchContacts(e.target.value);\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.chat.chatContacts.length !== state.chatContacts || props.chat.contacts.length !== state.contacts || props.chat.chats.length !== state.chats || props.chat.status !== state.status) {\n      return {\n        chatsContacts: props.chat.chatContacts,\n        contacts: props.chat.contacts,\n        chats: props.chat.chats,\n        status: props.chat.status\n      };\n    } // Return null if the state hasn't changed\n\n\n    return null;\n  }\n\n  async componentDidMount() {\n    await this.getChatContents();\n    this.setState({\n      chatsContacts: this.props.chat.chatContacts,\n      contacts: this.props.chat.contacts,\n      chats: this.props.chat.chats,\n      status: this.props.chat.status\n    });\n  }\n\n  render() {\n    const {\n      contacts,\n      chatsContacts,\n      chats,\n      status,\n      value\n    } = this.state;\n    const contactsArr = value.length ? this.props.chat.filteredContacts : contacts;\n    const chatsArr = value.length ? this.props.chat.filteredChats : chatsContacts;\n    let renderContacts = contactsArr.length > 0 ? contactsArr.map(contact => /*#__PURE__*/React.createElement(\"li\", {\n      key: contact.uid,\n      onClick: () => {\n        this.props.handleActiveChat(contact.uid, contact, chats[contact.uid]);\n        this.props.markSeenAllMessages(contact.uid);\n        this.props.mainSidebar(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"avatar avatar-md m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: contact.photoURL,\n      alt: contact.displayName,\n      height: \"38\",\n      width: \"38\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-chat-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"text-bold-600 mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, contact.displayName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"truncate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, contact.about))))) : null;\n    let renderChats = chatsArr && Array.isArray(chatsArr) ? chatsArr.map(chat => {\n      let lastMsg = chats[chat.uid] && chats[chat.uid].msg ? chats[chat.uid].msg.slice(-1)[0] : null,\n          lastMsgDate = new Date(lastMsg && lastMsg.time ? lastMsg.time : null),\n          lastMsgMonth = lastMsgDate.toLocaleString(\"default\", {\n        month: \"short\"\n      }),\n          lastMsgDay = lastMsgDate.getDate();\n      let pendingMsg = chats[chat.uid] && chats[chat.uid].msg ? chats[chat.uid].msg.filter(i => i.isSeen === false && i.isSent !== true).length : null;\n      let activeID = chats[chat.uid] !== undefined ? chats[chat.uid] : null;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: chat.uid,\n        onClick: () => {\n          this.props.handleActiveChat(chat.uid, chat, activeID);\n          this.props.mainSidebar(false);\n          this.props.markSeenAllMessages(chat.uid);\n        },\n        className: `${this.props.activeChatID === chat.uid ? \"active\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"avatar avatar-md m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: chat.photoURL,\n        alt: chat.displayName,\n        height: \"38\",\n        width: \"38\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-chat-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contact-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"text-bold-600 mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, chat.displayName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"truncate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }, lastMsg ? lastMsg.textContent : chat.about)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contact-meta d-flex- flex-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right mb-25\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }, lastMsgMonth + \" \" + lastMsgDay), pendingMsg > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"unseen-msg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Badge, {\n        className: \"badge-md float-right\",\n        color: \"primary\",\n        pill: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, pendingMsg)) : null)));\n    }) : null;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"sidebar-content h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sidebar-close-icon\",\n      onClick: () => this.props.mainSidebar(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(X, {\n      size: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-fixed-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-profile-toggle position-relative d-inline-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"avatar\",\n      onClick: () => this.props.handleUserSidebar(\"open\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: userImg,\n      alt: \"User Profile\",\n      height: \"40\",\n      width: \"40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: status === \"dnd\" ? \"avatar-status-busy\" : status === \"away\" ? \"avatar-status-away\" : status === \"offline\" ? \"avatar-status-offline\" : \"avatar-status-online\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"position-relative has-icon-left mx-1 my-0 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"round\",\n      type: \"text\",\n      placeholder: \"Search contact or start a new chat\",\n      onChange: e => this.handleOnChange(e),\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control-position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      size: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      className: \"chat-user-list list-group\",\n      options: {\n        wheelPropagation: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"primary p-1 mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, \"Chats\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"chat-users-list-wrapper media-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, renderChats), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"primary p-1 mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }, \"Contacts\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"chat-users-list-wrapper media-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, renderContacts)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages\n})(ChatSidebar);","map":{"version":3,"sources":["E:/react/rombak-react-vuexy/src/views/apps/chat/ChatSidebar.js"],"names":["React","Card","FormGroup","Input","Badge","X","Search","PerfectScrollbar","connect","getChats","getContactChats","searchContacts","markSeenAllMessages","userImg","ChatSidebar","Component","state","chatsContacts","contacts","messages","status","value","getChatContents","props","handleOnChange","e","setState","target","getDerivedStateFromProps","chat","chatContacts","length","chats","componentDidMount","render","contactsArr","filteredContacts","chatsArr","filteredChats","renderContacts","map","contact","uid","handleActiveChat","mainSidebar","photoURL","displayName","about","renderChats","Array","isArray","lastMsg","msg","slice","lastMsgDate","Date","time","lastMsgMonth","toLocaleString","month","lastMsgDay","getDate","pendingMsg","filter","i","isSeen","isSent","activeID","undefined","activeChatID","textContent","handleUserSidebar","wheelPropagation","mapStateToProps","chatApp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,KAAjC,QAA8C,YAA9C;AACA,SAASC,CAAT,EAAYC,MAAZ,QAA0B,eAA1B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,QADF,EAEEC,eAFF,EAGEC,cAHF,EAIEC,mBAJF,QAKO,mCALP;AAMA,OAAOC,OAAP,MAAoB,oDAApB;;AAEA,MAAMC,WAAN,SAA0Bd,KAAK,CAACe,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAkBxCC,KAlBwC,GAkBhC;AACNC,MAAAA,aAAa,EAAE,EADT;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,MAAM,EAAE,IAJF;AAKNC,MAAAA,KAAK,EAAE;AALD,KAlBgC;;AAAA,SA0BxCC,eA1BwC,GA0BtB,MAAM;AACtB,WAAKC,KAAL,CAAWd,QAAX;AACA,WAAKc,KAAL,CAAWb,eAAX;AACD,KA7BuC;;AAAA,SAyCxCc,cAzCwC,GAyCvBC,CAAC,IAAI;AACpB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEI,CAAC,CAACE,MAAF,CAASN;AAAlB,OAAd;AACA,WAAKE,KAAL,CAAWZ,cAAX,CAA0Bc,CAAC,CAACE,MAAF,CAASN,KAAnC;AACD,KA5CuC;AAAA;;AACxC,SAAOO,wBAAP,CAAgCL,KAAhC,EAAuCP,KAAvC,EAA8C;AAC5C,QACEO,KAAK,CAACM,IAAN,CAAWC,YAAX,CAAwBC,MAAxB,KAAmCf,KAAK,CAACc,YAAzC,IACAP,KAAK,CAACM,IAAN,CAAWX,QAAX,CAAoBa,MAApB,KAA+Bf,KAAK,CAACE,QADrC,IAEAK,KAAK,CAACM,IAAN,CAAWG,KAAX,CAAiBD,MAAjB,KAA4Bf,KAAK,CAACgB,KAFlC,IAGAT,KAAK,CAACM,IAAN,CAAWT,MAAX,KAAsBJ,KAAK,CAACI,MAJ9B,EAKE;AACA,aAAO;AACLH,QAAAA,aAAa,EAAEM,KAAK,CAACM,IAAN,CAAWC,YADrB;AAELZ,QAAAA,QAAQ,EAAEK,KAAK,CAACM,IAAN,CAAWX,QAFhB;AAGLc,QAAAA,KAAK,EAAET,KAAK,CAACM,IAAN,CAAWG,KAHb;AAILZ,QAAAA,MAAM,EAAEG,KAAK,CAACM,IAAN,CAAWT;AAJd,OAAP;AAMD,KAb2C,CAc5C;;;AACA,WAAO,IAAP;AACD;;AAcD,QAAMa,iBAAN,GAA0B;AACxB,UAAM,KAAKX,eAAL,EAAN;AACA,SAAKI,QAAL,CAAc;AACZT,MAAAA,aAAa,EAAE,KAAKM,KAAL,CAAWM,IAAX,CAAgBC,YADnB;AAEZZ,MAAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWM,IAAX,CAAgBX,QAFd;AAGZc,MAAAA,KAAK,EAAE,KAAKT,KAAL,CAAWM,IAAX,CAAgBG,KAHX;AAIZZ,MAAAA,MAAM,EAAE,KAAKG,KAAL,CAAWM,IAAX,CAAgBT;AAJZ,KAAd;AAMD;;AAODc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,QAAF;AAAYD,MAAAA,aAAZ;AAA2Be,MAAAA,KAA3B;AAAkCZ,MAAAA,MAAlC;AAA0CC,MAAAA;AAA1C,QAAoD,KAAKL,KAA/D;AACA,UAAMmB,WAAW,GAAGd,KAAK,CAACU,MAAN,GAChB,KAAKR,KAAL,CAAWM,IAAX,CAAgBO,gBADA,GAEhBlB,QAFJ;AAGA,UAAMmB,QAAQ,GAAGhB,KAAK,CAACU,MAAN,GACb,KAAKR,KAAL,CAAWM,IAAX,CAAgBS,aADH,GAEbrB,aAFJ;AAGA,QAAIsB,cAAc,GAChBJ,WAAW,CAACJ,MAAZ,GAAqB,CAArB,GACII,WAAW,CAACK,GAAZ,CAAgBC,OAAO,iBACrB;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,GADf;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKnB,KAAL,CAAWoB,gBAAX,CACEF,OAAO,CAACC,GADV,EAEED,OAFF,EAGET,KAAK,CAACS,OAAO,CAACC,GAAT,CAHP;AAKA,aAAKnB,KAAL,CAAWX,mBAAX,CAA+B6B,OAAO,CAACC,GAAvC;AACA,aAAKnB,KAAL,CAAWqB,WAAX,CAAuB,KAAvB;AACD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAEH,OAAO,CAACI,QADf;AAEE,MAAA,GAAG,EAAEJ,OAAO,CAACK,WAFf;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,KAAK,EAAC,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAZF,eAsBE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCL,OAAO,CAACK,WAA5C,CADF,eAEE;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBL,OAAO,CAACM,KAAjC,CAFF,CADF,CAtBF,CADF,CADJ,GAgCI,IAjCN;AAkCA,QAAIC,WAAW,GACbX,QAAQ,IAAIY,KAAK,CAACC,OAAN,CAAcb,QAAd,CAAZ,GACIA,QAAQ,CAACG,GAAT,CAAaX,IAAI,IAAI;AACnB,UAAIsB,OAAO,GACPnB,KAAK,CAACH,IAAI,CAACa,GAAN,CAAL,IAAmBV,KAAK,CAACH,IAAI,CAACa,GAAN,CAAL,CAAgBU,GAAnC,GACIpB,KAAK,CAACH,IAAI,CAACa,GAAN,CAAL,CAAgBU,GAAhB,CAAoBC,KAApB,CAA0B,CAAC,CAA3B,EAA8B,CAA9B,CADJ,GAEI,IAHR;AAAA,UAIEC,WAAW,GAAG,IAAIC,IAAJ,CACZJ,OAAO,IAAIA,OAAO,CAACK,IAAnB,GAA0BL,OAAO,CAACK,IAAlC,GAAyC,IAD7B,CAJhB;AAAA,UAOEC,YAAY,GAAGH,WAAW,CAACI,cAAZ,CAA2B,SAA3B,EAAsC;AACnDC,QAAAA,KAAK,EAAE;AAD4C,OAAtC,CAPjB;AAAA,UAUEC,UAAU,GAAGN,WAAW,CAACO,OAAZ,EAVf;AAWA,UAAIC,UAAU,GACZ9B,KAAK,CAACH,IAAI,CAACa,GAAN,CAAL,IAAmBV,KAAK,CAACH,IAAI,CAACa,GAAN,CAAL,CAAgBU,GAAnC,GACIpB,KAAK,CAACH,IAAI,CAACa,GAAN,CAAL,CAAgBU,GAAhB,CAAoBW,MAApB,CACEC,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAa,KAAb,IAAsBD,CAAC,CAACE,MAAF,KAAa,IAD1C,EAEEnC,MAHN,GAII,IALN;AAMA,UAAIoC,QAAQ,GACVnC,KAAK,CAACH,IAAI,CAACa,GAAN,CAAL,KAAoB0B,SAApB,GAAgCpC,KAAK,CAACH,IAAI,CAACa,GAAN,CAArC,GAAkD,IADpD;AAEA,0BACE;AACE,QAAA,GAAG,EAAEb,IAAI,CAACa,GADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKnB,KAAL,CAAWoB,gBAAX,CAA4Bd,IAAI,CAACa,GAAjC,EAAsCb,IAAtC,EAA4CsC,QAA5C;AACA,eAAK5C,KAAL,CAAWqB,WAAX,CAAuB,KAAvB;AACA,eAAKrB,KAAL,CAAWX,mBAAX,CAA+BiB,IAAI,CAACa,GAApC;AACD,SANH;AAOE,QAAA,SAAS,EAAG,GACV,KAAKnB,KAAL,CAAW8C,YAAX,KAA4BxC,IAAI,CAACa,GAAjC,GAAuC,QAAvC,GAAkD,EACnD,EATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAWE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,GAAG,EAAEb,IAAI,CAACgB,QADZ;AAEE,QAAA,GAAG,EAAEhB,IAAI,CAACiB,WAFZ;AAGE,QAAA,MAAM,EAAC,IAHT;AAIE,QAAA,KAAK,EAAC,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAXF,eAqBE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCjB,IAAI,CAACiB,WAAzC,CADF,eAEE;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGK,OAAO,GAAGA,OAAO,CAACmB,WAAX,GAAyBzC,IAAI,CAACkB,KADxC,CAFF,CADF,eAOE;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGU,YAAY,GAAG,GAAf,GAAqBG,UADxB,CADF,EAIGE,UAAU,GAAG,CAAb,gBACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,sBADZ;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,IAAI,MAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,UALH,CADF,CADD,GAUG,IAdN,CAPF,CArBF,CADF;AAgDD,KApED,CADJ,GAsEI,IAvEN;AAwEA,wBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKvC,KAAL,CAAWqB,WAAX,CAAuB,KAAvB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,CAAD;AAAG,MAAA,IAAI,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,eAOE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,wDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKrB,KAAL,CAAWgD,iBAAX,CAA6B,MAA7B,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAK,MAAA,GAAG,EAAE1D,OAAV;AAAmB,MAAA,GAAG,EAAC,cAAvB;AAAsC,MAAA,MAAM,EAAC,IAA7C;AAAkD,MAAA,KAAK,EAAC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AACE,MAAA,SAAS,EACPO,MAAM,KAAK,KAAX,GACI,oBADJ,GAEIA,MAAM,KAAK,MAAX,GACA,oBADA,GAEAA,MAAM,KAAK,SAAX,GACA,uBADA,GAEA,sBARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF,eAoBE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iDAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,oCAHd;AAIE,MAAA,QAAQ,EAAEK,CAAC,IAAI,KAAKD,cAAL,CAAoBC,CAApB,CAJjB;AAKE,MAAA,KAAK,EAAEJ,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CApBF,CADF,CAPF,eA0CE,oBAAC,gBAAD;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,OAAO,EAAE;AACPmD,QAAAA,gBAAgB,EAAE;AADX,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eAOE;AAAI,MAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDxB,WAApD,CAPF,eAQE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAI,MAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,cADH,CATF,CA1CF,CADF;AA0DD;;AA1NuC;;AA6N1C,MAAMkC,eAAe,GAAGzD,KAAK,IAAI;AAC/B,SAAO;AACLa,IAAAA,IAAI,EAAEb,KAAK,CAAC0D,OAAN,CAAc1C;AADf,GAAP;AAGD,CAJD;;AAKA,eAAexB,OAAO,CAACiE,eAAD,EAAkB;AACtChE,EAAAA,QADsC;AAEtCC,EAAAA,eAFsC;AAGtCC,EAAAA,cAHsC;AAItCC,EAAAA;AAJsC,CAAlB,CAAP,CAKZE,WALY,CAAf","sourcesContent":["import React from \"react\"\nimport { Card, FormGroup, Input, Badge } from \"reactstrap\"\nimport { X, Search } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages\n} from \"../../../redux/actions/chat/index\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\n\nclass ChatSidebar extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.chat.chatContacts.length !== state.chatContacts ||\n      props.chat.contacts.length !== state.contacts ||\n      props.chat.chats.length !== state.chats ||\n      props.chat.status !== state.status\n    ) {\n      return {\n        chatsContacts: props.chat.chatContacts,\n        contacts: props.chat.contacts,\n        chats: props.chat.chats,\n        status: props.chat.status\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    chatsContacts: [],\n    contacts: [],\n    messages: [],\n    status: null,\n    value: \"\"\n  }\n\n  getChatContents = () => {\n    this.props.getChats()\n    this.props.getContactChats()\n  }\n\n  async componentDidMount() {\n    await this.getChatContents()\n    this.setState({\n      chatsContacts: this.props.chat.chatContacts,\n      contacts: this.props.chat.contacts,\n      chats: this.props.chat.chats,\n      status: this.props.chat.status\n    })\n  }\n\n  handleOnChange = e => {\n    this.setState({ value: e.target.value })\n    this.props.searchContacts(e.target.value)\n  }\n\n  render() {\n    const { contacts, chatsContacts, chats, status, value } = this.state\n    const contactsArr = value.length\n      ? this.props.chat.filteredContacts\n      : contacts\n    const chatsArr = value.length\n      ? this.props.chat.filteredChats\n      : chatsContacts\n    let renderContacts =\n      contactsArr.length > 0\n        ? contactsArr.map(contact => (\n            <li\n              key={contact.uid}\n              onClick={() => {\n                this.props.handleActiveChat(\n                  contact.uid,\n                  contact,\n                  chats[contact.uid]\n                )\n                this.props.markSeenAllMessages(contact.uid)\n                this.props.mainSidebar(false)\n              }}\n            >\n              <div className=\"pr-1\">\n                <span className=\"avatar avatar-md m-0\">\n                  <img\n                    src={contact.photoURL}\n                    alt={contact.displayName}\n                    height=\"38\"\n                    width=\"38\"\n                  />\n                </span>\n              </div>\n              <div className=\"user-chat-info\">\n                <div className=\"contact-info\">\n                  <h5 className=\"text-bold-600 mb-0\">{contact.displayName}</h5>\n                  <p className=\"truncate\">{contact.about}</p>\n                </div>\n              </div>\n            </li>\n          ))\n        : null\n    let renderChats =\n      chatsArr && Array.isArray(chatsArr)\n        ? chatsArr.map(chat => {\n            let lastMsg =\n                chats[chat.uid] && chats[chat.uid].msg\n                  ? chats[chat.uid].msg.slice(-1)[0]\n                  : null,\n              lastMsgDate = new Date(\n                lastMsg && lastMsg.time ? lastMsg.time : null\n              ),\n              lastMsgMonth = lastMsgDate.toLocaleString(\"default\", {\n                month: \"short\"\n              }),\n              lastMsgDay = lastMsgDate.getDate()\n            let pendingMsg =\n              chats[chat.uid] && chats[chat.uid].msg\n                ? chats[chat.uid].msg.filter(\n                    i => i.isSeen === false && i.isSent !== true\n                  ).length\n                : null\n            let activeID =\n              chats[chat.uid] !== undefined ? chats[chat.uid] : null\n            return (\n              <li\n                key={chat.uid}\n                onClick={() => {\n                  this.props.handleActiveChat(chat.uid, chat, activeID)\n                  this.props.mainSidebar(false)\n                  this.props.markSeenAllMessages(chat.uid)\n                }}\n                className={`${\n                  this.props.activeChatID === chat.uid ? \"active\" : \"\"\n                }`}\n              >\n                <div className=\"pr-1\">\n                  <span className=\"avatar avatar-md m-0\">\n                    <img\n                      src={chat.photoURL}\n                      alt={chat.displayName}\n                      height=\"38\"\n                      width=\"38\"\n                    />\n                  </span>\n                </div>\n                <div className=\"user-chat-info\">\n                  <div className=\"contact-info\">\n                    <h5 className=\"text-bold-600 mb-0\">{chat.displayName}</h5>\n                    <p className=\"truncate\">\n                      {lastMsg ? lastMsg.textContent : chat.about}\n                    </p>\n                  </div>\n                  <div className=\"contact-meta d-flex- flex-column\">\n                    <span className=\"float-right mb-25\">\n                      {lastMsgMonth + \" \" + lastMsgDay}\n                    </span>\n                    {pendingMsg > 0 ? (\n                      <div className=\"unseen-msg\">\n                        <Badge\n                          className=\"badge-md float-right\"\n                          color=\"primary\"\n                          pill\n                        >\n                          {pendingMsg}\n                        </Badge>\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n              </li>\n            )\n          })\n        : null\n    return (\n      <Card className=\"sidebar-content h-100\">\n        <span\n          className=\"sidebar-close-icon\"\n          onClick={() => this.props.mainSidebar(false)}\n        >\n          <X size={15} />\n        </span>\n        <div className=\"chat-fixed-search\">\n          <div className=\"d-flex align-items-center\">\n            <div className=\"sidebar-profile-toggle position-relative d-inline-flex\">\n              <div\n                className=\"avatar\"\n                onClick={() => this.props.handleUserSidebar(\"open\")}\n              >\n                <img src={userImg} alt=\"User Profile\" height=\"40\" width=\"40\" />\n                <span\n                  className={\n                    status === \"dnd\"\n                      ? \"avatar-status-busy\"\n                      : status === \"away\"\n                      ? \"avatar-status-away\"\n                      : status === \"offline\"\n                      ? \"avatar-status-offline\"\n                      : \"avatar-status-online\"\n                  }\n                />\n              </div>\n            </div>\n            <FormGroup className=\"position-relative has-icon-left mx-1 my-0 w-100\">\n              <Input\n                className=\"round\"\n                type=\"text\"\n                placeholder=\"Search contact or start a new chat\"\n                onChange={e => this.handleOnChange(e)}\n                value={value}\n              />\n              <div className=\"form-control-position\">\n                <Search size={15} />\n              </div>\n            </FormGroup>\n          </div>\n        </div>\n        <PerfectScrollbar\n          className=\"chat-user-list list-group\"\n          options={{\n            wheelPropagation: false\n          }}\n        >\n          <h3 className=\"primary p-1 mb-0\">Chats</h3>\n          <ul className=\"chat-users-list-wrapper media-list\">{renderChats}</ul>\n          <h3 className=\"primary p-1 mb-0\">Contacts</h3>\n          <ul className=\"chat-users-list-wrapper media-list\">\n            {renderContacts}\n          </ul>\n        </PerfectScrollbar>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages\n})(ChatSidebar)\n"]},"metadata":{},"sourceType":"module"}