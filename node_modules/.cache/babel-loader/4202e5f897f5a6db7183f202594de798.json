{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\rombak-react-vuexy\\\\src\\\\views\\\\employees\\\\EmployeesAdd.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody, FormGroup, Row, Col, Input, Form, Button, Label, Alert } from \"reactstrap\";\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\";\nimport { Check, User, Mail, Smartphone, Lock } from \"react-feather\";\n\nconst sweetAlert = props => {\n  return /*#__PURE__*/React.createElement(SweetAlert, {\n    warning: true,\n    title: props.title,\n    show: props.warningAlert,\n    onConfirm: () => props.handleAlert(\"isSweetAlert\", false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, props.text));\n};\n\nclass EmployeesAdd extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitForm = async () => {\n      var title = '';\n      var text = '';\n      var type = '';\n      console.log('SUBMIT : ', this.state.first_name);\n      console.log('SUBMIT : ', this.state.last_name); // console.log('event : ', e)\n\n      if (this.state.first_name == '' || this.state.first_name == null) {\n        return await this.handleAlert('isSweetAlert', true, 'Warning', 'Nama Awalan Tidak Boleh Kosong', 'warning');\n      }\n\n      if (this.state.last_name == '' || this.state.last_name == null) {\n        return await this.handleAlert('isSweetAlert', true, 'Warning', 'Nama Akhiran Tidak Boleh Kosong', 'warning');\n      } else {\n        let sql = `\n            insert into employees_new(first_name, last_name)\n            value('` + this.state.first_name + `', '` + this.state.last_name + `')\n        `;\n        var result = await axios.post(api_query, {\n          query: sql\n        }).then(result => {\n          let res = result.data.response;\n          console.log('result : ', result);\n\n          if (res.length == '') {\n            return [];\n          } // console.log('result : ', (result.data))\n\n\n          return res;\n        }).catch(err => {\n          console.log('error : ', err);\n          return [];\n        });\n        console.log('result query : ', result); // return await this.handleAlert('isSweetAlert', true, 'Success', 'Data Berhasil Ditambahkan '+this.state.first_name+ \" \"+ this.state.last_name, 'success')\n      }\n    };\n\n    this.handleAlert = (state, value, title, text, type) => {\n      if (value) {\n        this.setState({\n          [state]: value\n        });\n        this.setState({\n          sweetAlertTitle: title,\n          sweetAlertText: text,\n          sweetAlertType: type\n        });\n      } else {\n        this.setState({\n          [state]: value\n        });\n      }\n    };\n\n    this.state = {\n      first_name: '',\n      last_name: '',\n      isSweetAlert: false,\n      sweetAlertTitle: 'Judul',\n      sweetAlertText: 'Text',\n      sweetAlertType: 'warning'\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <React.Fragment>\n      //     <Breadcrumbs\n      //     breadCrumbTitle=\"Form Layouts\"\n      //     breadCrumbParent=\"Form\"\n      //     breadCrumbActive=\"Form Layouts\"\n      //     />\n      //     <Row>\n      //         <Col lg=\"6\" md=\"12\">\n      //             <Card>\n      //                 <CardHeader>\n      //                 <CardTitle>Vertical Form Icons</CardTitle>\n      //                 </CardHeader>\n      //                 <CardBody>\n      //                 <Form>\n      //                     <Row>\n      //                     <Col sm=\"12\">\n      //                         <Label for=\"nameVerticalIcons\">First Name</Label>\n      //                         <FormGroup className=\"has-icon-left position-relative\">\n      //                         <Input\n      //                             type=\"text\"\n      //                             name=\"name\"\n      //                             id=\"nameVerticalIcons\"\n      //                             placeholder=\"First Name\"\n      //                         />\n      //                         <div className=\"form-control-position\">\n      //                             <User size={15} />\n      //                         </div>\n      //                         </FormGroup>\n      //                     </Col>\n      //                     <Col sm=\"12\">\n      //                         <Label for=\"EmailVerticalIcons\">Email</Label>\n      //                         <FormGroup className=\"has-icon-left position-relative\">\n      //                         <Input\n      //                             type=\"email\"\n      //                             name=\"Email\"\n      //                             id=\"EmailVerticalIcons\"\n      //                             placeholder=\"Email\"\n      //                         />\n      //                         <div className=\"form-control-position\">\n      //                             <Mail size={15} />\n      //                         </div>\n      //                         </FormGroup>\n      //                     </Col>\n      //                     <Col sm=\"12\">\n      //                         <Label for=\"IconsMobile\">Mobile</Label>\n      //                         <FormGroup className=\"has-icon-left position-relative\">\n      //                         <Input\n      //                             type=\"number\"\n      //                             name=\"mobile\"\n      //                             id=\"IconsMobile\"\n      //                             placeholder=\"Mobile\"\n      //                         />\n      //                         <div className=\"form-control-position\">\n      //                             <Smartphone size={15} />\n      //                         </div>\n      //                         </FormGroup>\n      //                     </Col>\n      //                     <Col sm=\"12\">\n      //                         <Label for=\"IconsPassword\">Password</Label>\n      //                         <FormGroup className=\"has-icon-left position-relative\">\n      //                         <Input\n      //                             type=\"password\"\n      //                             name=\"password\"\n      //                             id=\"IconsPassword\"\n      //                             placeholder=\"Password\"\n      //                         />\n      //                         <div className=\"form-control-position\">\n      //                             <Lock size={15} />\n      //                         </div>\n      //                         </FormGroup>\n      //                     </Col>\n      //                     <Col sm=\"12\">\n      //                         <FormGroup className=\"has-icon-left position-relative\">\n      //                         <Checkbox\n      //                             color=\"primary\"\n      //                             icon={<Check className=\"vx-icon\" size={16} />}\n      //                             label=\"Remember Me\"\n      //                             defaultChecked={false}\n      //                         />\n      //                         </FormGroup>\n      //                     </Col>\n      //                     <Col sm=\"12\">\n      //                         <FormGroup className=\"has-icon-left position-relative\">\n      //                         <Button.Ripple\n      //                             color=\"primary\"\n      //                             type=\"submit\"\n      //                             className=\"mr-1 mb-1\"\n      //                             onClick={e => e.preventDefault()}\n      //                         >\n      //                             Submit\n      //                         </Button.Ripple>\n      //                         <Button.Ripple\n      //                             outline\n      //                             color=\"warning\"\n      //                             type=\"reset\"\n      //                             className=\"mb-1\"\n      //                         >\n      //                             Reset\n      //                         </Button.Ripple>\n      //                         </FormGroup>\n      //                     </Col>\n      //                     </Row>\n      //                 </Form>\n      //                 </CardBody>\n      //             </Card>\n      //         </Col>\n      //     </Row>\n      // </React.Fragment>\n      React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, \"Tambah Karyawan\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"nameVerticalIcons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"has-icon-left position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"first_name\",\n        id: \"nameVerticalIcons\",\n        placeholder: \"First Name\",\n        onChange: val => this.setState({\n          first_name: val.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-control-position\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(User, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"LastNameVI\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"has-icon-left position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"last_name\",\n        id: \"LastNameVI\",\n        placeholder: \"Last Name\",\n        onChange: val => this.setState({\n          last_name: val.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-control-position\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Mail, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"has-icon-left position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        color: \"primary\",\n        icon: /*#__PURE__*/React.createElement(Check, {\n          className: \"vx-icon\",\n          size: 16,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 27\n          }\n        }),\n        label: \"Remember Me\",\n        defaultChecked: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"has-icon-left position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button.Ripple, {\n        color: \"primary\",\n        className: \"mr-1 mb-1\",\n        onClick: () => this.submitForm() // onClick={e => e.preventDefault()}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 19\n        }\n      }, \"Submit\"), /*#__PURE__*/React.createElement(Button.Ripple, {\n        outline: true,\n        color: \"warning\",\n        type: \"reset\",\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 19\n        }\n      }, \"Reset\"))))))), /*#__PURE__*/React.createElement(SweetAlert, {\n        type: this.state.sweetAlertType,\n        title: this.state.sweetAlertTitle,\n        show: this.state.isSweetAlert,\n        onConfirm: () => this.handleAlert(\"isSweetAlert\", false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"sweet-alert-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }\n      }, this.state.sweetAlertText)))\n    );\n  }\n\n}\n\nexport default EmployeesAdd;","map":{"version":3,"sources":["E:/react/rombak-react-vuexy/src/views/employees/EmployeesAdd.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","FormGroup","Row","Col","Input","Form","Button","Label","Alert","SweetAlert","Checkbox","Check","User","Mail","Smartphone","Lock","sweetAlert","props","title","warningAlert","handleAlert","className","text","EmployeesAdd","Component","constructor","submitForm","type","console","log","state","first_name","last_name","sql","result","axios","post","api_query","query","then","res","data","response","length","catch","err","value","setState","sweetAlertTitle","sweetAlertText","sweetAlertType","isSweetAlert","render","val","target"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Label,\r\n  Alert\r\n} from \"reactstrap\"\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nimport { Check, User, Mail, Smartphone, Lock } from \"react-feather\"\r\n\r\nconst sweetAlert = (props) => {\r\n    return (\r\n        <SweetAlert warning title={props.title}\r\n          show={props.warningAlert} \r\n          onConfirm={() => props.handleAlert(\"isSweetAlert\", false)}\r\n        >\r\n            <p className={props.className}>\r\n              {props.text}\r\n            </p>\r\n        </SweetAlert>\r\n    )\r\n}\r\n\r\nclass EmployeesAdd extends React.Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        first_name: '',\r\n        last_name: '',\r\n        isSweetAlert: false,\r\n        sweetAlertTitle: 'Judul',\r\n        sweetAlertText: 'Text',\r\n        sweetAlertType: 'warning'\r\n        \r\n      }\r\n  }\r\n\r\n  submitForm = async() =>{\r\n\r\n    var title = ''\r\n    var text = ''\r\n    var type = ''\r\n    console.log('SUBMIT : ', this.state.first_name)\r\n    console.log('SUBMIT : ', this.state.last_name)\r\n    // console.log('event : ', e)\r\n\r\n\r\n    if (this.state.first_name == '' || this.state.first_name == null) {return await this.handleAlert('isSweetAlert', true, 'Warning', 'Nama Awalan Tidak Boleh Kosong', 'warning')}\r\n    if (this.state.last_name == '' || this.state.last_name == null) {return await this.handleAlert('isSweetAlert', true, 'Warning', 'Nama Akhiran Tidak Boleh Kosong', 'warning')}\r\n    else {\r\n        let sql = `\r\n            insert into employees_new(first_name, last_name)\r\n            value('`+this.state.first_name+`', '`+this.state.last_name+`')\r\n        `\r\n        var result = await axios.post(api_query, {\r\n                                    query : sql\r\n                                })\r\n                                    .then(result => {\r\n                                    let res = result.data.response\r\n                                    console.log('result : ', result)\r\n                                    if (res.length == '') {\r\n                                        return []\r\n                                    }\r\n                                    // console.log('result : ', (result.data))\r\n                                    return res;\r\n                                }).catch(err => {\r\n                                    console.log('error : ', err)\r\n                                    return []\r\n                                })\r\n        \r\n        console.log('result query : ', result)\r\n        // return await this.handleAlert('isSweetAlert', true, 'Success', 'Data Berhasil Ditambahkan '+this.state.first_name+ \" \"+ this.state.last_name, 'success')\r\n    }\r\n\r\n  }\r\n\r\n  handleAlert = (state, value, title, text, type) => {\r\n      if (value) {\r\n        this.setState({ [state] : value })\r\n        this.setState({sweetAlertTitle: title, sweetAlertText: text, sweetAlertType: type});\r\n      }else{\r\n        this.setState({ [state] : value })\r\n      }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n\r\n        // <React.Fragment>\r\n        //     <Breadcrumbs\r\n        //     breadCrumbTitle=\"Form Layouts\"\r\n        //     breadCrumbParent=\"Form\"\r\n        //     breadCrumbActive=\"Form Layouts\"\r\n        //     />\r\n        //     <Row>\r\n        //         <Col lg=\"6\" md=\"12\">\r\n        //             <Card>\r\n        //                 <CardHeader>\r\n        //                 <CardTitle>Vertical Form Icons</CardTitle>\r\n        //                 </CardHeader>\r\n        //                 <CardBody>\r\n        //                 <Form>\r\n        //                     <Row>\r\n        //                     <Col sm=\"12\">\r\n        //                         <Label for=\"nameVerticalIcons\">First Name</Label>\r\n        //                         <FormGroup className=\"has-icon-left position-relative\">\r\n        //                         <Input\r\n        //                             type=\"text\"\r\n        //                             name=\"name\"\r\n        //                             id=\"nameVerticalIcons\"\r\n        //                             placeholder=\"First Name\"\r\n        //                         />\r\n        //                         <div className=\"form-control-position\">\r\n        //                             <User size={15} />\r\n        //                         </div>\r\n        //                         </FormGroup>\r\n        //                     </Col>\r\n        //                     <Col sm=\"12\">\r\n        //                         <Label for=\"EmailVerticalIcons\">Email</Label>\r\n        //                         <FormGroup className=\"has-icon-left position-relative\">\r\n        //                         <Input\r\n        //                             type=\"email\"\r\n        //                             name=\"Email\"\r\n        //                             id=\"EmailVerticalIcons\"\r\n        //                             placeholder=\"Email\"\r\n        //                         />\r\n        //                         <div className=\"form-control-position\">\r\n        //                             <Mail size={15} />\r\n        //                         </div>\r\n        //                         </FormGroup>\r\n        //                     </Col>\r\n        //                     <Col sm=\"12\">\r\n        //                         <Label for=\"IconsMobile\">Mobile</Label>\r\n        //                         <FormGroup className=\"has-icon-left position-relative\">\r\n        //                         <Input\r\n        //                             type=\"number\"\r\n        //                             name=\"mobile\"\r\n        //                             id=\"IconsMobile\"\r\n        //                             placeholder=\"Mobile\"\r\n        //                         />\r\n        //                         <div className=\"form-control-position\">\r\n        //                             <Smartphone size={15} />\r\n        //                         </div>\r\n        //                         </FormGroup>\r\n        //                     </Col>\r\n        //                     <Col sm=\"12\">\r\n        //                         <Label for=\"IconsPassword\">Password</Label>\r\n        //                         <FormGroup className=\"has-icon-left position-relative\">\r\n        //                         <Input\r\n        //                             type=\"password\"\r\n        //                             name=\"password\"\r\n        //                             id=\"IconsPassword\"\r\n        //                             placeholder=\"Password\"\r\n        //                         />\r\n        //                         <div className=\"form-control-position\">\r\n        //                             <Lock size={15} />\r\n        //                         </div>\r\n        //                         </FormGroup>\r\n        //                     </Col>\r\n        //                     <Col sm=\"12\">\r\n        //                         <FormGroup className=\"has-icon-left position-relative\">\r\n        //                         <Checkbox\r\n        //                             color=\"primary\"\r\n        //                             icon={<Check className=\"vx-icon\" size={16} />}\r\n        //                             label=\"Remember Me\"\r\n        //                             defaultChecked={false}\r\n        //                         />\r\n        //                         </FormGroup>\r\n        //                     </Col>\r\n        //                     <Col sm=\"12\">\r\n        //                         <FormGroup className=\"has-icon-left position-relative\">\r\n        //                         <Button.Ripple\r\n        //                             color=\"primary\"\r\n        //                             type=\"submit\"\r\n        //                             className=\"mr-1 mb-1\"\r\n        //                             onClick={e => e.preventDefault()}\r\n        //                         >\r\n        //                             Submit\r\n        //                         </Button.Ripple>\r\n        //                         <Button.Ripple\r\n        //                             outline\r\n        //                             color=\"warning\"\r\n        //                             type=\"reset\"\r\n        //                             className=\"mb-1\"\r\n        //                         >\r\n        //                             Reset\r\n        //                         </Button.Ripple>\r\n        //                         </FormGroup>\r\n        //                     </Col>\r\n        //                     </Row>\r\n        //                 </Form>\r\n        //                 </CardBody>\r\n        //             </Card>\r\n        //         </Col>\r\n        //     </Row>\r\n        // </React.Fragment>\r\n<>\r\n        <Card>\r\n        <CardHeader>\r\n          <CardTitle>Tambah Karyawan</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Form>\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Label for=\"nameVerticalIcons\">First Name</Label>\r\n                <FormGroup className=\"has-icon-left position-relative\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"first_name\"\r\n                    id=\"nameVerticalIcons\"\r\n                    placeholder=\"First Name\"\r\n                    onChange={(val)=>this.setState({first_name: val.target.value})}\r\n                  />\r\n                  <div className=\"form-control-position\">\r\n                    <User size={15} />\r\n                  </div>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm=\"12\">\r\n                <Label for=\"LastNameVI\">Last Name</Label>\r\n                <FormGroup className=\"has-icon-left position-relative\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"last_name\"\r\n                    id=\"LastNameVI\"\r\n                    placeholder=\"Last Name\"\r\n                    onChange={(val)=>this.setState({last_name: val.target.value})}\r\n                  />\r\n                  <div className=\"form-control-position\">\r\n                    <Mail size={15} />\r\n                  </div>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm=\"12\">\r\n                <FormGroup className=\"has-icon-left position-relative\">\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    icon={<Check className=\"vx-icon\" size={16} />}\r\n                    label=\"Remember Me\"\r\n                    defaultChecked={false}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm=\"12\">\r\n                <FormGroup className=\"has-icon-left position-relative\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    className=\"mr-1 mb-1\"\r\n                    onClick={() => this.submitForm()}\r\n                    // onClick={e => e.preventDefault()}\r\n                  >\r\n                    Submit\r\n                  </Button.Ripple>\r\n                  {/* <input type=\"submit\" value=\"Submit\" /> */}\r\n                  <Button.Ripple\r\n                    outline\r\n                    color=\"warning\"\r\n                    type=\"reset\"\r\n                    className=\"mb-1\"\r\n                  >\r\n                    Reset\r\n                  </Button.Ripple>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {/* <sweetAlert handleAlert={this.handleAlert} {...this.state} {...this.props}/> */}\r\n\r\n      <SweetAlert type={this.state.sweetAlertType} title={this.state.sweetAlertTitle}\r\n          show={this.state.isSweetAlert} \r\n          onConfirm={() => this.handleAlert(\"isSweetAlert\", false)}\r\n        >\r\n            <p className=\"sweet-alert-text\">\r\n              {this.state.sweetAlertText}\r\n            </p>\r\n        </SweetAlert>\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default EmployeesAdd\r\n"]},"metadata":{},"sourceType":"module"}