{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/extensions/drag-and-drop/DndCards.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nvar dragItems = [{\n  id: \"1\",\n  title: \"Draggable Card 1\",\n  content: \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n}, {\n  id: \"2\",\n  title: \"Draggable Card 2\",\n  content: \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n}, {\n  id: \"3\",\n  title: \"Draggable Card 3\",\n  content: \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n}, {\n  id: \"4\",\n  title: \"Draggable Card 4\",\n  content: \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n}]; // get data from array\n\nvar getItems = function getItems(count) {\n  return dragItems.map(function (k) {\n    return {\n      id: k.id,\n      title: k.title,\n      content: k.content\n    };\n  });\n}; // a little function to help us with reordering the result\n\n\nvar reorder = function reorder(list, startIndex, endIndex) {\n  var result = Array.from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nvar DndHorizontal = /*#__PURE__*/function (_React$Component) {\n  _inherits(DndHorizontal, _React$Component);\n\n  function DndHorizontal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DndHorizontal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DndHorizontal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      items: getItems(),\n      direction: \"horizontal\",\n      deviceWidth: window.width\n    };\n\n    _this.updateDnd = function () {\n      _this.setState({\n        deviceWidth: window.innerWidth\n      });\n\n      if (_this.state.deviceWidth <= 992) {\n        _this.setState({\n          direction: \"vertical\"\n        });\n      } else {\n        _this.setState({\n          direction: \"horizontal\"\n        });\n      }\n    };\n\n    _this.onDragEnd = function (result) {\n      // dropped outside the list\n      if (!result.destination) {\n        return;\n      }\n\n      var items = reorder(_this.state.items, result.source.index, result.destination.index);\n\n      _this.setState({\n        items: items\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DndHorizontal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateDnd();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      window.addEventListener(\"resize\", this.updateDnd);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"droppable\",\n        direction: this.state.direction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.droppableProps, {\n          className: \"d-flex flex-sm-wrap flex-lg-nowrap draggable-cards\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }\n        }), _this2.state.items.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: item.id,\n            draggableId: item.id,\n            index: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }\n            }), /*#__PURE__*/React.createElement(Card, {\n              className: \"draggable-cards \".concat(item.id !== 4 ? \"mr-1\" : null),\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(CardHeader, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(CardTitle, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 27\n              }\n            }, item.title)), /*#__PURE__*/React.createElement(CardBody, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 25\n              }\n            }, item.content)));\n          });\n        }), provided.placeholder);\n      }));\n    }\n  }]);\n\n  return DndHorizontal;\n}(React.Component);\n\nexport default DndHorizontal;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/extensions/drag-and-drop/DndCards.js"],"names":["React","Card","CardHeader","CardBody","CardTitle","DragDropContext","Droppable","Draggable","dragItems","id","title","content","getItems","count","map","k","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","DndHorizontal","state","items","direction","deviceWidth","window","width","updateDnd","setState","innerWidth","onDragEnd","destination","source","index","prevProps","prevState","addEventListener","provided","snapshot","innerRef","droppableProps","item","draggableProps","dragHandleProps","placeholder","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\n\nconst dragItems = [\n  {\n    id: \"1\",\n    title: \"Draggable Card 1\",\n    content:\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n  },\n  {\n    id: \"2\",\n    title: \"Draggable Card 2\",\n    content:\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n  },\n  {\n    id: \"3\",\n    title: \"Draggable Card 3\",\n    content:\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n  },\n  {\n    id: \"4\",\n    title: \"Draggable Card 4\",\n    content:\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n  }\n]\n\n// get data from array\nconst getItems = count =>\n  dragItems.map(k => ({\n    id: k.id,\n    title: k.title,\n    content: k.content\n  }))\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n  return result\n}\n\nclass DndHorizontal extends React.Component {\n  state = {\n    items: getItems(),\n    direction: \"horizontal\",\n    deviceWidth: window.width\n  }\n\n  updateDnd = () => {\n    this.setState({\n      deviceWidth: window.innerWidth\n    })\n    if (this.state.deviceWidth <= 992) {\n      this.setState({\n        direction: \"vertical\"\n      })\n    } else {\n      this.setState({\n        direction: \"horizontal\"\n      })\n    }\n  }\n  componentDidMount() {\n    this.updateDnd()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    window.addEventListener(\"resize\", this.updateDnd)\n  }\n\n  onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return\n    }\n\n    const items = reorder(\n      this.state.items,\n      result.source.index,\n      result.destination.index\n    )\n\n    this.setState({\n      items\n    })\n  }\n\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"droppable\" direction={this.state.direction}>\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              className=\"d-flex flex-sm-wrap flex-lg-nowrap draggable-cards\"\n            >\n              {this.state.items.map((item, index) => (\n                <Draggable key={item.id} draggableId={item.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                      <Card\n                        className={`draggable-cards ${\n                          item.id !== 4 ? \"mr-1\" : null\n                        }`}\n                      >\n                        <CardHeader>\n                          <CardTitle>{item.title}</CardTitle>\n                        </CardHeader>\n                        <CardBody>{item.content}</CardBody>\n                      </Card>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    )\n  }\n}\n\nexport default DndHorizontal\n"]},"metadata":{},"sourceType":"module"}