{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { history } from \"../../../history\"; // Get Initial Emails\n\nexport var getEmails = function getEmails(routeParams) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"api/email/mails\", {\n                params: routeParams\n              }).then(function (result) {\n                dispatch({\n                  type: \"GET_MAILS\",\n                  mails: result.data,\n                  routeParams: routeParams\n                });\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var StarEmail = function StarEmail(id) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post(\"/api/email/set-starred\", {\n                mailId: id\n              }).then(function (result) {\n                dispatch({\n                  type: \"SET_STARRED\",\n                  mailId: id\n                });\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var searchMail = function searchMail(val) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: \"SEARCH_MAIL\",\n      query: val\n    });\n  };\n};\nexport var selectMail = function selectMail(id) {\n  return function (dispatch) {\n    dispatch({\n      type: \"SELECT_MAIL\",\n      id: id\n    });\n  };\n};\nexport var selectAllMails = function selectAllMails() {\n  return function (dispatch) {\n    dispatch({\n      type: \"SELECT_ALL_MAILS\"\n    });\n  };\n};\nexport var deselectAllMails = function deselectAllMails() {\n  return function (dispatch) {\n    dispatch({\n      type: \"DESELECT_ALL_MAILS\"\n    });\n  };\n};\nexport var moveMail = function moveMail(to, id) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var selectedEmails, routeParams;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              selectedEmails = !id ? getState().emailApp.mails.selectedEmails : [id];\n              routeParams = getState().emailApp.mails.params;\n              _context3.next = 4;\n              return axios.post(\"/api/email/move-mails\", {\n                selectedEmails: selectedEmails,\n                mailFolder: to\n              }).then(function () {\n                dispatch({\n                  type: \"MOVE_MAIL\"\n                });\n                dispatch(getEmails(routeParams));\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var unreadMails = function unreadMails(unreadFlag) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      var selectedEmails;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              selectedEmails = getState().emailApp.mails.selectedEmails;\n              _context4.next = 3;\n              return axios.post(\"api/email/mark-unread\", {\n                emailIds: selectedEmails,\n                unreadFlag: unreadFlag\n              }).then(function (response) {\n                dispatch({\n                  type: \"SET_UNREAD\",\n                  unreadFlag: unreadFlag,\n                  id: selectedEmails\n                });\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var setLabel = function setLabel(label) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      var selectedEmails, routeParams;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              selectedEmails = getState().emailApp.mails.selectedEmails;\n              routeParams = getState().emailApp.mails.params;\n              _context5.next = 4;\n              return axios.post(\"/api/email/set-labels\", {\n                emailIds: selectedEmails,\n                label: label\n              }).then(function (response) {\n                dispatch({\n                  type: \"SET_LABELS\",\n                  label: label,\n                  response: response\n                });\n                dispatch(getEmails(routeParams));\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var changeFilter = function changeFilter(filter) {\n  return function (dispatch) {\n    dispatch({\n      type: \"CHANGE_FILTER\",\n      filter: filter\n    });\n    history.push(\"/email/\".concat(filter));\n    dispatch(getEmails({\n      filter: filter\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/redux/actions/email/index.js"],"names":["axios","history","getEmails","routeParams","dispatch","get","params","then","result","type","mails","data","catch","err","console","log","StarEmail","id","post","mailId","searchMail","val","getState","query","selectMail","selectAllMails","deselectAllMails","moveMail","to","selectedEmails","emailApp","mailFolder","unreadMails","unreadFlag","emailIds","response","setLabel","label","error","changeFilter","filter","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB,C,CACA;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,WAAW,EAAI;AACtC;AAAA,wEAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCJ,KAAK,CACRK,GADG,CACC,iBADD,EACoB;AACtBC,gBAAAA,MAAM,EAAEH;AADc,eADpB,EAIHI,IAJG,CAIE,UAAAC,MAAM,EAAI;AACdJ,gBAAAA,QAAQ,CAAC;AACPK,kBAAAA,IAAI,EAAE,WADC;AAEPC,kBAAAA,KAAK,EAAEF,MAAM,CAACG,IAFP;AAGPR,kBAAAA,WAAW,EAAXA;AAHO,iBAAD,CAAR;AAKD,eAVG,EAWHS,KAXG,CAWG,UAAAC,GAAG;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,eAXN,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAcD,CAfM;AAiBP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAAAC,EAAE,EAAI;AAC7B;AAAA,yEAAO,kBAAMb,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCJ,KAAK,CACRkB,IADG,CACE,wBADF,EAC4B;AAC9BC,gBAAAA,MAAM,EAAEF;AADsB,eAD5B,EAIHV,IAJG,CAIE,UAAAC,MAAM,EAAI;AACdJ,gBAAAA,QAAQ,CAAC;AACPK,kBAAAA,IAAI,EAAE,aADC;AAEPU,kBAAAA,MAAM,EAAEF;AAFD,iBAAD,CAAR;AAID,eATG,EAUHL,KAVG,CAUG,UAAAC,GAAG;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,eAVN,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAaD,CAdM;AAgBP,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAAAC,GAAG,EAAI;AAC/B,SAAO,UAACjB,QAAD,EAAWkB,QAAX,EAAwB;AAC7BlB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,aADC;AAEPc,MAAAA,KAAK,EAAEF;AAFA,KAAD,CAAR;AAID,GALD;AAMD,CAPM;AASP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAP,EAAE,EAAI;AAC9B,SAAO,UAAAb,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,aADC;AAEPQ,MAAAA,EAAE,EAAFA;AAFO,KAAD,CAAR;AAID,GALD;AAMD,CAPM;AASP,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,SAAO,UAAArB,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,IAAMiB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,SAAO,UAAAtB,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,IAAMkB,QAAQ,GAAG,SAAXA,QAAW,CAACC,EAAD,EAAKX,EAAL,EAAY;AAClC;AAAA,yEAAO,kBAAOb,QAAP,EAAiBkB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCO,cAAAA,cADD,GACkB,CAACZ,EAAD,GAAMK,QAAQ,GAAGQ,QAAX,CAAoBpB,KAApB,CAA0BmB,cAAhC,GAAiD,CAACZ,EAAD,CADnE;AAECd,cAAAA,WAFD,GAEemB,QAAQ,GAAGQ,QAAX,CAAoBpB,KAApB,CAA0BJ,MAFzC;AAAA;AAAA,qBAGCN,KAAK,CACRkB,IADG,CACE,uBADF,EAC2B;AAC7BW,gBAAAA,cAAc,EAAdA,cAD6B;AAE7BE,gBAAAA,UAAU,EAAEH;AAFiB,eAD3B,EAKHrB,IALG,CAKE,YAAM;AACVH,gBAAAA,QAAQ,CAAC;AACPK,kBAAAA,IAAI,EAAE;AADC,iBAAD,CAAR;AAGAL,gBAAAA,QAAQ,CAACF,SAAS,CAACC,WAAD,CAAV,CAAR;AACD,eAVG,EAWHS,KAXG,CAWG,UAAAC,GAAG;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,eAXN,CAHD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAgBD,CAjBM;AAmBP,OAAO,IAAMmB,WAAW,GAAG,SAAdA,WAAc,CAAAC,UAAU,EAAI;AACvC;AAAA,yEAAO,kBAAO7B,QAAP,EAAiBkB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCO,cAAAA,cADD,GACkBP,QAAQ,GAAGQ,QAAX,CAAoBpB,KAApB,CAA0BmB,cAD5C;AAAA;AAAA,qBAEC7B,KAAK,CACRkB,IADG,CACE,uBADF,EAC2B;AAC7BgB,gBAAAA,QAAQ,EAAEL,cADmB;AAE7BI,gBAAAA,UAAU,EAAEA;AAFiB,eAD3B,EAKH1B,IALG,CAKE,UAAA4B,QAAQ,EAAI;AAChB/B,gBAAAA,QAAQ,CAAC;AACPK,kBAAAA,IAAI,EAAE,YADC;AAEPwB,kBAAAA,UAAU,EAAVA,UAFO;AAGPhB,kBAAAA,EAAE,EAAEY;AAHG,iBAAD,CAAR;AAKD,eAXG,EAYHjB,KAZG,CAYG,UAAAC,GAAG;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,eAZN,CAFD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAgBD,CAjBM;AAmBP,OAAO,IAAMuB,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAC/B;AAAA,yEAAO,kBAAOjC,QAAP,EAAiBkB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCO,cAAAA,cADD,GACkBP,QAAQ,GAAGQ,QAAX,CAAoBpB,KAApB,CAA0BmB,cAD5C;AAEC1B,cAAAA,WAFD,GAEemB,QAAQ,GAAGQ,QAAX,CAAoBpB,KAApB,CAA0BJ,MAFzC;AAAA;AAAA,qBAGCN,KAAK,CACRkB,IADG,CACE,uBADF,EAC2B;AAC7BgB,gBAAAA,QAAQ,EAAEL,cADmB;AAE7BQ,gBAAAA,KAAK,EAAEA;AAFsB,eAD3B,EAKH9B,IALG,CAKE,UAAA4B,QAAQ,EAAI;AAChB/B,gBAAAA,QAAQ,CAAC;AAAEK,kBAAAA,IAAI,EAAE,YAAR;AAAsB4B,kBAAAA,KAAK,EAALA,KAAtB;AAA6BF,kBAAAA,QAAQ,EAARA;AAA7B,iBAAD,CAAR;AACA/B,gBAAAA,QAAQ,CAACF,SAAS,CAACC,WAAD,CAAV,CAAR;AACD,eARG,EASHS,KATG,CASG,UAAA0B,KAAK,EAAI;AACdxB,gBAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAZ;AACD,eAXG,CAHD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAgBD,CAjBM;AAmBP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,MAAM,EAAI;AACpC,SAAO,UAAApC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,eAAR;AAAyB+B,MAAAA,MAAM,EAANA;AAAzB,KAAD,CAAR;AACAvC,IAAAA,OAAO,CAACwC,IAAR,kBAAuBD,MAAvB;AACApC,IAAAA,QAAQ,CAACF,SAAS,CAAC;AAAEsC,MAAAA,MAAM,EAANA;AAAF,KAAD,CAAV,CAAR;AACD,GAJD;AAKD,CANM","sourcesContent":["import axios from \"axios\"\nimport { history } from \"../../../history\"\n// Get Initial Emails\nexport const getEmails = routeParams => {\n  return async dispatch => {\n    await axios\n      .get(\"api/email/mails\", {\n        params: routeParams\n      })\n      .then(result => {\n        dispatch({\n          type: \"GET_MAILS\",\n          mails: result.data,\n          routeParams\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const StarEmail = id => {\n  return async dispatch => {\n    await axios\n      .post(\"/api/email/set-starred\", {\n        mailId: id\n      })\n      .then(result => {\n        dispatch({\n          type: \"SET_STARRED\",\n          mailId: id\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const searchMail = val => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: \"SEARCH_MAIL\",\n      query: val\n    })\n  }\n}\n\nexport const selectMail = id => {\n  return dispatch => {\n    dispatch({\n      type: \"SELECT_MAIL\",\n      id\n    })\n  }\n}\n\nexport const selectAllMails = () => {\n  return dispatch => {\n    dispatch({\n      type: \"SELECT_ALL_MAILS\"\n    })\n  }\n}\n\nexport const deselectAllMails = () => {\n  return dispatch => {\n    dispatch({\n      type: \"DESELECT_ALL_MAILS\"\n    })\n  }\n}\n\nexport const moveMail = (to, id) => {\n  return async (dispatch, getState) => {\n    const selectedEmails = !id ? getState().emailApp.mails.selectedEmails : [id]\n    const routeParams = getState().emailApp.mails.params\n    await axios\n      .post(\"/api/email/move-mails\", {\n        selectedEmails,\n        mailFolder: to\n      })\n      .then(() => {\n        dispatch({\n          type: \"MOVE_MAIL\"\n        })\n        dispatch(getEmails(routeParams))\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const unreadMails = unreadFlag => {\n  return async (dispatch, getState) => {\n    const selectedEmails = getState().emailApp.mails.selectedEmails\n    await axios\n      .post(\"api/email/mark-unread\", {\n        emailIds: selectedEmails,\n        unreadFlag: unreadFlag\n      })\n      .then(response => {\n        dispatch({\n          type: \"SET_UNREAD\",\n          unreadFlag,\n          id: selectedEmails\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const setLabel = label => {\n  return async (dispatch, getState) => {\n    const selectedEmails = getState().emailApp.mails.selectedEmails\n    const routeParams = getState().emailApp.mails.params\n    await axios\n      .post(\"/api/email/set-labels\", {\n        emailIds: selectedEmails,\n        label: label\n      })\n      .then(response => {\n        dispatch({ type: \"SET_LABELS\", label, response })\n        dispatch(getEmails(routeParams))\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n}\n\nexport const changeFilter = filter => {\n  return dispatch => {\n    dispatch({ type: \"CHANGE_FILTER\", filter })\n    history.push(`/email/${filter}`)\n    dispatch(getEmails({ filter }))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}