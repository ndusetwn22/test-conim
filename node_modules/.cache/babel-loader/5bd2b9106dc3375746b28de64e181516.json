{"ast":null,"code":"import axios from \"axios\";\nexport const getChats = () => {\n  return dispatch => {\n    axios.get(\"api/app/chat/chats\").then(response => {\n      dispatch({\n        type: \"GET_CONTACTS\",\n        contacts: response.data.contacts,\n        chats: response.data.chats\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const getContactChats = () => {\n  return dispatch => {\n    axios.get(\"api/app/chat/chat-contacts\").then(response => {\n      dispatch({\n        type: \"GET_CHAT_CONTACTS\",\n        chats: response.data\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const togglePinned = (id, value) => {\n  return dispatch => {\n    axios.post(\"/api/apps/chat/set-pinned/\", {\n      contactId: id,\n      value\n    }).then(response => {\n      dispatch({\n        type: \"SET_PINNED\",\n        id,\n        value\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const sendMessage = (id, isPinned, text) => {\n  if (text.length > 0) {\n    return dispatch => {\n      let newMsg = {\n        textContent: text,\n        isSent: true,\n        isSeen: false,\n        time: new Date().toString()\n      };\n      axios.post(\"/api/app/chat/send-message\", {\n        contactId: id,\n        message: newMsg,\n        isPinned\n      }).then(response => {\n        dispatch({\n          type: \"SEND_MESSAGE\",\n          msg: newMsg,\n          id,\n          isPinned,\n          text\n        });\n        dispatch(getChats());\n      }).catch(err => console.log(err));\n    };\n  } else {\n    return;\n  }\n};\nexport const changeStatus = status => {\n  return dispatch => {\n    dispatch({\n      type: \"CHANGE_STATUS\",\n      status\n    });\n  };\n};\nexport const searchContacts = query => {\n  return dispatch => {\n    dispatch({\n      type: \"SEARCH_CONTACTS\",\n      query\n    });\n  };\n};\nexport const markSeenAllMessages = id => {\n  return dispatch => {\n    axios.post(\"/api/apps/chat/mark-all-seen/\", {\n      contactId: id\n    }).then(response => {\n      dispatch({\n        type: \"MARK_AS_SEEN\",\n        id\n      });\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.1/src/redux/actions/chat/index.js"],"names":["axios","getChats","dispatch","get","then","response","type","contacts","data","chats","catch","err","console","log","getContactChats","togglePinned","id","value","post","contactId","sendMessage","isPinned","text","length","newMsg","textContent","isSent","isSeen","time","Date","toString","message","msg","changeStatus","status","searchContacts","query","markSeenAllMessages"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\nexport const getChats = () => {\n  return dispatch => {\n    axios\n      .get(\"api/app/chat/chats\")\n      .then(response => {\n        dispatch({\n          type: \"GET_CONTACTS\",\n          contacts: response.data.contacts,\n          chats: response.data.chats\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const getContactChats = () => {\n  return dispatch => {\n    axios\n      .get(\"api/app/chat/chat-contacts\")\n      .then(response => {\n        dispatch({\n          type: \"GET_CHAT_CONTACTS\",\n          chats: response.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const togglePinned = (id, value) => {\n  return dispatch => {\n    axios\n      .post(\"/api/apps/chat/set-pinned/\", {\n        contactId: id,\n        value\n      })\n      .then(response => {\n        dispatch({\n          type: \"SET_PINNED\",\n          id,\n          value\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const sendMessage = (id, isPinned, text) => {\n  if (text.length > 0) {\n    return dispatch => {\n      let newMsg = {\n        textContent: text,\n        isSent: true,\n        isSeen: false,\n        time: new Date().toString()\n      }\n      axios\n        .post(\"/api/app/chat/send-message\", {\n          contactId: id,\n          message: newMsg,\n          isPinned\n        })\n        .then(response => {\n          dispatch({\n            type: \"SEND_MESSAGE\",\n            msg: newMsg,\n            id,\n            isPinned,\n            text\n          })\n          dispatch(getChats())\n        })\n        .catch(err => console.log(err))\n    }\n  } else {\n    return\n  }\n}\n\nexport const changeStatus = status => {\n  return dispatch => {\n    dispatch({\n      type: \"CHANGE_STATUS\",\n      status\n    })\n  }\n}\n\nexport const searchContacts = query => {\n  return dispatch => {\n    dispatch({\n      type: \"SEARCH_CONTACTS\",\n      query\n    })\n  }\n}\n\nexport const markSeenAllMessages = id => {\n  return dispatch => {\n    axios\n      .post(\"/api/apps/chat/mark-all-seen/\", {\n        contactId: id\n      })\n      .then(response => {\n        dispatch({\n          type: \"MARK_AS_SEEN\",\n          id\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}