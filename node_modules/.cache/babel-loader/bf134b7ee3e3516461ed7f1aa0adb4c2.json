{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/components/reactstrap/alerts/AlertExample.js\";\nimport React from \"react\";\nimport { Alert, Card, CardHeader, CardBody, CardTitle, TabContent, TabPane, Nav, NavItem, NavLink, FormGroup, Label, Input } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { Eye, Code, AlertCircle } from \"react-feather\";\nimport { alertExample } from \"./AlertSourceCode\";\n\nvar AlertExample = /*#__PURE__*/function (_React$Component) {\n  _inherits(AlertExample, _React$Component);\n\n  function AlertExample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AlertExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AlertExample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTab: \"1\",\n      inputTerm: \"\",\n      visible: true\n    };\n\n    _this.toggleTab = function (tab) {\n      if (_this.state.activeTab !== tab) {\n        _this.setState({\n          activeTab: tab\n        });\n      }\n    };\n\n    _this.handleInput = function (e) {\n      _this.setState({\n        inputTerm: e.target.value\n      });\n\n      if (e.target.value.length > 0 && isNaN(e.target.value)) {\n        _this.setState({\n          visible: true\n        });\n      } else {\n        _this.setState({\n          visible: false\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AlertExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, \"Example\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"views\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        tabs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"1\"\n        }),\n        onClick: function onClick() {\n          _this2.toggleTab(\"1\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Eye, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"2\"\n        }),\n        onClick: function onClick() {\n          _this2.toggleTab(\"2\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Code, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      })))))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, \"An example would be to have an input and when a condition is met, show the alert.\"), /*#__PURE__*/React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tabId: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"numbers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      }, \"Enter numbers only\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"w-25 h-25 pl-1\",\n        placeholder: \"0123456789\",\n        value: this.state.inputTerm,\n        onChange: this.handleInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Alert, {\n        color: \"danger\",\n        isOpen: this.state.visible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AlertCircle, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      }, \"the value is \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 34\n        }\n      }, \"invalid\"), \" you can only enter numbers\"))), /*#__PURE__*/React.createElement(TabPane, {\n        className: \"component-code\",\n        tabId: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, alertExample)))));\n    }\n  }]);\n\n  return AlertExample;\n}(React.Component);\n\nexport default AlertExample;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/components/reactstrap/alerts/AlertExample.js"],"names":["React","Alert","Card","CardHeader","CardBody","CardTitle","TabContent","TabPane","Nav","NavItem","NavLink","FormGroup","Label","Input","classnames","Eye","Code","AlertCircle","alertExample","AlertExample","state","activeTab","inputTerm","visible","toggleTab","tab","setState","handleInput","e","target","value","length","isNaN","active","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Alert,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, AlertCircle } from \"react-feather\"\nimport { alertExample } from \"./AlertSourceCode\"\n\nclass AlertExample extends React.Component {\n  state = {\n    activeTab: \"1\",\n    inputTerm: \"\",\n    visible: true\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  handleInput = e => {\n    this.setState({ inputTerm: e.target.value })\n\n    if (e.target.value.length > 0 && isNaN(e.target.value)) {\n      this.setState({ visible: true })\n    } else {\n      this.setState({ visible: false })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Example</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              An example would be to have an input and when a condition is met,\n              show the alert.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <FormGroup>\n                  <Label htmlFor=\"numbers\">Enter numbers only</Label>\n                  <Input\n                    className=\"w-25 h-25 pl-1\"\n                    placeholder=\"0123456789\"\n                    value={this.state.inputTerm}\n                    onChange={this.handleInput}\n                  />\n                </FormGroup>\n                <Alert color=\"danger\" isOpen={this.state.visible}>\n                  <AlertCircle size={15} />{\" \"}\n                  <span>\n                    the value is <strong>invalid</strong> you can only enter\n                    numbers\n                  </span>\n                </Alert>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {alertExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AlertExample\n"]},"metadata":{},"sourceType":"module"}