{"ast":null,"code":"import React from\"react\";export var popoverControlled=/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-jsx\"},\"\\nimport React from \\\"react\\\"\\nimport {Button,  Popover, PopoverHeader, PopoverBody,} from \\\"reactstrap\\\"\\n\\nclass PopoverControlled extends React.Component {\\n\\n  state = {\\n    popoverOpen: false\\n  }\\n\\n  togglePopover = () => {\\n    this.setState({\\n      popoverOpen: !this.state.popoverOpen\\n    })\\n  }\\n\\n  render() {\\n    return(\\n      <Button color=\\\"primary\\\" outline id=\\\"controlledPopover\\\">\\n        Controlled\\n      </Button>\\n      <Popover\\n        placement=\\\"top\\\"\\n        target=\\\"controlledPopover\\\"\\n        isOpen={this.state.popoverOpen}\\n        toggle={this.togglePopover}\\n      >\\n        <PopoverHeader>Controlled Popover</PopoverHeader>\\n        <PopoverBody>\\n          Macaroon chocolate candy. I love carrot cake gingerbread\\n          cake lemon drops. Muffin sugar plum marzipan pie.\\n        </PopoverBody>\\n      </Popover>\\n    )\\n  }\\n}\\nexport default PopoverControlled\\n\"));export var popoverUncontrolled=/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-jsx\"},\"\\nimport React from \\\"react\\\"\\nimport {Button,  UncontrolledPopover, PopoverHeader, PopoverBody,} from \\\"reactstrap\\\"\\n\\nclass PopoverUncontrolled extends React.Component {\\n\\n  render() {\\n    return(\\n      <Button color=\\\"primary\\\" outline id=\\\"uncontrolledPopover\\\">\\n        Controlled\\n      </Button>\\n      <UncontrolledPopover placement=\\\"top\\\" target=\\\"uncontrolledPopover\\\">\\n        <PopoverHeader>Uncontrolled Popover</PopoverHeader>\\n        <PopoverBody>\\n          Macaroon chocolate candy. I love carrot cake gingerbread\\n          cake lemon drops. Muffin sugar plum marzipan pie.\\n        </PopoverBody>\\n      </UncontrolledPopover>\\n    )\\n  }\\n}\\nexport default PopoverUncontrolled\\n\"));export var popoverPositions=/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-jsx\"},\"\\nimport React from \\\"react\\\"\\nimport {Button,  UncontrolledPopover, PopoverHeader, PopoverBody,} from \\\"reactstrap\\\"\\n\\nclass PopoverPositions extends React.Component {\\n\\n  render() {\\n    return(\\n      <Button\\n      color=\\\"primary\\\"\\n      outline\\n      id=\\\"popTop\\\"\\n      className=\\\"mr-1 mb-1\\\"\\n    >\\n      Top\\n    </Button>\\n    <UncontrolledPopover placement=\\\"top\\\" target=\\\"popTop\\\">\\n      <PopoverHeader>Popover Top</PopoverHeader>\\n      <PopoverBody>\\n        Lorem ipsum dolor sit amet consectetur adipisicing elit.\\n        Doloremque, cumque.\\n      </PopoverBody>\\n    </UncontrolledPopover>\\n\\n    <Button\\n      color=\\\"primary\\\"\\n      outline\\n      id=\\\"popRight\\\"\\n      className=\\\"mr-1 mb-1\\\"\\n    >\\n      Right\\n    </Button>\\n    <UncontrolledPopover placement=\\\"right\\\" target=\\\"popRight\\\">\\n      <PopoverHeader>Popover Right</PopoverHeader>\\n      <PopoverBody>\\n        Lorem ipsum dolor sit amet consectetur adipisicing elit.\\n        Doloremque, cumque.\\n      </PopoverBody>\\n    </UncontrolledPopover>\\n\\n    <Button\\n      color=\\\"primary\\\"\\n      outline\\n      id=\\\"popBottom\\\"\\n      className=\\\"mr-1 mb-1\\\"\\n    >\\n      Bottom\\n    </Button>\\n    <UncontrolledPopover placement=\\\"bottom\\\" target=\\\"popBottom\\\">\\n      <PopoverHeader>Popover Bottom</PopoverHeader>\\n      <PopoverBody>\\n        Lorem ipsum dolor sit amet consectetur adipisicing elit.\\n        Doloremque, cumque.\\n      </PopoverBody>\\n    </UncontrolledPopover>\\n\\n    <Button\\n      color=\\\"primary\\\"\\n      outline\\n      id=\\\"popLeft\\\"\\n      className=\\\"mr-1 mb-1\\\"\\n    >\\n      Left\\n    </Button>\\n    <UncontrolledPopover placement=\\\"left\\\" target=\\\"popLeft\\\">\\n      <PopoverHeader>Popover Left</PopoverHeader>\\n      <PopoverBody>\\n        Lorem ipsum dolor sit amet consectetur adipisicing elit.\\n        Doloremque, cumque.\\n      </PopoverBody>\\n    </UncontrolledPopover>\\n    )\\n  }\\n}\\nexport default PopoverPositions\\n\"));export var popoverTriggers=/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-jsx\"},\"\\nimport React from \\\"react\\\"\\nimport {Button,  UncontrolledPopover, PopoverHeader, PopoverBody,} from \\\"reactstrap\\\"\\n\\nclass PopoverTriggers extends React.Component {\\n\\n  render() {\\n    return(\\n      <Button\\n      color=\\\"primary\\\"\\n      outline\\n      id=\\\"popFocus\\\"\\n      className=\\\"mr-1 mb-1\\\"\\n    >\\n      Focus\\n    </Button>\\n    <UncontrolledPopover\\n      trigger=\\\"focus\\\"\\n      placement=\\\"top\\\"\\n      target=\\\"popFocus\\\"\\n    >\\n      <PopoverHeader>Focus Trigger</PopoverHeader>\\n      <PopoverBody>\\n        Focusing on the trigging element makes this popover appear.\\n        Blurring (clicking away) makes it disappear. You cannot\\n        select this text as the popover will disappear when you try.\\n      </PopoverBody>\\n    </UncontrolledPopover>\\n\\n    <Button\\n      color=\\\"primary\\\"\\n      outline\\n      id=\\\"popClick\\\"\\n      className=\\\"mr-1 mb-1\\\"\\n    >\\n      Click\\n    </Button>\\n    <UncontrolledPopover\\n      trigger=\\\"click\\\"\\n      placement=\\\"top\\\"\\n      target=\\\"popClick\\\"\\n    >\\n      <PopoverHeader>Click Trigger</PopoverHeader>\\n      <PopoverBody>\\n        Clicking on the triggering element makes this popover\\n        appear. Clicking on it again will make it disappear. You can\\n        select this text, but clicking away (somewhere other than\\n        the triggering element) will not dismiss this popover.\\n      </PopoverBody>\\n    </UncontrolledPopover>\\n\\n    <Button\\n      trigger=\\\"legacy\\\"\\n      color=\\\"primary\\\"\\n      outline\\n      id=\\\"popLegacy\\\"\\n      className=\\\"mr-1\\\"\\n    >\\n      Legacy\\n    </Button>\\n    <UncontrolledPopover placement=\\\"top\\\" target=\\\"popLegacy\\\">\\n      <PopoverHeader>Legacy Trigger</PopoverHeader>\\n      <PopoverBody>\\n        Legacy is a reactstrap special trigger value (outside of\\n        bootstrap's spec/standard). Before reactstrap correctly\\n        supported click and focus, it had a hybrid which was very\\n        useful and has been brought back as trigger=\\\"legacy\\\". One\\n        advantage of the legacy trigger is that it allows the\\n        popover text to be selected while also closing when clicking\\n        outside the triggering element and popover itself.\\n      </PopoverBody>\\n    </UncontrolledPopover>\\n    )\\n  }\\n}\\nexport default PopoverTriggers\\n\"));","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/components/reactstrap/popovers/PopoverSourceCode.js"],"names":["React","popoverControlled","popoverUncontrolled","popoverPositions","popoverTriggers"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,cAC5B,4CACE,4BAAM,SAAS,CAAC,cAAhB,u5BADF,CADK,CA6CP,MAAO,IAAMC,CAAAA,mBAAmB,cAC9B,4CACE,4BAAM,SAAS,CAAC,cAAhB,ssBADF,CADK,CA8BP,MAAO,IAAMC,CAAAA,gBAAgB,cAC3B,4CACE,4BAAM,SAAS,CAAC,cAAhB,u6DADF,CADK,CAmFP,MAAO,IAAMC,CAAAA,eAAe,cAC1B,4CACE,4BAAM,SAAS,CAAC,cAAhB,kvEADF,CADK","sourcesContent":["import React from \"react\"\n\nexport const popoverControlled = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button,  Popover, PopoverHeader, PopoverBody,} from \"reactstrap\"\n\nclass PopoverControlled extends React.Component {\n\n  state = {\n    popoverOpen: false\n  }\n\n  togglePopover = () => {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    })\n  }\n\n  render() {\n    return(\n      <Button color=\"primary\" outline id=\"controlledPopover\">\n        Controlled\n      </Button>\n      <Popover\n        placement=\"top\"\n        target=\"controlledPopover\"\n        isOpen={this.state.popoverOpen}\n        toggle={this.togglePopover}\n      >\n        <PopoverHeader>Controlled Popover</PopoverHeader>\n        <PopoverBody>\n          Macaroon chocolate candy. I love carrot cake gingerbread\n          cake lemon drops. Muffin sugar plum marzipan pie.\n        </PopoverBody>\n      </Popover>\n    )\n  }\n}\nexport default PopoverControlled\n`}\n    </code>\n  </pre>\n)\n\nexport const popoverUncontrolled = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button,  UncontrolledPopover, PopoverHeader, PopoverBody,} from \"reactstrap\"\n\nclass PopoverUncontrolled extends React.Component {\n\n  render() {\n    return(\n      <Button color=\"primary\" outline id=\"uncontrolledPopover\">\n        Controlled\n      </Button>\n      <UncontrolledPopover placement=\"top\" target=\"uncontrolledPopover\">\n        <PopoverHeader>Uncontrolled Popover</PopoverHeader>\n        <PopoverBody>\n          Macaroon chocolate candy. I love carrot cake gingerbread\n          cake lemon drops. Muffin sugar plum marzipan pie.\n        </PopoverBody>\n      </UncontrolledPopover>\n    )\n  }\n}\nexport default PopoverUncontrolled\n`}\n    </code>\n  </pre>\n)\n\nexport const popoverPositions = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button,  UncontrolledPopover, PopoverHeader, PopoverBody,} from \"reactstrap\"\n\nclass PopoverPositions extends React.Component {\n\n  render() {\n    return(\n      <Button\n      color=\"primary\"\n      outline\n      id=\"popTop\"\n      className=\"mr-1 mb-1\"\n    >\n      Top\n    </Button>\n    <UncontrolledPopover placement=\"top\" target=\"popTop\">\n      <PopoverHeader>Popover Top</PopoverHeader>\n      <PopoverBody>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        Doloremque, cumque.\n      </PopoverBody>\n    </UncontrolledPopover>\n\n    <Button\n      color=\"primary\"\n      outline\n      id=\"popRight\"\n      className=\"mr-1 mb-1\"\n    >\n      Right\n    </Button>\n    <UncontrolledPopover placement=\"right\" target=\"popRight\">\n      <PopoverHeader>Popover Right</PopoverHeader>\n      <PopoverBody>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        Doloremque, cumque.\n      </PopoverBody>\n    </UncontrolledPopover>\n\n    <Button\n      color=\"primary\"\n      outline\n      id=\"popBottom\"\n      className=\"mr-1 mb-1\"\n    >\n      Bottom\n    </Button>\n    <UncontrolledPopover placement=\"bottom\" target=\"popBottom\">\n      <PopoverHeader>Popover Bottom</PopoverHeader>\n      <PopoverBody>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        Doloremque, cumque.\n      </PopoverBody>\n    </UncontrolledPopover>\n\n    <Button\n      color=\"primary\"\n      outline\n      id=\"popLeft\"\n      className=\"mr-1 mb-1\"\n    >\n      Left\n    </Button>\n    <UncontrolledPopover placement=\"left\" target=\"popLeft\">\n      <PopoverHeader>Popover Left</PopoverHeader>\n      <PopoverBody>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        Doloremque, cumque.\n      </PopoverBody>\n    </UncontrolledPopover>\n    )\n  }\n}\nexport default PopoverPositions\n`}\n    </code>\n  </pre>\n)\n\nexport const popoverTriggers = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button,  UncontrolledPopover, PopoverHeader, PopoverBody,} from \"reactstrap\"\n\nclass PopoverTriggers extends React.Component {\n\n  render() {\n    return(\n      <Button\n      color=\"primary\"\n      outline\n      id=\"popFocus\"\n      className=\"mr-1 mb-1\"\n    >\n      Focus\n    </Button>\n    <UncontrolledPopover\n      trigger=\"focus\"\n      placement=\"top\"\n      target=\"popFocus\"\n    >\n      <PopoverHeader>Focus Trigger</PopoverHeader>\n      <PopoverBody>\n        Focusing on the trigging element makes this popover appear.\n        Blurring (clicking away) makes it disappear. You cannot\n        select this text as the popover will disappear when you try.\n      </PopoverBody>\n    </UncontrolledPopover>\n\n    <Button\n      color=\"primary\"\n      outline\n      id=\"popClick\"\n      className=\"mr-1 mb-1\"\n    >\n      Click\n    </Button>\n    <UncontrolledPopover\n      trigger=\"click\"\n      placement=\"top\"\n      target=\"popClick\"\n    >\n      <PopoverHeader>Click Trigger</PopoverHeader>\n      <PopoverBody>\n        Clicking on the triggering element makes this popover\n        appear. Clicking on it again will make it disappear. You can\n        select this text, but clicking away (somewhere other than\n        the triggering element) will not dismiss this popover.\n      </PopoverBody>\n    </UncontrolledPopover>\n\n    <Button\n      trigger=\"legacy\"\n      color=\"primary\"\n      outline\n      id=\"popLegacy\"\n      className=\"mr-1\"\n    >\n      Legacy\n    </Button>\n    <UncontrolledPopover placement=\"top\" target=\"popLegacy\">\n      <PopoverHeader>Legacy Trigger</PopoverHeader>\n      <PopoverBody>\n        Legacy is a reactstrap special trigger value (outside of\n        bootstrap's spec/standard). Before reactstrap correctly\n        supported click and focus, it had a hybrid which was very\n        useful and has been brought back as trigger=\"legacy\". One\n        advantage of the legacy trigger is that it allows the\n        popover text to be selected while also closing when clicking\n        outside the triggering element and popover itself.\n      </PopoverBody>\n    </UncontrolledPopover>\n    )\n  }\n}\nexport default PopoverTriggers\n`}\n    </code>\n  </pre>\n)\n"]},"metadata":{},"sourceType":"module"}