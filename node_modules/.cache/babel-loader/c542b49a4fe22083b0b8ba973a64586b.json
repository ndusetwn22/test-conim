{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/extensions/treeview/TreeView.js\";\n\nimport React from \"react\";\nimport ExtensionsHeader from \"../extensionsHeader\";\nimport { Row, Col, Card, CardHeader, CardBody, CardTitle, Spinner } from \"reactstrap\";\nimport { Treebeard, decorators } from \"react-treebeard\";\nimport Prism from \"prismjs\";\nimport { connect } from \"react-redux\";\nimport * as filters from \"./Filter\";\nimport NodeViewer from \"./NodeViewer\";\nimport { data } from \"./Data\";\nimport { styleLight, styleDark } from \"./Styles\";\n\nvar Loading = function Loading(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: props.style.wrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"sm\",\n    color: \"primary\",\n    style: props.style.arrow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar TreeView = /*#__PURE__*/function (_React$Component) {\n  _inherits(TreeView, _React$Component);\n\n  function TreeView() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, TreeView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TreeView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      data: data\n    };\n\n    _this2.onToggle = function (node, toggled) {\n      var _this2$state = _this2.state,\n          cursor = _this2$state.cursor,\n          data = _this2$state.data;\n\n      if (cursor) {\n        _this2.setState(function () {\n          return {\n            cursor: cursor,\n            active: false\n          };\n        });\n      }\n\n      node.active = !node.active;\n\n      if (node.children) {\n        node.toggled = toggled;\n      }\n\n      _this2.setState(function () {\n        return {\n          cursor: node,\n          data: Object.assign({}, data)\n        };\n      });\n    };\n\n    _this2.onFilterMouseUp = function (_ref) {\n      var value = _ref.target.value;\n      var filter = value.trim();\n\n      if (!filter) {\n        return _this2.setState(function () {\n          return {\n            data: data\n          };\n        });\n      }\n\n      var filtered = filters.filterTree(data, filter);\n      filtered = filters.expandFilteredNodes(filtered, filter);\n\n      _this2.setState(function () {\n        return {\n          data: filtered\n        };\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(TreeView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Prism.highlightAll();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          cursor = _this$state.cursor;\n      decorators.Loading = Loading;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ExtensionsHeader, {\n        title: \"React Treebeard\",\n        subTitle: \"Data-Driven, Fast, Efficient and Customisable tree view component. \",\n        link: \"https://github.com/storybookjs/react-treebeard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"Default\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: \"6\",\n        lg: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-1\",\n        onKeyUp: this.onFilterMouseUp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Treebeard, {\n        data: data,\n        onToggle: this.onToggle,\n        style: this.props.theme === \"light\" || this.props.theme === \"semi-dark\" ? styleLight : styleDark,\n        decorators: decorators,\n        animations: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        xl: \"6\",\n        lg: \"12\",\n        className: \"mt-2 mt-xl-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(NodeViewer, {\n        node: cursor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }))))))));\n    }\n  }]);\n\n  return TreeView;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    theme: state.customizer.customizer.theme\n  };\n};\n\nexport default connect(mapStateToProps)(TreeView);","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/extensions/treeview/TreeView.js"],"names":["React","ExtensionsHeader","Row","Col","Card","CardHeader","CardBody","CardTitle","Spinner","Treebeard","decorators","Prism","connect","filters","NodeViewer","data","styleLight","styleDark","Loading","props","style","wrapper","arrow","TreeView","state","onToggle","node","toggled","cursor","setState","active","children","Object","assign","onFilterMouseUp","value","target","filter","trim","filtered","filterTree","expandFilteredNodes","highlightAll","theme","Component","mapStateToProps","customizer"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport ExtensionsHeader from \"../extensionsHeader\"\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Spinner\n} from \"reactstrap\"\nimport { Treebeard, decorators } from \"react-treebeard\"\nimport Prism from \"prismjs\"\nimport { connect } from \"react-redux\"\nimport * as filters from \"./Filter\"\nimport NodeViewer from \"./NodeViewer\"\nimport { data } from \"./Data\"\nimport { styleLight, styleDark } from \"./Styles\"\nconst Loading = props => {\n  return (\n    <div style={props.style.wrapper}>\n      <Spinner size=\"sm\" color=\"primary\" style={props.style.arrow} />\n    </div>\n  )\n}\n\nclass TreeView extends React.Component {\n  state = {\n    data\n  }\n\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n\n  onToggle = (node, toggled) => {\n    const { cursor, data } = this.state\n\n    if (cursor) {\n      this.setState(() => ({ cursor, active: false }))\n    }\n\n    node.active = !node.active\n    if (node.children) {\n      node.toggled = toggled\n    }\n    this.setState(() => ({ cursor: node, data: Object.assign({}, data) }))\n  }\n\n  onFilterMouseUp = ({ target: { value } }) => {\n    const filter = value.trim()\n    if (!filter) {\n      return this.setState(() => ({ data }))\n    }\n    let filtered = filters.filterTree(data, filter)\n    filtered = filters.expandFilteredNodes(filtered, filter)\n    this.setState(() => ({ data: filtered }))\n  }\n\n  render() {\n    const { data, cursor } = this.state\n    decorators.Loading = Loading\n\n    return (\n      <React.Fragment>\n        <ExtensionsHeader\n          title=\"React Treebeard\"\n          subTitle=\"Data-Driven, Fast, Efficient and Customisable tree view component. \"\n          link=\"https://github.com/storybookjs/react-treebeard\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Default</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col xl=\"6\" lg=\"12\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control mb-1\"\n                      onKeyUp={this.onFilterMouseUp}\n                    />\n                    <Treebeard\n                      data={data}\n                      onToggle={this.onToggle}\n                      style={\n                        this.props.theme === \"light\" ||\n                        this.props.theme === \"semi-dark\"\n                          ? styleLight\n                          : styleDark\n                      }\n                      decorators={decorators}\n                      animations={false}\n                    />\n                  </Col>\n                  <Col xl=\"6\" lg=\"12\" className=\"mt-2 mt-xl-0\">\n                    <NodeViewer node={cursor} />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    theme: state.customizer.customizer.theme\n  }\n}\n\nexport default connect(mapStateToProps)(TreeView)\n"]},"metadata":{},"sourceType":"module"}