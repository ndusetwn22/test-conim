{"ast":null,"code":"// import * as firebase from \"firebase/app\"\nimport{history}from\"../../../history\";// import \"firebase/auth\"\n// import \"firebase/database\"\nimport axios from\"axios\";// import { config } from \"../../../authServices/firebase/firebaseConfig\"\n// Init firebase if not already initialized\n// if (!firebase.apps.length) {\n//   firebase.initializeApp(config)\n// }\n// let firebaseAuth = firebase.auth()\n// export const signupWithFirebase = (email, password, name) => {\n//   return dispatch => {\n//     let userEmail = null,\n//       loggedIn = false\n//     // userName = null\n//     firebaseAuth\n//       .createUserWithEmailAndPassword(email, password)\n//       .then(result => {\n//         firebaseAuth.onAuthStateChanged(user => {\n//           result.user.updateProfile({\n//             displayName: name\n//           })\n//           if (user) {\n//             userEmail = user.email\n//             // let userName = user.displayName\n//             loggedIn = true\n//             dispatch({\n//               type: \"SIGNUP_WITH_EMAIL\",\n//               payload: {\n//                 email: userEmail,\n//                 name,\n//                 isSignedIn: loggedIn\n//               }\n//             })\n//             dispatch({\n//               type: \"LOGIN_WITH_EMAIL\",\n//               payload: {\n//                 email: userEmail,\n//                 name\n//               }\n//             })\n//           }\n//         })\n//         history.push(\"/\")\n//       })\n//       .catch(error => {\n//         console.log(error.message)\n//       })\n//   }\n// }\nexport var signupWithJWT=function signupWithJWT(email,password,name){return function(dispatch){axios.post(\"/api/authenticate/register/user\",{email:email,password:password,name:name}).then(function(response){var loggedInUser;if(response.data){loggedInUser=response.data.user;localStorage.setItem(\"token\",response.data.token);dispatch({type:\"LOGIN_WITH_JWT\",payload:{loggedInUser:loggedInUser,loggedInWith:\"jwt\"}});history.push(\"/\");}}).catch(function(err){return console.log(err);});};};","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/redux/actions/auth/registerActions.js"],"names":["history","axios","signupWithJWT","email","password","name","dispatch","post","then","response","loggedInUser","data","user","localStorage","setItem","token","type","payload","loggedInWith","push","catch","err","console","log"],"mappings":"AAAA;AACA,OAASA,OAAT,KAAwB,kBAAxB,CACA;AACA;AACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAQC,QAAR,CAAkBC,IAAlB,CAA2B,CACtD,MAAO,UAAAC,QAAQ,CAAI,CACjBL,KAAK,CACFM,IADH,CACQ,iCADR,CAC2C,CACvCJ,KAAK,CAAEA,KADgC,CAEvCC,QAAQ,CAAEA,QAF6B,CAGvCC,IAAI,CAAEA,IAHiC,CAD3C,EAMGG,IANH,CAMQ,SAAAC,QAAQ,CAAI,CAChB,GAAIC,CAAAA,YAAJ,CAEA,GAAGD,QAAQ,CAACE,IAAZ,CAAiB,CAEfD,YAAY,CAAGD,QAAQ,CAACE,IAAT,CAAcC,IAA7B,CAEAC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BL,QAAQ,CAACE,IAAT,CAAcI,KAA5C,EAEAT,QAAQ,CAAC,CACPU,IAAI,CAAE,gBADC,CAEPC,OAAO,CAAE,CAAEP,YAAY,CAAZA,YAAF,CAAgBQ,YAAY,CAAE,KAA9B,CAFF,CAAD,CAAR,CAKAlB,OAAO,CAACmB,IAAR,CAAa,GAAb,EACD,CAEF,CAvBH,EAwBGC,KAxBH,CAwBS,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EAxBZ,EA0BD,CA3BD,CA4BD,CA7BM","sourcesContent":["// import * as firebase from \"firebase/app\"\nimport { history } from \"../../../history\"\n// import \"firebase/auth\"\n// import \"firebase/database\"\nimport axios from \"axios\"\n// import { config } from \"../../../authServices/firebase/firebaseConfig\"\n\n// Init firebase if not already initialized\n// if (!firebase.apps.length) {\n//   firebase.initializeApp(config)\n// }\n\n// let firebaseAuth = firebase.auth()\n\n// export const signupWithFirebase = (email, password, name) => {\n//   return dispatch => {\n//     let userEmail = null,\n//       loggedIn = false\n//     // userName = null\n\n//     firebaseAuth\n//       .createUserWithEmailAndPassword(email, password)\n//       .then(result => {\n//         firebaseAuth.onAuthStateChanged(user => {\n//           result.user.updateProfile({\n//             displayName: name\n//           })\n//           if (user) {\n//             userEmail = user.email\n//             // let userName = user.displayName\n//             loggedIn = true\n//             dispatch({\n//               type: \"SIGNUP_WITH_EMAIL\",\n//               payload: {\n//                 email: userEmail,\n//                 name,\n//                 isSignedIn: loggedIn\n//               }\n//             })\n//             dispatch({\n//               type: \"LOGIN_WITH_EMAIL\",\n//               payload: {\n//                 email: userEmail,\n//                 name\n//               }\n//             })\n//           }\n//         })\n//         history.push(\"/\")\n//       })\n//       .catch(error => {\n//         console.log(error.message)\n//       })\n//   }\n// }\n\nexport const signupWithJWT = (email, password, name) => {\n  return dispatch => {\n    axios\n      .post(\"/api/authenticate/register/user\", {\n        email: email,\n        password: password,\n        name: name\n      })\n      .then(response => {\n        var loggedInUser\n\n        if(response.data){\n\n          loggedInUser = response.data.user\n\n          localStorage.setItem(\"token\", response.data.token)\n\n          dispatch({\n            type: \"LOGIN_WITH_JWT\",\n            payload: { loggedInUser, loggedInWith: \"jwt\" }\n          })\n\n          history.push(\"/\")\n        }\n\n      })\n      .catch(err => console.log(err))\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}