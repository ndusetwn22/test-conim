{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Card,CardHeader,CardTitle,CardBody,Button}from\"reactstrap\";import Toggle from\"react-toggle\";var SwitchControlled=/*#__PURE__*/function(_React$Component){_inherits(SwitchControlled,_React$Component);var _super=_createSuper(SwitchControlled);function SwitchControlled(){var _this;_classCallCheck(this,SwitchControlled);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isChecked:false};_this.handleSwitchChange=function(){_this.setState({isChecked:!_this.state.isChecked});};return _this;}_createClass(SwitchControlled,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(CardTitle,null,\"React Toggle Controlled\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"label\",{className:\"react-toggle-wrapper\"},/*#__PURE__*/React.createElement(Toggle,{checked:this.state.isChecked,onChange:this.handleSwitchChange,name:\"controlledSwitch\",value:\"yes\"}),/*#__PURE__*/React.createElement(Button.Ripple,{color:\"primary\",onClick:this.handleSwitchChange,size:\"sm\"},this.state.isChecked?\"True\":\"False\"))));}}]);return SwitchControlled;}(React.Component);export default SwitchControlled;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/forms/form-elements/switch/SwitchControlled.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Button","Toggle","SwitchControlled","state","isChecked","handleSwitchChange","setState","Component"],"mappings":"4nBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,SAA3B,CAAsCC,QAAtC,CAAgDC,MAAhD,KAA8D,YAA9D,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,C,GAEMC,CAAAA,gB,+WACJC,K,CAAQ,CACNC,SAAS,CAAE,KADL,C,OAIRC,kB,CAAqB,UAAM,CACzB,MAAKC,QAAL,CAAc,CACZF,SAAS,CAAE,CAAC,MAAKD,KAAL,CAAWC,SADX,CAAd,EAGD,C,kEAED,iBAAS,CACP,mBACE,oBAAC,IAAD,mBACE,oBAAC,UAAD,mBACE,oBAAC,SAAD,gCADF,CADF,cAIE,oBAAC,QAAD,mBACE,6BAAO,SAAS,CAAC,sBAAjB,eACE,oBAAC,MAAD,EACE,OAAO,CAAE,KAAKD,KAAL,CAAWC,SADtB,CAEE,QAAQ,CAAE,KAAKC,kBAFjB,CAGE,IAAI,CAAC,kBAHP,CAIE,KAAK,CAAC,KAJR,EADF,cAOE,oBAAC,MAAD,CAAQ,MAAR,EACE,KAAK,CAAC,SADR,CAEE,OAAO,CAAE,KAAKA,kBAFhB,CAGE,IAAI,CAAC,IAHP,EAKG,KAAKF,KAAL,CAAWC,SAAX,CAAuB,MAAvB,CAAgC,OALnC,CAPF,CADF,CAJF,CADF,CAwBD,C,8BApC4BT,KAAK,CAACY,S,EAsCrC,cAAeL,CAAAA,gBAAf","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody, Button } from \"reactstrap\"\nimport Toggle from \"react-toggle\"\n\nclass SwitchControlled extends React.Component {\n  state = {\n    isChecked: false\n  }\n\n  handleSwitchChange = () => {\n    this.setState({\n      isChecked: !this.state.isChecked\n    })\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>React Toggle Controlled</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <label className=\"react-toggle-wrapper\">\n            <Toggle\n              checked={this.state.isChecked}\n              onChange={this.handleSwitchChange}\n              name=\"controlledSwitch\"\n              value=\"yes\"\n            />\n            <Button.Ripple\n              color=\"primary\"\n              onClick={this.handleSwitchChange}\n              size=\"sm\"\n            >\n              {this.state.isChecked ? \"True\" : \"False\"}\n            </Button.Ripple>\n          </label>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default SwitchControlled\n"]},"metadata":{},"sourceType":"module"}