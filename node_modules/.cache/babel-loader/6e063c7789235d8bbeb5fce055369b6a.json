{"ast":null,"code":"import _objectSpread from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Input,Button,FormGroup,UncontrolledDropdown,DropdownItem,DropdownMenu,DropdownToggle}from\"reactstrap\";import{X,Info,Star,Tag,Check}from\"react-feather\";import Checkbox from\"../../../components/@vuexy/checkbox/CheckboxesVuexy\";import PerfectScrollbar from\"react-perfect-scrollbar\";import{connect}from\"react-redux\";import{starTask,completeTask,importantTask,updateTask,updateLabel,addNewTask}from\"../../../redux/actions/todo/index\";var TaskSidebar=/*#__PURE__*/function(_React$Component){_inherits(TaskSidebar,_React$Component);var _super=_createSuper(TaskSidebar);function TaskSidebar(){var _this;_classCallCheck(this,TaskSidebar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={taskToUpdate:null,taskTitle:\"\",taskDesc:\"\",taskStatus:false,taskStarred:false,taskImportant:false,newTask:{title:\"\",desc:\"\",tags:[],isCompleted:false,isImportant:false,isStarred:false}};_this.handleNewTaskTags=function(tag){var tagsArr=_this.state.newTask.tags;if(tagsArr.includes(tag)){tagsArr.splice(tagsArr.indexOf(tag),1);}else{tagsArr.push(tag);}_this.setState(_objectSpread(_objectSpread({},_this.state.newTask),{},{tags:tag}));};_this.renderTags=function(taskArr){return taskArr.map(function(tag,i){return/*#__PURE__*/React.createElement(\"div\",{className:\"chip mb-0 mr-50\",key:i},/*#__PURE__*/React.createElement(\"div\",{className:\"chip-body\"},/*#__PURE__*/React.createElement(\"span\",{className:\"chip-text\"},/*#__PURE__*/React.createElement(\"span\",{className:\"bullet bullet-\".concat(tag===\"backend\"?\"warning\":tag===\"doc\"?\"success\":tag===\"bug\"?\"danger\":\"primary\",\" bullet-xs\")}),/*#__PURE__*/React.createElement(\"span\",{className:\"text-capitalize ml-25\"},tag))));});};return _this;}_createClass(TaskSidebar,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(this.props.taskToUpdate!==null&&this.state.taskToUpdate!==this.props.taskToUpdate||this.props.taskToUpdate!==null&&this.state.taskStatus!==this.props.taskToUpdate.isCompleted||this.props.taskToUpdate!==null&&this.state.taskStarred!==this.props.taskToUpdate.isStarred||this.props.taskToUpdate!==null&&this.state.taskImportant!==this.props.taskToUpdate.isImportant){this.setState({taskToUpdate:this.props.taskToUpdate,taskTitle:this.props.taskToUpdate.title,taskDesc:this.props.taskToUpdate.desc,taskStatus:this.props.taskToUpdate.isCompleted,taskStarred:this.props.taskToUpdate.isStarred,taskImportant:this.props.taskToUpdate.isImportant});}else{return;}}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,taskToUpdate=_this$state.taskToUpdate,taskTitle=_this$state.taskTitle,taskDesc=_this$state.taskDesc,newTask=_this$state.newTask,taskStatus=_this$state.taskStatus;return/*#__PURE__*/React.createElement(\"div\",{className:\"task-sidebar \".concat(this.props.addTaskState===true?\"show\":\"\")},/*#__PURE__*/React.createElement(\"div\",{className:\"task-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between\"},/*#__PURE__*/React.createElement(\"div\",{className:\"task-type-title text-bold-600\"},/*#__PURE__*/React.createElement(\"h3\",null,this.props.taskToUpdate&&this.props.taskToUpdate.id?\"Update Task\":\"Add Task\")),/*#__PURE__*/React.createElement(\"div\",{className:\"close-icon\"},/*#__PURE__*/React.createElement(X,{className:\"cursor-pointer\",size:20,onClick:function onClick(){return _this2.props.addTask(\"close\");}})))),/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{className:\"task-body\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between mb-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mark-complete\"},this.props.taskToUpdate&&this.props.taskToUpdate.id&&/*#__PURE__*/React.createElement(Checkbox,{color:\"primary\",className:\"user-checkbox\",icon:/*#__PURE__*/React.createElement(Check,{className:\"vx-icon\",size:15}),label:\"\",checked:taskStatus,onChange:function onChange(e){_this2.props.completeTask(_this2.props.taskToUpdate);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"task-actions\"},/*#__PURE__*/React.createElement(Info,{size:20,className:\"mr-50 \".concat(this.props.taskToUpdate!==null&&this.state.taskImportant||newTask.isImportant?\"text-success\":\"\"),onClick:function onClick(){if(_this2.props.taskToUpdate!==null){_this2.props.importantTask(_this2.props.taskToUpdate);}else{_this2.setState({newTask:_objectSpread(_objectSpread({},_this2.state.newTask),{},{isImportant:!_this2.state.newTask.isImportant})});}}}),/*#__PURE__*/React.createElement(Star,{size:20,className:\"mr-50 \".concat(this.props.taskToUpdate!==null&&this.state.taskStarred||newTask.isStarred?\"text-warning\":\"\"),onClick:function onClick(){if(_this2.props.taskToUpdate!==null){_this2.props.starTask(_this2.props.taskToUpdate);}else{_this2.setState({newTask:_objectSpread(_objectSpread({},_this2.state.newTask),{},{isStarred:!_this2.state.newTask.isStarred})});}}}),/*#__PURE__*/React.createElement(UncontrolledDropdown,{className:\"d-inline-block\"},/*#__PURE__*/React.createElement(DropdownToggle,{tag:\"span\"},/*#__PURE__*/React.createElement(Tag,{className:\"mr-50\",size:20})),/*#__PURE__*/React.createElement(DropdownMenu,{tag:\"ul\",right:true},/*#__PURE__*/React.createElement(DropdownItem,{tag:\"li\"},/*#__PURE__*/React.createElement(Checkbox,{color:\"primary\",className:\"user-checkbox\",icon:/*#__PURE__*/React.createElement(Check,{className:\"vx-icon\",size:12}),label:\"Frontend\",checked:this.props.taskToUpdate!==null&&this.props.taskToUpdate.tags.includes(\"frontend\")||newTask.tags.includes(\"frontend\")?true:false,size:\"sm\",onChange:function onChange(e){e.stopPropagation();if(_this2.props.taskToUpdate!==null)_this2.props.updateLabel(taskToUpdate.id,\"frontend\");else _this2.handleNewTaskTags(\"frontend\");}})),/*#__PURE__*/React.createElement(DropdownItem,{tag:\"li\"},/*#__PURE__*/React.createElement(Checkbox,{color:\"primary\",className:\"user-checkbox\",icon:/*#__PURE__*/React.createElement(Check,{className:\"vx-icon\",size:12}),label:\"Backend\",checked:this.props.taskToUpdate!==null&&this.props.taskToUpdate.tags.includes(\"backend\")||newTask.tags.includes(\"backend\")?true:false,size:\"sm\",onClick:function onClick(e){return e.stopPropagation();},onChange:function onChange(e){e.stopPropagation();if(_this2.props.taskToUpdate!==null)_this2.props.updateLabel(taskToUpdate.id,\"backend\");else _this2.handleNewTaskTags(\"backend\");}})),/*#__PURE__*/React.createElement(DropdownItem,{tag:\"li\"},/*#__PURE__*/React.createElement(Checkbox,{color:\"primary\",className:\"user-checkbox\",icon:/*#__PURE__*/React.createElement(Check,{className:\"vx-icon\",size:12}),label:\"Doc\",checked:this.props.taskToUpdate!==null&&this.props.taskToUpdate.tags.includes(\"doc\")||newTask.tags.includes(\"doc\")?true:false,size:\"sm\",onClick:function onClick(e){return e.stopPropagation();},onChange:function onChange(e){e.stopPropagation();if(_this2.props.taskToUpdate!==null)_this2.props.updateLabel(taskToUpdate.id,\"doc\");else _this2.handleNewTaskTags(\"doc\");}})),/*#__PURE__*/React.createElement(DropdownItem,{tag:\"li\"},/*#__PURE__*/React.createElement(Checkbox,{color:\"primary\",className:\"user-checkbox\",icon:/*#__PURE__*/React.createElement(Check,{className:\"vx-icon\",size:12}),label:\"Bug\",checked:this.props.taskToUpdate!==null&&this.props.taskToUpdate.tags.includes(\"bug\")||newTask.tags.includes(\"bug\")?true:false,size:\"sm\",onClick:function onClick(e){return e.stopPropagation();},onChange:function onChange(e){e.stopPropagation();if(_this2.props.taskToUpdate!==null)_this2.props.updateLabel(taskToUpdate.id,\"bug\");else _this2.handleNewTaskTags(\"bug\");}})))))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Title\",value:this.props.taskToUpdate!==null?taskTitle:newTask.title,onChange:function onChange(e){if(_this2.props.taskToUpdate!==null){_this2.setState({taskTitle:e.target.value});}else{_this2.setState({newTask:_objectSpread(_objectSpread({},_this2.state.newTask),{},{title:e.target.value})});}}})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Input,{type:\"textarea\",placeholder:\"Description\",rows:\"5\",value:this.props.taskToUpdate!==null?taskDesc:newTask.desc,onChange:function onChange(e){if(_this2.props.taskToUpdate!==null){_this2.setState({taskDesc:e.target.value});}else{_this2.setState({newTask:_objectSpread(_objectSpread({},_this2.state.newTask),{},{desc:e.target.value})});}}})),/*#__PURE__*/React.createElement(\"div\",{className:\"chip-wrapper my-1 d-flex flex-wrap\"},this.props.taskToUpdate!==null&&this.props.taskToUpdate.tags&&this.props.taskToUpdate.tags.length>0?this.renderTags(this.props.taskToUpdate.tags):null),/*#__PURE__*/React.createElement(\"hr\",{className:\"my-2\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Button.Ripple,{className:\"mr-50\",color:\"primary\",onClick:function onClick(){if(_this2.props.taskToUpdate!==null){_this2.props.updateTask(taskToUpdate.id,taskTitle,taskDesc);}else{_this2.props.addNewTask(_this2.state.newTask);}_this2.props.addTask(\"close\");_this2.setState({newTask:{title:\"\",desc:\"\",tags:[],isCompleted:false,isImportant:false,isStarred:false}});},disabled:taskTitle.length>0||newTask.title.length>0?false:true},taskToUpdate&&taskToUpdate.id&&this.props.taskToUpdate!==null?\"Update\":\"Add\"),/*#__PURE__*/React.createElement(Button.Ripple,{color:\"light\",outline:true,onClick:function onClick(){_this2.props.addTask(\"close\");_this2.setState({newTask:{title:\"\",desc:\"\",tags:[],isCompleted:false,isImportant:false,isStarred:false}});}},\"Cancel\")))));}}]);return TaskSidebar;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{app:state.todoApp};};export default connect(mapStateToProps,{completeTask:completeTask,importantTask:importantTask,starTask:starTask,updateTask:updateTask,updateLabel:updateLabel,addNewTask:addNewTask})(TaskSidebar);","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/apps/todo/TaskSidebar.js"],"names":["React","Input","Button","FormGroup","UncontrolledDropdown","DropdownItem","DropdownMenu","DropdownToggle","X","Info","Star","Tag","Check","Checkbox","PerfectScrollbar","connect","starTask","completeTask","importantTask","updateTask","updateLabel","addNewTask","TaskSidebar","state","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","title","desc","tags","isCompleted","isImportant","isStarred","handleNewTaskTags","tag","tagsArr","includes","splice","indexOf","push","setState","renderTags","taskArr","map","i","prevProps","prevState","props","addTaskState","id","addTask","e","stopPropagation","target","value","length","Component","mapStateToProps","app","todoApp"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Input,\n  Button,\n  FormGroup,\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from \"reactstrap\"\nimport { X, Info, Star, Tag, Check } from \"react-feather\"\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport {\n  starTask,\n  completeTask,\n  importantTask,\n  updateTask,\n  updateLabel,\n  addNewTask\n} from \"../../../redux/actions/todo/index\"\nclass TaskSidebar extends React.Component {\n\n  // static getDerivedStateFromProps (props, state){\n  //   if (\n  //    ( props.taskToUpdate !== null &&\n  //     props.taskToUpdate.title !== state.taskTitle) ||\n  //     (props.taskToUpdate !== null && props.taskToUpdate.isCompleted !== state.newTask.isCompleted)\n  //   ) {\n  //     let todosArr = props.app.todo.todos\n  //     let receivedTask =\n  //       props.taskToUpdate !== null ? props.taskToUpdate : 1\n  //     let filteredTask = todosArr.filter(i => i.id === receivedTask.id)\n  //     let taskToUpdate, taskTitle, taskDesc\n  //     filteredTask.map(task => {\n  //       return (\n  //         (taskToUpdate = task),\n  //         (taskTitle = task.title),\n  //         (taskDesc = task.desc)\n  //       )\n  //     })\n  //     return {\n  //       taskToUpdate,\n  //       taskTitle,\n  //       taskDesc\n  //     }\n  //   }\n  //   return null\n  // }\n\n  state = {\n    taskToUpdate: null,\n    taskTitle: \"\",\n    taskDesc: \"\",\n    taskStatus : false,\n    taskStarred : false,\n    taskImportant  : false,\n    newTask: {\n      title: \"\",\n      desc: \"\",\n      tags: [],\n      isCompleted: false,\n      isImportant: false,\n      isStarred: false\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(\n      (this.props.taskToUpdate !== null && this.state.taskToUpdate !== this.props.taskToUpdate) || \n      (this.props.taskToUpdate !== null && this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\n      (this.props.taskToUpdate !== null && this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\n      (this.props.taskToUpdate !== null && this.state.taskImportant !== this.props.taskToUpdate.isImportant) \n      ){\n      this.setState({ \n        taskToUpdate : this.props.taskToUpdate, \n        taskTitle :  this.props.taskToUpdate.title,\n        taskDesc :  this.props.taskToUpdate.desc,\n        taskStatus : this.props.taskToUpdate.isCompleted,\n        taskStarred : this.props.taskToUpdate.isStarred,\n        taskImportant : this.props.taskToUpdate.isImportant\n      })\n    }\n    else{\n      return \n    }\n  }\n  \n\n\n  handleNewTaskTags = tag => {\n    let tagsArr = this.state.newTask.tags\n    if (tagsArr.includes(tag)) {\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\n    } else {\n      tagsArr.push(tag)\n    }\n    this.setState({\n      ...this.state.newTask,\n      tags: tag\n    })\n  }\n\n  renderTags = taskArr => {\n    return taskArr.map((tag, i) => (\n      <div className=\"chip mb-0 mr-50\" key={i}>\n        <div className=\"chip-body\">\n          <span className=\"chip-text\">\n            <span\n              className={`bullet bullet-${\n                tag === \"backend\"\n                  ? \"warning\"\n                  : tag === \"doc\"\n                  ? \"success\"\n                  : tag === \"bug\"\n                  ? \"danger\"\n                  : \"primary\"\n              } bullet-xs`}\n            />\n            <span className=\"text-capitalize ml-25\">{tag}</span>\n          </span>\n        </div>\n      </div>\n    ))\n  }\n\n  render() {\n    const { taskToUpdate, taskTitle, taskDesc, newTask, taskStatus } = this.state\n\n    return (\n      <div\n        className={`task-sidebar ${\n          this.props.addTaskState === true ? \"show\" : \"\"\n        }`}\n      >\n        <div className=\"task-header\">\n          <div className=\"d-flex justify-content-between\">\n            <div className=\"task-type-title text-bold-600\">\n              <h3>\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\n                  ? \"Update Task\"\n                  : \"Add Task\"}\n              </h3>\n            </div>\n            <div className=\"close-icon\">\n              <X\n                className=\"cursor-pointer\"\n                size={20}\n                onClick={() => this.props.addTask(\"close\")}\n              />\n            </div>\n          </div>\n        </div>\n        <PerfectScrollbar>\n          <div className=\"task-body\">\n            <div className=\"d-flex justify-content-between mb-2\">\n              <div className=\"mark-complete\">\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && <Checkbox\n                  color=\"primary\"\n                  className=\"user-checkbox\"\n                  icon={<Check className=\"vx-icon\" size={15} />}\n                  label={\"\"}\n                  checked={ taskStatus }                  \n                  onChange={e =>  {\n                    this.props.completeTask(this.props.taskToUpdate)\n                  }}\n                />}\n              </div>\n              <div className=\"task-actions\">\n                <Info\n                  size={20}\n                  className={`mr-50 ${\n                      (this.props.taskToUpdate !== null && this.state.taskImportant) ||\n                      newTask.isImportant \n                      ? \"text-success\"\n                      : \"\"\n                  }`}\n                  onClick={() => {\n                    if (this.props.taskToUpdate !== null){\n                      this.props.importantTask(this.props.taskToUpdate)\n                    }\n                    else{\n                      this.setState({\n                        newTask : {\n                          ...this.state.newTask,\n                          isImportant : !this.state.newTask.isImportant\n                        }\n                      })\n                    }\n                      \n                  }}\n                />\n                <Star\n                  size={20}\n                  className={`mr-50 ${\n                      (this.props.taskToUpdate !== null  && this.state.taskStarred) ||\n                      newTask.isStarred \n                      ? \"text-warning\"\n                      : \"\"\n                  }`}\n                  onClick={() => {\n                    if (this.props.taskToUpdate !== null){\n                      this.props.starTask(this.props.taskToUpdate)\n                    }\n                    else{\n                      this.setState({\n                        newTask : {\n                          ...this.state.newTask,\n                          isStarred : !this.state.newTask.isStarred\n                        }\n                      })\n                    }\n                    \n                  }}\n                />\n                <UncontrolledDropdown className=\"d-inline-block\">\n                  <DropdownToggle tag=\"span\">\n                    <Tag className=\"mr-50\" size={20} />\n                  </DropdownToggle>\n                  <DropdownMenu tag=\"ul\" right>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Frontend\"}\n                        checked={\n                            (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"frontend\") )||\n                            (newTask.tags.includes(\"frontend\"))\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onChange={e => {\n                          e.stopPropagation()\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"frontend\")\n                          else this.handleNewTaskTags(\"frontend\")\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Backend\"}\n                        checked={\n                            (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"backend\"))||\n                            (newTask.tags.includes(\"backend\"))\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={e => e.stopPropagation()}\n                        onChange={e => {\n                          e.stopPropagation()\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"backend\")\n                            else this.handleNewTaskTags(\"backend\")\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Doc\"}\n                        checked={\n                            (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"doc\"))||\n                            (newTask.tags.includes(\"doc\"))\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={e => e.stopPropagation()}\n                        onChange={e => {\n                          e.stopPropagation()\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"doc\")\n                          else this.handleNewTaskTags(\"doc\")\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Bug\"}\n                        checked={\n                            (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"bug\"))||\n                            (newTask.tags.includes(\"bug\"))\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={e => e.stopPropagation()}\n                        onChange={e => {\n                          e.stopPropagation()\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"bug\")\n                          else this.handleNewTaskTags(\"bug\")\n                        }}\n                      />\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </div>\n            </div>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                placeholder=\"Title\"\n                value={\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\n                }\n                onChange={e => {\n                  if (this.props.taskToUpdate !== null) {\n                    this.setState({\n                      taskTitle : e.target.value\n                    })\n                  }else{\n                    this.setState({ newTask : {\n                      ...this.state.newTask,\n                      title : e.target.value\n                    } })\n                  }\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Input\n                type=\"textarea\"\n                placeholder=\"Description\"\n                rows=\"5\"\n                value={\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\n                }\n                onChange={e => {\n                  if (this.props.taskToUpdate !== null){\n                    this.setState({\n                      taskDesc: e.target.value\n                    })\n                  }\n                  else{\n                    this.setState({ newTask : {\n                      ...this.state.newTask,\n                      desc : e.target.value\n                    } })\n                  }\n                }}\n              />\n            </FormGroup>\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\n              {this.props.taskToUpdate !== null &&\n              this.props.taskToUpdate.tags &&\n              this.props.taskToUpdate.tags.length > 0\n                ? this.renderTags(this.props.taskToUpdate.tags)\n                : null}\n            </div>\n\n            <hr className=\"my-2\" />\n            <div className=\"d-flex justify-content-end\">\n              <Button.Ripple\n                className=\"mr-50\"\n                color=\"primary\"\n                onClick={() => {\n                  if (this.props.taskToUpdate !== null) {\n                    this.props.updateTask(taskToUpdate.id, taskTitle, taskDesc)\n                  } else {\n                    this.props.addNewTask(this.state.newTask)\n                  }\n                  this.props.addTask(\"close\")\n                  this.setState({\n                    newTask: {\n                      title: \"\",\n                      desc: \"\",\n                      tags: [],\n                      isCompleted: false,\n                      isImportant: false,\n                      isStarred: false\n                    }\n                  })\n                }}\n                disabled={\n                  taskTitle.length > 0 || newTask.title.length > 0\n                    ? false\n                    : true\n                }\n              >\n                {taskToUpdate &&\n                taskToUpdate.id &&\n                this.props.taskToUpdate !== null\n                  ? \"Update\"\n                  : \"Add\"}\n              </Button.Ripple>\n              <Button.Ripple\n                color=\"light\"\n                outline\n                onClick={() => {\n                  this.props.addTask(\"close\")\n                  this.setState({\n                    newTask: {\n                      title: \"\",\n                      desc: \"\",\n                      tags: [],\n                      isCompleted: false,\n                      isImportant: false,\n                      isStarred: false\n                    }\n                  })\n                }}\n              >\n                Cancel\n              </Button.Ripple>\n            </div> \n          </div>\n        </PerfectScrollbar>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    app: state.todoApp\n  }\n}\n\nexport default connect(mapStateToProps, {\n  completeTask,\n  importantTask,\n  starTask,\n  updateTask,\n  updateLabel,\n  addNewTask\n})(TaskSidebar)\n"]},"metadata":{},"sourceType":"module"}