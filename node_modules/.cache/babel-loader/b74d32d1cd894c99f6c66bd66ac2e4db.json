{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/views/tables/react-tables/FilteringTable.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport ReactTable from \"react-table\";\nimport matchSorter from \"match-sorter\";\nimport { makeData } from \"./TableData\";\n\nvar FilterTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(FilterTable, _React$Component);\n\n  function FilterTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FilterTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FilterTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: makeData()\n    };\n    return _this;\n  }\n\n  _createClass(FilterTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.state.data;\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, \"Seraching and Sorting\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ReactTable, {\n        data: data,\n        filterable: true,\n        defaultFilterMethod: function defaultFilterMethod(filter, row) {\n          return String(row[filter.id]) === filter.value;\n        },\n        columns: [{\n          Header: \"Name\",\n          columns: [{\n            Header: \"First Name\",\n            accessor: \"firstName\",\n            filterMethod: function filterMethod(filter, row) {\n              return row[filter.id].startsWith(filter.value) && row[filter.id].endsWith(filter.value);\n            }\n          }, {\n            Header: \"Last Name\",\n            id: \"lastName\",\n            accessor: function accessor(d) {\n              return d.lastName;\n            },\n            filterMethod: function filterMethod(filter, rows) {\n              return matchSorter(rows, filter.value, {\n                keys: [\"lastName\"]\n              });\n            },\n            filterAll: true\n          }]\n        }, {\n          Header: \"Info\",\n          columns: [{\n            Header: \"Age\",\n            accessor: \"age\"\n          }, {\n            Header: \"Over 21\",\n            accessor: \"age\",\n            id: \"over\",\n            Cell: function Cell(_ref) {\n              var value = _ref.value;\n              return value >= 21 ? \"Yes\" : \"No\";\n            },\n            filterMethod: function filterMethod(filter, row) {\n              if (filter.value === \"all\") {\n                return true;\n              }\n\n              if (filter.value === \"true\") {\n                return row[filter.id] >= 21;\n              }\n\n              return row[filter.id] < 21;\n            },\n            Filter: function Filter(_ref2) {\n              var filter = _ref2.filter,\n                  _onChange = _ref2.onChange;\n              return /*#__PURE__*/React.createElement(\"select\", {\n                onChange: function onChange(event) {\n                  return _onChange(event.target.value);\n                },\n                style: {\n                  width: \"100%\"\n                },\n                value: filter ? filter.value : \"all\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"option\", {\n                value: \"all\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 25\n                }\n              }, \"Show All\"), /*#__PURE__*/React.createElement(\"option\", {\n                value: \"true\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }\n              }, \"Can Drink\"), /*#__PURE__*/React.createElement(\"option\", {\n                value: \"false\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 25\n                }\n              }, \"Can't Drink\"));\n            }\n          }]\n        }],\n        defaultPageSize: 10,\n        className: \"-striped -highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return FilterTable;\n}(React.Component);\n\nexport default FilterTable;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/tables/react-tables/FilteringTable.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","ReactTable","matchSorter","makeData","FilterTable","state","data","filter","row","String","id","value","Header","columns","accessor","filterMethod","startsWith","endsWith","d","lastName","rows","keys","filterAll","Cell","Filter","onChange","event","target","width","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport ReactTable from \"react-table\"\nimport matchSorter from \"match-sorter\"\nimport { makeData } from \"./TableData\"\n\nclass FilterTable extends React.Component {\n  state = {\n    data: makeData()\n  }\n  render() {\n    const { data } = this.state\n\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Seraching and Sorting</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <ReactTable\n            data={data}\n            filterable\n            defaultFilterMethod={(filter, row) =>\n              String(row[filter.id]) === filter.value\n            }\n            columns={[\n              {\n                Header: \"Name\",\n                columns: [\n                  {\n                    Header: \"First Name\",\n                    accessor: \"firstName\",\n                    filterMethod: (filter, row) =>\n                      row[filter.id].startsWith(filter.value) &&\n                      row[filter.id].endsWith(filter.value)\n                  },\n                  {\n                    Header: \"Last Name\",\n                    id: \"lastName\",\n                    accessor: d => d.lastName,\n                    filterMethod: (filter, rows) =>\n                      matchSorter(rows, filter.value, { keys: [\"lastName\"] }),\n                    filterAll: true\n                  }\n                ]\n              },\n              {\n                Header: \"Info\",\n                columns: [\n                  {\n                    Header: \"Age\",\n                    accessor: \"age\"\n                  },\n                  {\n                    Header: \"Over 21\",\n                    accessor: \"age\",\n                    id: \"over\",\n                    Cell: ({ value }) => (value >= 21 ? \"Yes\" : \"No\"),\n                    filterMethod: (filter, row) => {\n                      if (filter.value === \"all\") {\n                        return true\n                      }\n                      if (filter.value === \"true\") {\n                        return row[filter.id] >= 21\n                      }\n                      return row[filter.id] < 21\n                    },\n                    Filter: ({ filter, onChange }) => (\n                      <select\n                        onChange={event => onChange(event.target.value)}\n                        style={{ width: \"100%\" }}\n                        value={filter ? filter.value : \"all\"}\n                      >\n                        <option value=\"all\">Show All</option>\n                        <option value=\"true\">Can Drink</option>\n                        <option value=\"false\">Can't Drink</option>\n                      </select>\n                    )\n                  }\n                ]\n              }\n            ]}\n            defaultPageSize={10}\n            className=\"-striped -highlight\"\n          />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default FilterTable\n"]},"metadata":{},"sourceType":"module"}