{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/views/charts/chart-js/BarChart.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport { Bar } from \"react-chartjs-2\";\nvar $primary = \"#7367F0\",\n    $success = \"#28C76F\",\n    $danger = \"#EA5455\",\n    $warning = \"#FF9F43\",\n    $label_color = \"#1E1E1E\",\n    grid_line_color = \"#dae1e7\";\nvar themeColors = [$primary, $success, $danger, $warning, $label_color];\nvar data = {\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n  datasets: [{\n    label: \"Population (millions)\",\n    data: [2478, 5267, 734, 784, 433],\n    backgroundColor: themeColors,\n    borderColor: \"transparent\"\n  }]\n};\nvar options = {\n  elements: {\n    rectangle: {\n      borderWidth: 2,\n      borderSkipped: \"left\"\n    }\n  },\n  responsive: true,\n  responsiveAnimationDuration: 500,\n  scales: {\n    xAxes: [{\n      display: true,\n      gridLines: {\n        color: grid_line_color\n      },\n      scaleLabel: {\n        display: true\n      }\n    }],\n    yAxes: [{\n      display: true,\n      gridLines: {\n        color: grid_line_color\n      },\n      scaleLabel: {\n        display: true\n      },\n      ticks: {\n        stepSize: 1000\n      }\n    }]\n  },\n  maintainAspectRatio: false,\n  title: {\n    display: true,\n    text: \"Predicted world population (millions) in 2050\"\n  },\n  legend: {\n    display: false\n  }\n};\n\nvar BarCharts = /*#__PURE__*/function (_React$Component) {\n  _inherits(BarCharts, _React$Component);\n\n  function BarCharts() {\n    _classCallCheck(this, BarCharts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BarCharts).apply(this, arguments));\n  }\n\n  _createClass(BarCharts, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, \"Bar Chart\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: data,\n        options: options,\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return BarCharts;\n}(React.Component);\n\nexport default BarCharts;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/charts/chart-js/BarChart.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Bar","$primary","$success","$danger","$warning","$label_color","grid_line_color","themeColors","data","labels","datasets","label","backgroundColor","borderColor","options","elements","rectangle","borderWidth","borderSkipped","responsive","responsiveAnimationDuration","scales","xAxes","display","gridLines","color","scaleLabel","yAxes","ticks","stepSize","maintainAspectRatio","title","text","legend","BarCharts","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,YAAtD;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,IAAMC,QAAQ,GAAG,SAAjB;AAAA,IACEC,QAAQ,GAAG,SADb;AAAA,IAEEC,OAAO,GAAG,SAFZ;AAAA,IAGEC,QAAQ,GAAG,SAHb;AAAA,IAIEC,YAAY,GAAG,SAJjB;AAAA,IAKEC,eAAe,GAAG,SALpB;AAMA,IAAMC,WAAW,GAAG,CAACN,QAAD,EAAWC,QAAX,EAAqBC,OAArB,EAA8BC,QAA9B,EAAwCC,YAAxC,CAApB;AAEA,IAAMG,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,EAA6B,eAA7B,EAA8C,eAA9C,CADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,uBADT;AAEEH,IAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAFR;AAGEI,IAAAA,eAAe,EAAEL,WAHnB;AAIEM,IAAAA,WAAW,EAAE;AAJf,GADQ;AAFC,CAAb;AAYA,IAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE;AACTC,MAAAA,WAAW,EAAE,CADJ;AAETC,MAAAA,aAAa,EAAE;AAFN;AADH,GADI;AAOdC,EAAAA,UAAU,EAAE,IAPE;AAQdC,EAAAA,2BAA2B,EAAE,GARf;AAUdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,OAAO,EAAE,IADX;AAEEC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAEnB;AADE,OAFb;AAKEoB,MAAAA,UAAU,EAAE;AACVH,QAAAA,OAAO,EAAE;AADC;AALd,KADK,CADD;AAYNI,IAAAA,KAAK,EAAE,CACL;AACEJ,MAAAA,OAAO,EAAE,IADX;AAEEC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAEnB;AADE,OAFb;AAKEoB,MAAAA,UAAU,EAAE;AACVH,QAAAA,OAAO,EAAE;AADC,OALd;AAQEK,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL;AART,KADK;AAZD,GAVM;AAqCdC,EAAAA,mBAAmB,EAAE,KArCP;AAsCdC,EAAAA,KAAK,EAAE;AACLR,IAAAA,OAAO,EAAE,IADJ;AAELS,IAAAA,IAAI,EAAE;AAFD,GAtCO;AA0CdC,EAAAA,MAAM,EAAE;AAAEV,IAAAA,OAAO,EAAE;AAAX;AA1CM,CAAhB;;IA6CMW,S;;;;;;;;;;;6BACK;AACP,0BACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,eAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE1B,IAAX;AAAiB,QAAA,OAAO,EAAEM,OAA1B;AAAmC,QAAA,MAAM,EAAE,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF;AAUD;;;;EAZqBnB,KAAK,CAACwC,S;;AAc9B,eAAeD,SAAf","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { Bar } from \"react-chartjs-2\"\n\nconst $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $label_color = \"#1E1E1E\",\n  grid_line_color = \"#dae1e7\"\nconst themeColors = [$primary, $success, $danger, $warning, $label_color]\n\nconst data = {\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n  datasets: [\n    {\n      label: \"Population (millions)\",\n      data: [2478, 5267, 734, 784, 433],\n      backgroundColor: themeColors,\n      borderColor: \"transparent\"\n    }\n  ]\n}\n\nconst options = {\n  elements: {\n    rectangle: {\n      borderWidth: 2,\n      borderSkipped: \"left\"\n    }\n  },\n  responsive: true,\n  responsiveAnimationDuration: 500,\n\n  scales: {\n    xAxes: [\n      {\n        display: true,\n        gridLines: {\n          color: grid_line_color\n        },\n        scaleLabel: {\n          display: true\n        }\n      }\n    ],\n    yAxes: [\n      {\n        display: true,\n        gridLines: {\n          color: grid_line_color\n        },\n        scaleLabel: {\n          display: true\n        },\n        ticks: {\n          stepSize: 1000\n        }\n      }\n    ]\n  },\n  maintainAspectRatio: false,\n  title: {\n    display: true,\n    text: \"Predicted world population (millions) in 2050\"\n  },\n  legend: { display: false }\n}\n\nclass BarCharts extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Bar Chart</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Bar data={data} options={options} height={300} />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default BarCharts\n"]},"metadata":{},"sourceType":"module"}