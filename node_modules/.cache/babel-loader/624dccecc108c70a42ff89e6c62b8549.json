{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/components/reactstrap/popovers/PopoverControlled.js\";\nimport React from \"react\";\nimport { Button, Popover, PopoverHeader, PopoverBody, Card, CardHeader, CardBody, CardTitle, TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { Eye, Code } from \"react-feather\";\nimport { popoverControlled } from \"./PopoverSourceCode\";\n\nvar PopoverControlled = /*#__PURE__*/function (_React$Component) {\n  _inherits(PopoverControlled, _React$Component);\n\n  function PopoverControlled() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PopoverControlled);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PopoverControlled)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTab: \"1\",\n      popoverOpen: false\n    };\n\n    _this.toggleTab = function (tab) {\n      if (_this.state.activeTab !== tab) {\n        _this.setState({\n          activeTab: tab\n        });\n      }\n    };\n\n    _this.togglePopover = function () {\n      _this.setState({\n        popoverOpen: !_this.state.popoverOpen\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PopoverControlled, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, \"Controlled Popover\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"views\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        tabs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"1\"\n        }),\n        onClick: function onClick() {\n          _this2.toggleTab(\"1\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Eye, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"2\"\n        }),\n        onClick: function onClick() {\n          _this2.toggleTab(\"2\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Code, {\n        size: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      })))))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, \"For controlled Popover you'll have to manage state of component.controlled Popover require \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 52\n        }\n      }, \"isOpen\"), \" and\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }, \"toggle\"), \" props to work.\"), /*#__PURE__*/React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        className: \"justify-content-center d-flex\",\n        tabId: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button.Ripple, {\n        color: \"primary\",\n        outline: true,\n        id: \"controlledPopover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, \"Controlled\"), /*#__PURE__*/React.createElement(Popover, {\n        placement: \"top\",\n        target: \"controlledPopover\",\n        isOpen: this.state.popoverOpen,\n        toggle: this.togglePopover,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(PopoverHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }, \"Controlled Popover\"), /*#__PURE__*/React.createElement(PopoverBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }\n      }, \"Macaroon chocolate candy. I love carrot cake gingerbread cake lemon drops. Muffin sugar plum marzipan pie.\"))), /*#__PURE__*/React.createElement(TabPane, {\n        className: \"component-code\",\n        tabId: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, popoverControlled)))));\n    }\n  }]);\n\n  return PopoverControlled;\n}(React.Component);\n\nexport default PopoverControlled;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/components/reactstrap/popovers/PopoverControlled.js"],"names":["React","Button","Popover","PopoverHeader","PopoverBody","Card","CardHeader","CardBody","CardTitle","TabContent","TabPane","Nav","NavItem","NavLink","classnames","Eye","Code","popoverControlled","PopoverControlled","state","activeTab","popoverOpen","toggleTab","tab","setState","togglePopover","active","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Button,\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { popoverControlled } from \"./PopoverSourceCode\"\n\nclass PopoverControlled extends React.Component {\n  state = {\n    activeTab: \"1\",\n    popoverOpen: false\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  togglePopover = () => {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Controlled Popover</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              For controlled Popover you'll have to manage state of\n              component.controlled Popover require <code>isOpen</code> and{\" \"}\n              <code>toggle</code> props to work.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane className=\"justify-content-center d-flex\" tabId=\"1\">\n                <Button.Ripple color=\"primary\" outline id=\"controlledPopover\">\n                  Controlled\n                </Button.Ripple>\n                <Popover\n                  placement=\"top\"\n                  target=\"controlledPopover\"\n                  isOpen={this.state.popoverOpen}\n                  toggle={this.togglePopover}\n                >\n                  <PopoverHeader>Controlled Popover</PopoverHeader>\n                  <PopoverBody>\n                    Macaroon chocolate candy. I love carrot cake gingerbread\n                    cake lemon drops. Muffin sugar plum marzipan pie.\n                  </PopoverBody>\n                </Popover>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {popoverControlled}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default PopoverControlled\n"]},"metadata":{},"sourceType":"module"}