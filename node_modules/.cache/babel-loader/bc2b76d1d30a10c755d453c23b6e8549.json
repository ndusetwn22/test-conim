{"ast":null,"code":"import _classCallCheck from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Card,CardHeader,CardTitle,CardBody,Table}from\"reactstrap\";// eslint-disable-next-line\nimport prism from\"prismjs\";var ContextualColors=/*#__PURE__*/function(_React$Component){_inherits(ContextualColors,_React$Component);var _super=_createSuper(ContextualColors);function ContextualColors(){_classCallCheck(this,ContextualColors);return _super.apply(this,arguments);}_createClass(ContextualColors,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(CardTitle,null,\"Contextual colors\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",null,\"Convey meaning through color with a handful of emphasis utility classes. These may also be applied to links and will darken on hover just like our default link styles.\")),/*#__PURE__*/React.createElement(Table,{className:\"table-white-space\",responsive:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Example\"),/*#__PURE__*/React.createElement(\"th\",null,\"Classes\"),/*#__PURE__*/React.createElement(\"th\",null,\"Snippet\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"text-muted\"},\"Muted Text\"),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"code\",null,\".text-muted\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-markup\"},\"&ltp class=&quottext-muted&quot&gt Your Text. &lt/p&gt\")))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"text-primary\"},\"Primary Text\"),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"code\",null,\".text-primary\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-markup\"},\"&ltp class=&quottext-primary&quot&gt Your Text. &lt/p&gt\")))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"text-success\"},\"Success Text\"),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"code\",null,\".text-success\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-markup\"},\"&ltp class=&quottext-success&quot&gt Your Text. &lt/p&gt\")))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"text-danger\"},\"Danger Text\"),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"code\",null,\".text-danger\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-markup\"},\"&ltp class=&quottext-danger&quot&gt Your Text. &lt/p&gt\")))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"text-info\"},\"Info Text\"),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"code\",null,\".text-info\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-markup\"},\"&ltp class=&quottext-info&quot&gt Your Text. &lt/p&gt\")))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"text-warning\"},\"Warning Text\"),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"code\",null,\".text-warning\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"pre\",null,/*#__PURE__*/React.createElement(\"code\",{className:\"language-markup\"},\"&ltp class=&quottext-warning&quot&gt Your Text. &lt/p&gt\")))))),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",null,\"You can also use text lighten, darken and accent classes. You don't have to prefix \",/*#__PURE__*/React.createElement(\"code\",null,\"text-\"),\" if you're using darken, lighten and accent classes.\"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"code\",null,\".colorName .lighten-*\"),\"For lighten text color, this two classes needed. Here *: 1,2,3,4 for lighten color options.\"),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"code\",null,\".colorName .darken-*\"),\"For darken text color, this two classes needed. Here *: 1,2,3,4 for darken color options.\"),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"code\",null,\".colorName .accent-*\"),\"For accent text color, this two classes needed. Here *: 1,2,3,4 for accent color options.\"))));}}]);return ContextualColors;}(React.Component);export default ContextualColors;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/ui-elements/text-utilities/ContextualColors.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Table","prism","ContextualColors","Component"],"mappings":"4nBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,SAA3B,CAAsCC,QAAtC,CAAgDC,KAAhD,KAA6D,YAA7D,CACA;AACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,C,GAEMC,CAAAA,gB,2RACJ,iBAAS,CACP,mBACE,oBAAC,IAAD,mBACE,oBAAC,UAAD,mBACE,oBAAC,SAAD,0BADF,CADF,cAIE,oBAAC,QAAD,mBACE,uMADF,CAJF,cAWE,oBAAC,KAAD,EAAO,SAAS,CAAC,mBAAjB,CAAqC,UAAU,KAA/C,eACE,8CACE,2CACE,wCADF,cAEE,wCAFF,cAGE,wCAHF,CADF,CADF,cAQE,8CACE,2CACE,0BAAI,SAAS,CAAC,YAAd,eADF,cAEE,2CACE,8CADF,CAFF,cAKE,2CACE,4CACE,4BAAM,SAAS,CAAC,iBAAhB,2DADF,CADF,CALF,CADF,cAcE,2CACE,0BAAI,SAAS,CAAC,cAAd,iBADF,cAEE,2CACE,gDADF,CAFF,cAKE,2CACE,4CACE,4BAAM,SAAS,CAAC,iBAAhB,6DADF,CADF,CALF,CAdF,cA4BE,2CACE,0BAAI,SAAS,CAAC,cAAd,iBADF,cAEE,2CACE,gDADF,CAFF,cAKE,2CACE,4CACE,4BAAM,SAAS,CAAC,iBAAhB,6DADF,CADF,CALF,CA5BF,cA0CE,2CACE,0BAAI,SAAS,CAAC,aAAd,gBADF,cAEE,2CACE,+CADF,CAFF,cAKE,2CACE,4CACE,4BAAM,SAAS,CAAC,iBAAhB,4DADF,CADF,CALF,CA1CF,cAwDE,2CACE,0BAAI,SAAS,CAAC,WAAd,cADF,cAEE,2CACE,6CADF,CAFF,cAKE,2CACE,4CACE,4BAAM,SAAS,CAAC,iBAAhB,0DADF,CADF,CALF,CAxDF,cAqEE,2CACE,0BAAI,SAAS,CAAC,cAAd,iBADF,cAEE,2CACE,gDADF,CAFF,cAKE,2CACE,4CACE,4BAAM,SAAS,CAAC,iBAAhB,6DADF,CADF,CALF,CArEF,CARF,CAXF,cAwGE,oBAAC,QAAD,mBACE,gIAEiB,wCAFjB,wDADF,cAME,2CACE,2CACE,wDADF,+FADF,cAKE,2CACE,uDADF,6FALF,cASE,2CACE,uDADF,6FATF,CANF,CAxGF,CADF,CAgID,C,8BAlI4BP,KAAK,CAACQ,S,EAoIrC,cAAeD,CAAAA,gBAAf","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody, Table } from \"reactstrap\"\n// eslint-disable-next-line\nimport prism from \"prismjs\"\n\nclass ContextualColors extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Contextual colors</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <p>\n            Convey meaning through color with a handful of emphasis utility\n            classes. These may also be applied to links and will darken on hover\n            just like our default link styles.\n          </p>\n        </CardBody>\n        <Table className=\"table-white-space\" responsive>\n          <thead>\n            <tr>\n              <th>Example</th>\n              <th>Classes</th>\n              <th>Snippet</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td className=\"text-muted\">Muted Text</td>\n              <td>\n                <code>.text-muted</code>\n              </td>\n              <td>\n                <pre>\n                  <code className=\"language-markup\">\n                    &ltp class=&quottext-muted&quot&gt Your Text. &lt/p&gt\n                  </code>\n                </pre>\n              </td>\n            </tr>\n            <tr>\n              <td className=\"text-primary\">Primary Text</td>\n              <td>\n                <code>.text-primary</code>\n              </td>\n              <td>\n                <pre>\n                  <code className=\"language-markup\">\n                    &ltp class=&quottext-primary&quot&gt Your Text.\n                    &lt/p&gt\n                  </code>\n                </pre>\n              </td>\n            </tr>\n            <tr>\n              <td className=\"text-success\">Success Text</td>\n              <td>\n                <code>.text-success</code>\n              </td>\n              <td>\n                <pre>\n                  <code className=\"language-markup\">\n                    &ltp class=&quottext-success&quot&gt Your Text.\n                    &lt/p&gt\n                  </code>\n                </pre>\n              </td>\n            </tr>\n            <tr>\n              <td className=\"text-danger\">Danger Text</td>\n              <td>\n                <code>.text-danger</code>\n              </td>\n              <td>\n                <pre>\n                  <code className=\"language-markup\">\n                    &ltp class=&quottext-danger&quot&gt Your Text.\n                    &lt/p&gt\n                  </code>\n                </pre>\n              </td>\n            </tr>\n            <tr>\n              <td className=\"text-info\">Info Text</td>\n              <td>\n                <code>.text-info</code>\n              </td>\n              <td>\n                <pre>\n                  <code className=\"language-markup\">\n                    &ltp class=&quottext-info&quot&gt Your Text. &lt/p&gt\n                  </code>\n                </pre>\n              </td>\n            </tr>\n            <tr>\n              <td className=\"text-warning\">Warning Text</td>\n              <td>\n                <code>.text-warning</code>\n              </td>\n              <td>\n                <pre>\n                  <code className=\"language-markup\">\n                    &ltp class=&quottext-warning&quot&gt Your Text.\n                    &lt/p&gt\n                  </code>\n                </pre>\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n        <CardBody>\n          <p>\n            You can also use text lighten, darken and accent classes. You don't\n            have to prefix <code>text-</code> if you're using darken, lighten\n            and accent classes.\n          </p>\n          <ul>\n            <li>\n              <code>.colorName .lighten-*</code>For lighten text color, this two\n              classes needed. Here *: 1,2,3,4 for lighten color options.\n            </li>\n            <li>\n              <code>.colorName .darken-*</code>For darken text color, this two\n              classes needed. Here *: 1,2,3,4 for darken color options.\n            </li>\n            <li>\n              <code>.colorName .accent-*</code>For accent text color, this two\n              classes needed. Here *: 1,2,3,4 for accent color options.\n            </li>\n          </ul>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default ContextualColors\n"]},"metadata":{},"sourceType":"module"}