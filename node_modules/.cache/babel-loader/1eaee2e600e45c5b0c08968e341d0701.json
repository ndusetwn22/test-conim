{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/views/forms/form-elements/switch/SwitchControlled.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody, Button } from \"reactstrap\";\nimport Toggle from \"react-toggle\";\n\nvar SwitchControlled = /*#__PURE__*/function (_React$Component) {\n  _inherits(SwitchControlled, _React$Component);\n\n  function SwitchControlled() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SwitchControlled);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SwitchControlled)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isChecked: false\n    };\n\n    _this.handleSwitchChange = function () {\n      _this.setState({\n        isChecked: !_this.state.isChecked\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SwitchControlled, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, \"React Toggle Controlled\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"react-toggle-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Toggle, {\n        checked: this.state.isChecked,\n        onChange: this.handleSwitchChange,\n        name: \"controlledSwitch\",\n        value: \"yes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button.Ripple, {\n        color: \"primary\",\n        onClick: this.handleSwitchChange,\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, this.state.isChecked ? \"True\" : \"False\"))));\n    }\n  }]);\n\n  return SwitchControlled;\n}(React.Component);\n\nexport default SwitchControlled;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/forms/form-elements/switch/SwitchControlled.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Button","Toggle","SwitchControlled","state","isChecked","handleSwitchChange","setState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,EAAgDC,MAAhD,QAA8D,YAA9D;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAEMC,gB;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;;UAIRC,kB,GAAqB,YAAM;AACzB,YAAKC,QAAL,CAAc;AACZF,QAAAA,SAAS,EAAE,CAAC,MAAKD,KAAL,CAAWC;AADX,OAAd;AAGD,K;;;;;;;6BAEQ;AACP,0BACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CADF,eAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,SADtB;AAEE,QAAA,QAAQ,EAAE,KAAKC,kBAFjB;AAGE,QAAA,IAAI,EAAC,kBAHP;AAIE,QAAA,KAAK,EAAC,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAOE,oBAAC,MAAD,CAAQ,MAAR;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAE,KAAKA,kBAFhB;AAGE,QAAA,IAAI,EAAC,IAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,KAAKF,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC,OALnC,CAPF,CADF,CAJF,CADF;AAwBD;;;;EApC4BT,KAAK,CAACY,S;;AAsCrC,eAAeL,gBAAf","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody, Button } from \"reactstrap\"\nimport Toggle from \"react-toggle\"\n\nclass SwitchControlled extends React.Component {\n  state = {\n    isChecked: false\n  }\n\n  handleSwitchChange = () => {\n    this.setState({\n      isChecked: !this.state.isChecked\n    })\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>React Toggle Controlled</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <label className=\"react-toggle-wrapper\">\n            <Toggle\n              checked={this.state.isChecked}\n              onChange={this.handleSwitchChange}\n              name=\"controlledSwitch\"\n              value=\"yes\"\n            />\n            <Button.Ripple\n              color=\"primary\"\n              onClick={this.handleSwitchChange}\n              size=\"sm\"\n            >\n              {this.state.isChecked ? \"True\" : \"False\"}\n            </Button.Ripple>\n          </label>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default SwitchControlled\n"]},"metadata":{},"sourceType":"module"}