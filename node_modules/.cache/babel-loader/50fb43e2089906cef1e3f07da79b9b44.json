{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\rombak-react-vuexy2\\\\src\\\\components\\\\reactstrap\\\\collapse\\\\Accordion.js\";\nimport React from \"react\";\nimport { Collapse, Card, CardHeader, CardBody, CardTitle, TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { Eye, Code, ChevronDown } from \"react-feather\";\nimport { accordion } from \"./CollapseSourceCode\";\nconst collapseItems = [{\n  id: 1,\n  title: \"Accordion Item 1\",\n  content: \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n}, {\n  id: 2,\n  title: \"Accordion Item 2\",\n  content: \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n}, {\n  id: 3,\n  title: \"Accordion Item 3\",\n  content: \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n}, {\n  id: 4,\n  title: \"Accordion Item 4\",\n  content: \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n}];\n\nclass Accordion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: \"1\",\n      collapseID: \"\",\n      status: \"Closed\"\n    };\n\n    this.toggleTab = tab => {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    };\n\n    this.toggleCollapse = collapseID => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n      }));\n    };\n\n    this.onEntered = id => {\n      if (id === this.state.collapseID) this.setState({\n        status: \"Opened\"\n      });\n    };\n\n    this.onEntering = id => {\n      if (id === this.state.collapseID) this.setState({\n        status: \"Opening...\"\n      });\n    };\n\n    this.onExited = id => {\n      if (id === this.state.collapseID) this.setState({\n        status: \"Closed\"\n      });\n    };\n\n    this.onExiting = id => {\n      if (id === this.state.collapseID) this.setState({\n        status: \"Closing...\"\n      });\n    };\n  }\n\n  render() {\n    const accordionItems = collapseItems.map(collapseItem => {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: collapseItem.id,\n        onClick: () => this.toggleCollapse(collapseItem.id),\n        className: classnames({\n          \"collapse-collapsed\": this.state.status === \"Closed\" && this.state.collapseID === collapseItem.id,\n          \"collapse-shown\": this.state.status === \"Opened\" && this.state.collapseID === collapseItem.id,\n          closing: this.state.status === \"Closing...\" && this.state.collapseID === collapseItem.id,\n          opening: this.state.status === \"Opening...\" && this.state.collapseID === collapseItem.id\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        className: \"lead collapse-title collapsed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, collapseItem.title), /*#__PURE__*/React.createElement(ChevronDown, {\n        size: 15,\n        className: \"collapse-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Collapse, {\n        isOpen: collapseItem.id === this.state.collapseID,\n        onEntering: () => this.onEntering(collapseItem.id),\n        onEntered: () => this.onEntered(collapseItem.id),\n        onExiting: () => this.onExiting(collapseItem.id),\n        onExited: () => this.onExited(collapseItem.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, collapseItem.content)));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"Accordion\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"views\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      tabs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === \"1\"\n      }),\n      onClick: () => {\n        this.toggleTab(\"1\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Eye, {\n      size: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === \"2\"\n      }),\n      onClick: () => {\n        this.toggleTab(\"2\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Code, {\n      size: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"You may want to open one item at a time for that you can use accordion.\"), /*#__PURE__*/React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vx-collapse collapse-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, accordionItems)), /*#__PURE__*/React.createElement(TabPane, {\n      className: \"component-code\",\n      tabId: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, accordion)))));\n  }\n\n}\n\nexport default Accordion;","map":{"version":3,"sources":["E:/react/rombak-react-vuexy2/src/components/reactstrap/collapse/Accordion.js"],"names":["React","Collapse","Card","CardHeader","CardBody","CardTitle","TabContent","TabPane","Nav","NavItem","NavLink","classnames","Eye","Code","ChevronDown","accordion","collapseItems","id","title","content","Accordion","Component","state","activeTab","collapseID","status","toggleTab","tab","setState","toggleCollapse","prevState","onEntered","onEntering","onExited","onExiting","render","accordionItems","map","collapseItem","closing","opening","active"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { accordion } from \"./CollapseSourceCode\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass Accordion extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseID: \"\",\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }))\n  }\n  onEntered = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const accordionItems = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          key={collapseItem.id}\n          onClick={() => this.toggleCollapse(collapseItem.id)}\n          className={classnames({\n            \"collapse-collapsed\":\n              this.state.status === \"Closed\" &&\n              this.state.collapseID === collapseItem.id,\n            \"collapse-shown\":\n              this.state.status === \"Opened\" &&\n              this.state.collapseID === collapseItem.id,\n            closing:\n              this.state.status === \"Closing...\" &&\n              this.state.collapseID === collapseItem.id,\n            opening:\n              this.state.status === \"Opening...\" &&\n              this.state.collapseID === collapseItem.id\n          })}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n            <ChevronDown size={15} className=\"collapse-icon\" />\n          </CardHeader>\n          <Collapse\n            isOpen={collapseItem.id === this.state.collapseID}\n            onEntering={() => this.onEntering(collapseItem.id)}\n            onEntered={() => this.onEntered(collapseItem.id)}\n            onExiting={() => this.onExiting(collapseItem.id)}\n            onExited={() => this.onExited(collapseItem.id)}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              You may want to open one item at a time for that you can use\n              accordion.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse collapse-bordered\">\n                  {accordionItems}\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {accordion}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default Accordion\n"]},"metadata":{},"sourceType":"module"}