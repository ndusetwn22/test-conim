{"ast":null,"code":"import axios from \"axios\";\nimport { history } from \"../../../history\"; // Get Initial Emails\n\nexport const getEmails = routeParams => {\n  return async dispatch => {\n    await axios.get(\"api/email/mails\", {\n      params: routeParams\n    }).then(result => {\n      dispatch({\n        type: \"GET_MAILS\",\n        mails: result.data,\n        routeParams\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const StarEmail = id => {\n  return async dispatch => {\n    await axios.post(\"/api/email/set-starred\", {\n      mailId: id\n    }).then(result => {\n      dispatch({\n        type: \"SET_STARRED\",\n        mailId: id\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const searchMail = val => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: \"SEARCH_MAIL\",\n      query: val\n    });\n  };\n};\nexport const selectMail = id => {\n  return dispatch => {\n    dispatch({\n      type: \"SELECT_MAIL\",\n      id\n    });\n  };\n};\nexport const selectAllMails = () => {\n  return dispatch => {\n    dispatch({\n      type: \"SELECT_ALL_MAILS\"\n    });\n  };\n};\nexport const deselectAllMails = () => {\n  return dispatch => {\n    dispatch({\n      type: \"DESELECT_ALL_MAILS\"\n    });\n  };\n};\nexport const moveMail = (to, id) => {\n  return async (dispatch, getState) => {\n    const selectedEmails = !id ? getState().emailApp.mails.selectedEmails : [id];\n    const routeParams = getState().emailApp.mails.params;\n    await axios.post(\"/api/email/move-mails\", {\n      selectedEmails,\n      mailFolder: to\n    }).then(() => {\n      dispatch({\n        type: \"MOVE_MAIL\"\n      });\n      dispatch(getEmails(routeParams));\n    }).catch(err => console.log(err));\n  };\n};\nexport const unreadMails = unreadFlag => {\n  return async (dispatch, getState) => {\n    const selectedEmails = getState().emailApp.mails.selectedEmails;\n    await axios.post(\"api/email/mark-unread\", {\n      emailIds: selectedEmails,\n      unreadFlag: unreadFlag\n    }).then(response => {\n      dispatch({\n        type: \"SET_UNREAD\",\n        unreadFlag,\n        id: selectedEmails\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const setLabel = label => {\n  return async (dispatch, getState) => {\n    const selectedEmails = getState().emailApp.mails.selectedEmails;\n    const routeParams = getState().emailApp.mails.params;\n    await axios.post(\"/api/email/set-labels\", {\n      emailIds: selectedEmails,\n      label: label\n    }).then(response => {\n      dispatch({\n        type: \"SET_LABELS\",\n        label,\n        response\n      });\n      dispatch(getEmails(routeParams));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const changeFilter = filter => {\n  return dispatch => {\n    dispatch({\n      type: \"CHANGE_FILTER\",\n      filter\n    });\n    history.push(`/email/${filter}`);\n    dispatch(getEmails({\n      filter\n    }));\n  };\n};","map":{"version":3,"sources":["E:/react/rombak-react-vuexy2/src/redux/actions/email/index.js"],"names":["axios","history","getEmails","routeParams","dispatch","get","params","then","result","type","mails","data","catch","err","console","log","StarEmail","id","post","mailId","searchMail","val","getState","query","selectMail","selectAllMails","deselectAllMails","moveMail","to","selectedEmails","emailApp","mailFolder","unreadMails","unreadFlag","emailIds","response","setLabel","label","error","changeFilter","filter","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB,C,CACA;;AACA,OAAO,MAAMC,SAAS,GAAGC,WAAW,IAAI;AACtC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMJ,KAAK,CACRK,GADG,CACC,iBADD,EACoB;AACtBC,MAAAA,MAAM,EAAEH;AADc,KADpB,EAIHI,IAJG,CAIEC,MAAM,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,WADC;AAEPC,QAAAA,KAAK,EAAEF,MAAM,CAACG,IAFP;AAGPR,QAAAA;AAHO,OAAD,CAAR;AAKD,KAVG,EAWHS,KAXG,CAWGC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXV,CAAN;AAYD,GAbD;AAcD,CAfM;AAiBP,OAAO,MAAMG,SAAS,GAAGC,EAAE,IAAI;AAC7B,SAAO,MAAMb,QAAN,IAAkB;AACvB,UAAMJ,KAAK,CACRkB,IADG,CACE,wBADF,EAC4B;AAC9BC,MAAAA,MAAM,EAAEF;AADsB,KAD5B,EAIHV,IAJG,CAIEC,MAAM,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,aADC;AAEPU,QAAAA,MAAM,EAAEF;AAFD,OAAD,CAAR;AAID,KATG,EAUHL,KAVG,CAUGC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVV,CAAN;AAWD,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAMO,UAAU,GAAGC,GAAG,IAAI;AAC/B,SAAO,CAACjB,QAAD,EAAWkB,QAAX,KAAwB;AAC7BlB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,aADC;AAEPc,MAAAA,KAAK,EAAEF;AAFA,KAAD,CAAR;AAID,GALD;AAMD,CAPM;AASP,OAAO,MAAMG,UAAU,GAAGP,EAAE,IAAI;AAC9B,SAAOb,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,aADC;AAEPQ,MAAAA;AAFO,KAAD,CAAR;AAID,GALD;AAMD,CAPM;AASP,OAAO,MAAMQ,cAAc,GAAG,MAAM;AAClC,SAAOrB,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMiB,gBAAgB,GAAG,MAAM;AACpC,SAAOtB,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMkB,QAAQ,GAAG,CAACC,EAAD,EAAKX,EAAL,KAAY;AAClC,SAAO,OAAOb,QAAP,EAAiBkB,QAAjB,KAA8B;AACnC,UAAMO,cAAc,GAAG,CAACZ,EAAD,GAAMK,QAAQ,GAAGQ,QAAX,CAAoBpB,KAApB,CAA0BmB,cAAhC,GAAiD,CAACZ,EAAD,CAAxE;AACA,UAAMd,WAAW,GAAGmB,QAAQ,GAAGQ,QAAX,CAAoBpB,KAApB,CAA0BJ,MAA9C;AACA,UAAMN,KAAK,CACRkB,IADG,CACE,uBADF,EAC2B;AAC7BW,MAAAA,cAD6B;AAE7BE,MAAAA,UAAU,EAAEH;AAFiB,KAD3B,EAKHrB,IALG,CAKE,MAAM;AACVH,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGAL,MAAAA,QAAQ,CAACF,SAAS,CAACC,WAAD,CAAV,CAAR;AACD,KAVG,EAWHS,KAXG,CAWGC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXV,CAAN;AAYD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMmB,WAAW,GAAGC,UAAU,IAAI;AACvC,SAAO,OAAO7B,QAAP,EAAiBkB,QAAjB,KAA8B;AACnC,UAAMO,cAAc,GAAGP,QAAQ,GAAGQ,QAAX,CAAoBpB,KAApB,CAA0BmB,cAAjD;AACA,UAAM7B,KAAK,CACRkB,IADG,CACE,uBADF,EAC2B;AAC7BgB,MAAAA,QAAQ,EAAEL,cADmB;AAE7BI,MAAAA,UAAU,EAAEA;AAFiB,KAD3B,EAKH1B,IALG,CAKE4B,QAAQ,IAAI;AAChB/B,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,YADC;AAEPwB,QAAAA,UAFO;AAGPhB,QAAAA,EAAE,EAAEY;AAHG,OAAD,CAAR;AAKD,KAXG,EAYHjB,KAZG,CAYGC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZV,CAAN;AAaD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMuB,QAAQ,GAAGC,KAAK,IAAI;AAC/B,SAAO,OAAOjC,QAAP,EAAiBkB,QAAjB,KAA8B;AACnC,UAAMO,cAAc,GAAGP,QAAQ,GAAGQ,QAAX,CAAoBpB,KAApB,CAA0BmB,cAAjD;AACA,UAAM1B,WAAW,GAAGmB,QAAQ,GAAGQ,QAAX,CAAoBpB,KAApB,CAA0BJ,MAA9C;AACA,UAAMN,KAAK,CACRkB,IADG,CACE,uBADF,EAC2B;AAC7BgB,MAAAA,QAAQ,EAAEL,cADmB;AAE7BQ,MAAAA,KAAK,EAAEA;AAFsB,KAD3B,EAKH9B,IALG,CAKE4B,QAAQ,IAAI;AAChB/B,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,YAAR;AAAsB4B,QAAAA,KAAtB;AAA6BF,QAAAA;AAA7B,OAAD,CAAR;AACA/B,MAAAA,QAAQ,CAACF,SAAS,CAACC,WAAD,CAAV,CAAR;AACD,KARG,EASHS,KATG,CASG0B,KAAK,IAAI;AACdxB,MAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAZ;AACD,KAXG,CAAN;AAYD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMC,YAAY,GAAGC,MAAM,IAAI;AACpC,SAAOpC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,eAAR;AAAyB+B,MAAAA;AAAzB,KAAD,CAAR;AACAvC,IAAAA,OAAO,CAACwC,IAAR,CAAc,UAASD,MAAO,EAA9B;AACApC,IAAAA,QAAQ,CAACF,SAAS,CAAC;AAAEsC,MAAAA;AAAF,KAAD,CAAV,CAAR;AACD,GAJD;AAKD,CANM","sourcesContent":["import axios from \"axios\"\nimport { history } from \"../../../history\"\n// Get Initial Emails\nexport const getEmails = routeParams => {\n  return async dispatch => {\n    await axios\n      .get(\"api/email/mails\", {\n        params: routeParams\n      })\n      .then(result => {\n        dispatch({\n          type: \"GET_MAILS\",\n          mails: result.data,\n          routeParams\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const StarEmail = id => {\n  return async dispatch => {\n    await axios\n      .post(\"/api/email/set-starred\", {\n        mailId: id\n      })\n      .then(result => {\n        dispatch({\n          type: \"SET_STARRED\",\n          mailId: id\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const searchMail = val => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: \"SEARCH_MAIL\",\n      query: val\n    })\n  }\n}\n\nexport const selectMail = id => {\n  return dispatch => {\n    dispatch({\n      type: \"SELECT_MAIL\",\n      id\n    })\n  }\n}\n\nexport const selectAllMails = () => {\n  return dispatch => {\n    dispatch({\n      type: \"SELECT_ALL_MAILS\"\n    })\n  }\n}\n\nexport const deselectAllMails = () => {\n  return dispatch => {\n    dispatch({\n      type: \"DESELECT_ALL_MAILS\"\n    })\n  }\n}\n\nexport const moveMail = (to, id) => {\n  return async (dispatch, getState) => {\n    const selectedEmails = !id ? getState().emailApp.mails.selectedEmails : [id]\n    const routeParams = getState().emailApp.mails.params\n    await axios\n      .post(\"/api/email/move-mails\", {\n        selectedEmails,\n        mailFolder: to\n      })\n      .then(() => {\n        dispatch({\n          type: \"MOVE_MAIL\"\n        })\n        dispatch(getEmails(routeParams))\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const unreadMails = unreadFlag => {\n  return async (dispatch, getState) => {\n    const selectedEmails = getState().emailApp.mails.selectedEmails\n    await axios\n      .post(\"api/email/mark-unread\", {\n        emailIds: selectedEmails,\n        unreadFlag: unreadFlag\n      })\n      .then(response => {\n        dispatch({\n          type: \"SET_UNREAD\",\n          unreadFlag,\n          id: selectedEmails\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const setLabel = label => {\n  return async (dispatch, getState) => {\n    const selectedEmails = getState().emailApp.mails.selectedEmails\n    const routeParams = getState().emailApp.mails.params\n    await axios\n      .post(\"/api/email/set-labels\", {\n        emailIds: selectedEmails,\n        label: label\n      })\n      .then(response => {\n        dispatch({ type: \"SET_LABELS\", label, response })\n        dispatch(getEmails(routeParams))\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n}\n\nexport const changeFilter = filter => {\n  return dispatch => {\n    dispatch({ type: \"CHANGE_FILTER\", filter })\n    history.push(`/email/${filter}`)\n    dispatch(getEmails({ filter }))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}