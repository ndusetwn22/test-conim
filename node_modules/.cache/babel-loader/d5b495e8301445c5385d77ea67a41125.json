{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\rombak-react-vuexy2\\\\src\\\\extensions\\\\sweet-alert\\\\SweetAlertTypes.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\";\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass SweetAlertTypes extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      successAlert: false,\n      errorAlert: false,\n      infoAlert: false,\n      warningAlert: false\n    };\n\n    this.handleAlert = (state, value) => {\n      this.setState({\n        [state]: value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"Types\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"SweetAlert comes with 4 built-in types which will show a corresponding icon animation: \\\"warning\\\", \\\"error\\\", \\\"success\\\" and \\\"info\\\".\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-1 mb-1\",\n      color: \"success\",\n      onClick: () => this.handleAlert(\"successAlert\", true),\n      outline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"Success\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-1 mb-1\",\n      color: \"danger\",\n      onClick: () => this.handleAlert(\"errorAlert\", true),\n      outline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \"Error\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-1 mb-1\",\n      color: \"warning\",\n      onClick: () => this.handleAlert(\"warningAlert\", true),\n      outline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Warning\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mb-1\",\n      color: \"info\",\n      onClick: () => this.handleAlert(\"infoAlert\", true),\n      outline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Info\"), /*#__PURE__*/React.createElement(SweetAlert, {\n      success: true,\n      title: \"Success\",\n      show: this.state.successAlert,\n      onConfirm: () => this.handleAlert(\"successAlert\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sweet-alert-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"You clicked the button!\")), /*#__PURE__*/React.createElement(SweetAlert, {\n      error: true,\n      title: \"Error\",\n      show: this.state.errorAlert,\n      onConfirm: () => this.handleAlert(\"errorAlert\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sweet-alert-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"You clicked the button!\")), /*#__PURE__*/React.createElement(SweetAlert, {\n      info: true,\n      title: \"Info!\",\n      show: this.state.infoAlert,\n      onConfirm: () => this.handleAlert(\"infoAlert\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sweet-alert-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"You clicked the button!\")), /*#__PURE__*/React.createElement(SweetAlert, {\n      warning: true,\n      title: \"Warning\",\n      show: this.state.warningAlert,\n      onConfirm: () => this.handleAlert(\"warningAlert\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sweet-alert-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"You clicked the button!\"))));\n  }\n\n}\n\nexport default SweetAlertTypes;","map":{"version":3,"sources":["E:/react/rombak-react-vuexy2/src/extensions/sweet-alert/SweetAlertTypes.js"],"names":["React","Card","CardHeader","CardBody","CardTitle","Button","SweetAlert","SweetAlertTypes","Component","state","successAlert","errorAlert","infoAlert","warningAlert","handleAlert","value","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass SweetAlertTypes extends React.Component {\n  state = {\n   successAlert : false, \n   errorAlert : false, \n   infoAlert : false, \n   warningAlert : false\n  }\n\n  handleAlert = (state, value) => {\n    this.setState({ [state] : value })\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <p>\n          SweetAlert comes with 4 built-in types which will show a corresponding icon animation: \"warning\", \"error\", \"success\" and \"info\". \n        </p>\n        <Button className=\"mr-1 mb-1\" color=\"success\" onClick={() => this.handleAlert(\"successAlert\", true)} outline>Success</Button>\n        <Button className=\"mr-1 mb-1\" color=\"danger\" onClick={() => this.handleAlert(\"errorAlert\", true)} outline>Error</Button>\n        <Button className=\"mr-1 mb-1\" color=\"warning\" onClick={() => this.handleAlert(\"warningAlert\", true)} outline>Warning</Button>\n        <Button className=\"mb-1\" color=\"info\" onClick={() => this.handleAlert(\"infoAlert\", true)} outline>Info</Button>\n        \n\n        <SweetAlert success title=\"Success\"\n          show={this.state.successAlert} \n          onConfirm={() => this.handleAlert(\"successAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">You clicked the button!</p>\n        </SweetAlert>\n\n        <SweetAlert error title=\"Error\"\n          show={this.state.errorAlert} \n          onConfirm={() => this.handleAlert(\"errorAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert info title=\"Info!\"\n          show={this.state.infoAlert} \n          onConfirm={() => this.handleAlert(\"infoAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert warning title=\"Warning\"\n          show={this.state.warningAlert} \n          onConfirm={() => this.handleAlert(\"warningAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n      </CardBody>\n    </Card>\n    )\n  }\n}\n\nexport default SweetAlertTypes"]},"metadata":{},"sourceType":"module"}