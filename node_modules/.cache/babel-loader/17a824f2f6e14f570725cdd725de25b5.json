{"ast":null,"code":"import _objectSpread from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  events: [],\n  sidebar: false,\n  selectedEvent: null\n};\n\nvar calenderReducer = function calenderReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCH_EVENTS\":\n      return _objectSpread({}, state, {\n        events: action.events\n      });\n\n    case \"ADD_EVENT\":\n      state.events.push(action.event);\n      return _objectSpread({}, state);\n\n    case \"UPDATE_EVENT\":\n      var updatedEvents = state.events.map(function (event) {\n        if (event.id === action.event.id) {\n          return action.event;\n        }\n\n        return event;\n      });\n      return _objectSpread({}, state, {\n        events: updatedEvents\n      });\n\n    case \"UPDATE_DRAG\":\n      var eventToDrag = action.event,\n          extractedEvent = state.events.map(function (event) {\n        if (event.id === eventToDrag.id) {\n          return eventToDrag;\n        }\n\n        return event;\n      });\n      return _objectSpread({}, state, {\n        events: extractedEvent\n      });\n\n    case \"EVENT_RESIZE\":\n      var eventToResize = action.event,\n          resizeEvent = state.events.map(function (event) {\n        if (event.id === eventToResize.id) {\n          return eventToResize;\n        }\n\n        return event;\n      });\n      return _objectSpread({}, state, {\n        events: resizeEvent\n      });\n\n    case \"HANDLE_SIDEBAR\":\n      return _objectSpread({}, state, {\n        sidebar: action.status\n      });\n\n    case \"HANDLE_SELECTED_EVENT\":\n      return _objectSpread({}, state, {\n        selectedEvent: action.event\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default calenderReducer;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/redux/reducers/calendar/index.js"],"names":["initialState","events","sidebar","selectedEvent","calenderReducer","state","action","type","push","event","updatedEvents","map","id","eventToDrag","extractedEvent","eventToResize","resizeEvent","status"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,aAAa,EAAE;AAHI,CAArB;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,+BAAYF,KAAZ;AAAmBJ,QAAAA,MAAM,EAAEK,MAAM,CAACL;AAAlC;;AACF,SAAK,WAAL;AACEI,MAAAA,KAAK,CAACJ,MAAN,CAAaO,IAAb,CAAkBF,MAAM,CAACG,KAAzB;AACA,+BAAYJ,KAAZ;;AACF,SAAK,cAAL;AACE,UAAIK,aAAa,GAAGL,KAAK,CAACJ,MAAN,CAAaU,GAAb,CAAiB,UAAAF,KAAK,EAAI;AAC5C,YAAIA,KAAK,CAACG,EAAN,KAAaN,MAAM,CAACG,KAAP,CAAaG,EAA9B,EAAkC;AAChC,iBAAON,MAAM,CAACG,KAAd;AACD;;AACD,eAAOA,KAAP;AACD,OALmB,CAApB;AAMA,+BAAYJ,KAAZ;AAAmBJ,QAAAA,MAAM,EAAES;AAA3B;;AACF,SAAK,aAAL;AACE,UAAIG,WAAW,GAAGP,MAAM,CAACG,KAAzB;AAAA,UACEK,cAAc,GAAGT,KAAK,CAACJ,MAAN,CAAaU,GAAb,CAAiB,UAAAF,KAAK,EAAI;AACzC,YAAIA,KAAK,CAACG,EAAN,KAAaC,WAAW,CAACD,EAA7B,EAAiC;AAC/B,iBAAOC,WAAP;AACD;;AACD,eAAOJ,KAAP;AACD,OALgB,CADnB;AAOA,+BAAYJ,KAAZ;AAAmBJ,QAAAA,MAAM,EAAEa;AAA3B;;AACF,SAAK,cAAL;AACE,UAAIC,aAAa,GAAGT,MAAM,CAACG,KAA3B;AAAA,UACEO,WAAW,GAAGX,KAAK,CAACJ,MAAN,CAAaU,GAAb,CAAiB,UAAAF,KAAK,EAAI;AACtC,YAAIA,KAAK,CAACG,EAAN,KAAaG,aAAa,CAACH,EAA/B,EAAmC;AACjC,iBAAOG,aAAP;AACD;;AACD,eAAON,KAAP;AACD,OALa,CADhB;AAOA,+BAAYJ,KAAZ;AAAmBJ,QAAAA,MAAM,EAAEe;AAA3B;;AACF,SAAK,gBAAL;AACE,+BAAYX,KAAZ;AAAmBH,QAAAA,OAAO,EAAEI,MAAM,CAACW;AAAnC;;AACF,SAAK,uBAAL;AACE,+BAAYZ,KAAZ;AAAmBF,QAAAA,aAAa,EAAEG,MAAM,CAACG;AAAzC;;AACF;AACE,aAAOJ,KAAP;AArCJ;AAuCD,CAxCD;;AA0CA,eAAeD,eAAf","sourcesContent":["const initialState = {\n  events: [],\n  sidebar: false,\n  selectedEvent: null\n}\n\nconst calenderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_EVENTS\":\n      return { ...state, events: action.events }\n    case \"ADD_EVENT\":\n      state.events.push(action.event)\n      return { ...state }\n    case \"UPDATE_EVENT\":\n      let updatedEvents = state.events.map(event => {\n        if (event.id === action.event.id) {\n          return action.event\n        }\n        return event\n      })\n      return { ...state, events: updatedEvents }\n    case \"UPDATE_DRAG\":\n      let eventToDrag = action.event,\n        extractedEvent = state.events.map(event => {\n          if (event.id === eventToDrag.id) {\n            return eventToDrag\n          }\n          return event\n        })\n      return { ...state, events: extractedEvent }\n    case \"EVENT_RESIZE\":\n      let eventToResize = action.event,\n        resizeEvent = state.events.map(event => {\n          if (event.id === eventToResize.id) {\n            return eventToResize\n          }\n          return event\n        })\n      return { ...state, events: resizeEvent }\n    case \"HANDLE_SIDEBAR\":\n      return { ...state, sidebar: action.status }\n    case \"HANDLE_SELECTED_EVENT\":\n      return { ...state, selectedEvent: action.event }\n    default:\n      return state\n  }\n}\n\nexport default calenderReducer\n"]},"metadata":{},"sourceType":"module"}