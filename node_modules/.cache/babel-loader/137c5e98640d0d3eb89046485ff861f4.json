{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/views/ui-elements/syntax-highlighter/LineNumbers.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\n/*eslint-disable */\n\nimport prism from \"prismjs\";\nimport LineNumbers from \"prismjs/plugins/line-numbers/prism-line-numbers\";\nimport \"prismjs/plugins/line-numbers/prism-line-numbers.css\";\n/*eslint-enable */\n\nvar LineNumber = /*#__PURE__*/function (_React$Component) {\n  _inherits(LineNumber, _React$Component);\n\n  function LineNumber() {\n    _classCallCheck(this, LineNumber);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LineNumber).apply(this, arguments));\n  }\n\n  _createClass(LineNumber, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }, \"Line Numbers\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }, \"Line number at the beginning of code lines.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, \"Obviously, this is supposed to work only for code blocks (\", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, \"&ltpre&gt &ltcode&gt\"), \") and not for inline code. Add class line-numbers to your desired \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 48\n        }\n      }, \"&ltpre&gt\"), \" and line-numbers plugin will take care.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, \"Optional: You can specify the data-start (Number) attribute on the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, \"&ltpre&gt\"), \" element. It will shift the line counter.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, \"usage:\"), /*#__PURE__*/React.createElement(\"pre\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"code\", {\n        className: \"language-markup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"\\n<pre class=\\\"line-numbers\\\">\\n  <code class=\\\"language-javascript\\\">\\n   Code here...\\n  </code>\\n</pre>\\n    \")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"my-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Output:\"), /*#__PURE__*/React.createElement(\"pre\", {\n        className: \"line-numbers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"code\", {\n        className: \"language-javascript\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, \" componentDidMount = () => {\\n    if (typeof self==='undefined' || !self.Prism || !self.document) {\\n      return\\n    }\\n  }\"))));\n    }\n  }]);\n\n  return LineNumber;\n}(React.Component);\n\nexport default LineNumber;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/ui-elements/syntax-highlighter/LineNumbers.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","prism","LineNumbers","LineNumber","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,YAAtD;AACA;;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,iDAAxB;AACA,OAAO,qDAAP;AAEA;;IAEMC,U;;;;;;;;;;;6BACK;AACP,0BACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,eAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,qFAGqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHrC,6CAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EACqE,GADrE,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,8CARF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4HADF,CAdF,eAyBE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAzBF,eA0BE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIADF,CA1BF,CAJF,CADF;AA2CD;;;;EA7CsBP,KAAK,CAACQ,S;;AA+C/B,eAAeD,UAAf","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\n/*eslint-disable */\n\nimport prism from \"prismjs\"\nimport LineNumbers from \"prismjs/plugins/line-numbers/prism-line-numbers\"\nimport \"prismjs/plugins/line-numbers/prism-line-numbers.css\"\n\n/*eslint-enable */\n\nclass LineNumber extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Line Numbers</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <p>Line number at the beginning of code lines.</p>\n          <p>\n            Obviously, this is supposed to work only for code blocks (\n            <code>&ltpre&gt &ltcode&gt</code>) and not for inline code. Add\n            class line-numbers to your desired <code>&ltpre&gt</code> and\n            line-numbers plugin will take care.\n          </p>\n          <p>\n            Optional: You can specify the data-start (Number) attribute on the{\" \"}\n            <code>&ltpre&gt</code> element. It will shift the line counter.\n          </p>\n\n          <p>usage:</p>\n          <pre>\n            <code className=\"language-markup\">\n              {`\n<pre class=\"line-numbers\">\n  <code class=\"language-javascript\">\n   Code here...\n  </code>\n</pre>\n    `}\n            </code>\n          </pre>\n          <p className=\"my-1\">Output:</p>\n          <pre className=\"line-numbers\">\n            <code className=\"language-javascript\">\n              {` componentDidMount = () => {\n    if (typeof self==='undefined' || !self.Prism || !self.document) {\n      return\n    }\n  }`}\n            </code>\n          </pre>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default LineNumber\n"]},"metadata":{},"sourceType":"module"}