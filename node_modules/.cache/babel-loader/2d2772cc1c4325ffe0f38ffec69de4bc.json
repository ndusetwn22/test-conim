{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pandusetiawan/Documents/react/df-v1.3 backup build/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pandusetiawan/Documents/react/df-v1.3 backup build/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{history}from\"../../../history\";export var getTodos=function getTodos(routeParams){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"api/apps/todo\",{params:routeParams}).then(function(result){dispatch({type:\"GET_TODOS\",todos:result.data,routeParams:routeParams});}).catch(function(err){return console.log(err);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var completeTask=function completeTask(todo){return function(dispatch){dispatch({type:\"COMPLETE_TASK\",id:todo.id,value:todo.isCompleted});};};export var starTask=function starTask(todo){return function(dispatch){Promise.all([dispatch({type:\"STAR_TASK\",id:todo.id,value:todo.isStarred})]);};};export var importantTask=function importantTask(todo){return function(dispatch){Promise.all([dispatch({type:\"IMPORTANT_TASK\",id:todo.id,value:todo.isImportant})]);};};export var trashTask=function trashTask(id){return function(dispatch,getState){var params=getState().todoApp.todo.routeParam;axios.post(\"/api/app/todo/trash-todo\",id).then(function(response){return dispatch({type:\"TRASH_TASK\",id:id});}).then(dispatch(getTodos(params)));};};export var updateTodo=function updateTodo(todo){var request=axios.post(\"/api/apps/todo/update-todo\",todo);return function(dispatch,getState){var params=getState().todoApp.todo.routeParam;request.then(function(response){Promise.all([dispatch({type:\"UPDATE_TODO\",todos:response.data})]).then(function(){return dispatch(getTodos(params));});});};};export var updateTask=function updateTask(id,title,desc){return function(dispatch){dispatch({type:\"UPDATE_TASK\",id:id,title:title,desc:desc});};};export var updateLabel=function updateLabel(id,label){return function(dispatch,getState){dispatch({type:\"UPDATE_LABEL\",label:label,id:id});};};export var addNewTask=function addNewTask(task){return function(dispatch,getState){var params=getState().todoApp.todo.routeParam;axios.post(\"/api/apps/todo/new-task\",{task:task}).then(function(response){dispatch({type:\"ADD_TASK\",task:task});dispatch(getTodos(params));});};};export var searchTask=function searchTask(val){return function(dispatch){dispatch({type:\"SEARCH_TASK\",val:val});};};export var changeFilter=function changeFilter(filter){return function(dispatch){dispatch({type:\"CHANGE_FILTER\",filter:filter});history.push(\"/todo/\".concat(filter));dispatch(getTodos({filter:filter}));};};","map":null,"metadata":{},"sourceType":"module"}