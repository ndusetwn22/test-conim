{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\rombak-react-vuexy2\\\\src\\\\layouts\\\\VerticalLayout.js\";\nimport React, { PureComponent } from \"react\";\nimport classnames from \"classnames\";\nimport Customizer from \"../components/@vuexy/customizer/Customizer\";\nimport Sidebar from \"./components/menu/vertical-menu/Sidebar\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Footer from \"./components/footer/Footer\";\nimport { connect } from \"react-redux\";\nimport { changeMode, collapseSidebar, changeNavbarColor, changeNavbarType, changeFooterType, changeMenuColor, hideScrollToTop } from \"../redux/actions/customizer/index\";\n\nclass VerticalLayout extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: window.innerWidth,\n      sidebarState: this.props.app.customizer.sidebarCollapsed,\n      layout: this.props.app.customizer.theme,\n      collapsedContent: this.props.app.customizer.sidebarCollapsed,\n      sidebarHidden: false,\n      currentLang: \"en\",\n      appOverlay: false,\n      customizer: false // currRoute: this.props.location.pathname\n\n    };\n    this.collapsedPaths = [];\n    this.mounted = false;\n\n    this.updateWidth = () => {\n      if (this.mounted) {\n        this.setState(prevState => ({\n          width: window.innerWidth\n        }));\n      }\n    };\n\n    this.handleCustomizer = bool => {\n      this.setState({\n        customizer: bool\n      });\n    };\n\n    this.handleCollapsedMenuPaths = item => {\n      let collapsedPaths = this.collapsedPaths;\n\n      if (!collapsedPaths.includes(item)) {\n        collapsedPaths.push(item);\n        this.collapsedPaths = collapsedPaths;\n      }\n    };\n\n    this.toggleSidebarMenu = val => {\n      this.setState({\n        sidebarState: !this.state.sidebarState,\n        collapsedContent: !this.state.collapsedContent\n      });\n    };\n\n    this.sidebarMenuHover = val => {\n      this.setState({\n        sidebarState: val\n      });\n    };\n\n    this.handleSidebarVisibility = () => {\n      if (this.mounted) {\n        if (window !== undefined) {\n          window.addEventListener(\"resize\", () => {\n            if (this.state.sidebarHidden) {\n              this.setState({\n                sidebarHidden: !this.state.sidebarHidden\n              });\n            }\n          });\n        }\n\n        this.setState({\n          sidebarHidden: !this.state.sidebarHidden\n        });\n      }\n    };\n\n    this.handleCurrentLanguage = lang => {\n      this.setState({\n        currentLang: lang\n      });\n    };\n\n    this.handleAppOverlay = value => {\n      if (value.length > 0) {\n        this.setState({\n          appOverlay: true\n        });\n      } else if (value.length < 0 || value === \"\") {\n        this.setState({\n          appOverlay: false\n        });\n      }\n    };\n\n    this.handleAppOverlayClick = () => {\n      this.setState({\n        appOverlay: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    let {\n      location: {\n        pathname\n      },\n      app: {\n        customizer: {\n          theme,\n          direction\n        }\n      }\n    } = this.props;\n\n    if (this.mounted) {\n      if (window !== \"undefined\") {\n        window.addEventListener(\"resize\", this.updateWidth, false);\n      }\n\n      if (this.collapsedPaths.includes(pathname)) {\n        this.props.collapseSidebar(true);\n      }\n\n      let layout = theme;\n      let dir = direction;\n      if (dir === \"rtl\") document.getElementsByTagName(\"html\")[0].setAttribute(\"dir\", \"rtl\");else document.getElementsByTagName(\"html\")[0].setAttribute(\"dir\", \"ltr\");\n      return layout === \"dark\" ? document.body.classList.add(\"dark-layout\") : layout === \"semi-dark\" ? document.body.classList.add(\"semi-dark-layout\") : null;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let {\n      location: {\n        pathname\n      },\n      app: {\n        customizer: {\n          theme,\n          sidebarCollapsed\n        }\n      }\n    } = this.props;\n    let layout = theme;\n\n    if (this.mounted) {\n      if (layout === \"dark\") {\n        document.body.classList.remove(\"semi-dark-layout\");\n        document.body.classList.add(\"dark-layout\");\n      }\n\n      if (layout === \"semi-dark\") {\n        document.body.classList.remove(\"dark-layout\");\n        document.body.classList.add(\"semi-dark-layout\");\n      }\n\n      if (layout !== \"dark\" && layout !== \"semi-dark\") {\n        document.body.classList.remove(\"dark-layout\", \"semi-dark-layout\");\n      }\n\n      if (prevProps.app.customizer.sidebarCollapsed !== this.props.app.customizer.sidebarCollapsed) {\n        this.setState({\n          collapsedContent: sidebarCollapsed,\n          sidebarState: sidebarCollapsed\n        });\n      }\n\n      if (prevProps.app.customizer.sidebarCollapsed === this.props.app.customizer.sidebarCollapsed && pathname !== prevProps.location.pathname && this.collapsedPaths.includes(pathname)) {\n        this.props.collapseSidebar(true);\n      }\n\n      if (prevProps.app.customizer.sidebarCollapsed === this.props.app.customizer.sidebarCollapsed && pathname !== prevProps.location.pathname && !this.collapsedPaths.includes(pathname)) {\n        this.props.collapseSidebar(false);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let appProps = this.props.app.customizer;\n    let menuThemeArr = [\"primary\", \"success\", \"danger\", \"info\", \"warning\", \"dark\"];\n    let sidebarProps = {\n      toggleSidebarMenu: this.props.collapseSidebar,\n      toggle: this.toggleSidebarMenu,\n      sidebarState: this.state.sidebarState,\n      sidebarHover: this.sidebarMenuHover,\n      sidebarVisibility: this.handleSidebarVisibility,\n      visibilityState: this.state.sidebarHidden,\n      activePath: this.props.match.path,\n      collapsedMenuPaths: this.handleCollapsedMenuPaths,\n      currentLang: this.state.currentLang,\n      activeTheme: appProps.menuTheme,\n      collapsed: this.state.collapsedContent,\n      permission: this.props.permission,\n      deviceWidth: this.state.width\n    };\n    let navbarProps = {\n      toggleSidebarMenu: this.toggleSidebarMenu,\n      sidebarState: this.state.sidebarState,\n      sidebarVisibility: this.handleSidebarVisibility,\n      currentLang: this.state.currentLang,\n      changeCurrentLang: this.handleCurrentLanguage,\n      handleAppOverlay: this.handleAppOverlay,\n      appOverlayState: this.state.appOverlay,\n      navbarColor: appProps.navbarColor,\n      navbarType: appProps.navbarType\n    };\n    let footerProps = {\n      footerType: appProps.footerType,\n      hideScrollToTop: appProps.hideScrollToTop\n    };\n    let customizerProps = {\n      customizerState: this.state.customizer,\n      handleCustomizer: this.handleCustomizer,\n      changeMode: this.props.changeMode,\n      changeNavbar: this.props.changeNavbarColor,\n      changeNavbarType: this.props.changeNavbarType,\n      changeFooterType: this.props.changeFooterType,\n      changeMenuTheme: this.props.changeMenuColor,\n      collapseSidebar: this.props.collapseSidebar,\n      hideScrollToTop: this.props.hideScrollToTop,\n      activeMode: appProps.theme,\n      activeNavbar: appProps.navbarColor,\n      navbarType: appProps.navbarType,\n      footerType: appProps.footerType,\n      menuTheme: appProps.menuTheme,\n      scrollToTop: appProps.hideScrollToTop,\n      sidebarState: appProps.sidebarCollapsed\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classnames(`wrapper vertical-layout theme-${appProps.menuTheme}`, {\n        \"menu-collapsed\": this.state.collapsedContent === true && this.state.width >= 1200,\n        \"fixed-footer\": appProps.footerType === \"sticky\",\n        \"navbar-static\": appProps.navbarType === \"static\",\n        \"navbar-sticky\": appProps.navbarType === \"sticky\",\n        \"navbar-floating\": appProps.navbarType === \"floating\",\n        \"navbar-hidden\": appProps.navbarType === \"hidden\",\n        \"theme-primary\": !menuThemeArr.includes(appProps.menuTheme)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, Object.assign({}, sidebarProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classnames(\"app-content content\", {\n        \"show-overlay\": this.state.appOverlay === true\n      }),\n      onClick: this.handleAppOverlayClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, Object.assign({}, navbarProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }, this.props.children)), /*#__PURE__*/React.createElement(Footer, Object.assign({}, footerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }\n    })), appProps.disableCustomizer !== true ? /*#__PURE__*/React.createElement(Customizer, Object.assign({}, customizerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidenav-overlay\",\n      onClick: this.handleSidebarVisibility,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    app: state.customizer\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeMode,\n  collapseSidebar,\n  changeNavbarColor,\n  changeNavbarType,\n  changeFooterType,\n  changeMenuColor,\n  hideScrollToTop\n})(VerticalLayout);","map":{"version":3,"sources":["E:/react/rombak-react-vuexy2/src/layouts/VerticalLayout.js"],"names":["React","PureComponent","classnames","Customizer","Sidebar","Navbar","Footer","connect","changeMode","collapseSidebar","changeNavbarColor","changeNavbarType","changeFooterType","changeMenuColor","hideScrollToTop","VerticalLayout","state","width","window","innerWidth","sidebarState","props","app","customizer","sidebarCollapsed","layout","theme","collapsedContent","sidebarHidden","currentLang","appOverlay","collapsedPaths","mounted","updateWidth","setState","prevState","handleCustomizer","bool","handleCollapsedMenuPaths","item","includes","push","toggleSidebarMenu","val","sidebarMenuHover","handleSidebarVisibility","undefined","addEventListener","handleCurrentLanguage","lang","handleAppOverlay","value","length","handleAppOverlayClick","componentDidMount","location","pathname","direction","dir","document","getElementsByTagName","setAttribute","body","classList","add","componentDidUpdate","prevProps","remove","componentWillUnmount","render","appProps","menuThemeArr","sidebarProps","toggle","sidebarHover","sidebarVisibility","visibilityState","activePath","match","path","collapsedMenuPaths","activeTheme","menuTheme","collapsed","permission","deviceWidth","navbarProps","changeCurrentLang","appOverlayState","navbarColor","navbarType","footerProps","footerType","customizerProps","customizerState","changeNavbar","changeMenuTheme","activeMode","activeNavbar","scrollToTop","children","disableCustomizer","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport classnames from \"classnames\";\nimport Customizer from \"../components/@vuexy/customizer/Customizer\";\nimport Sidebar from \"./components/menu/vertical-menu/Sidebar\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Footer from \"./components/footer/Footer\";\nimport { connect } from \"react-redux\";\nimport {\n  changeMode,\n  collapseSidebar,\n  changeNavbarColor,\n  changeNavbarType,\n  changeFooterType,\n  changeMenuColor,\n  hideScrollToTop\n} from \"../redux/actions/customizer/index\";\n\nclass VerticalLayout extends PureComponent {\n  state = {\n    width: window.innerWidth,\n    sidebarState: this.props.app.customizer.sidebarCollapsed,\n    layout: this.props.app.customizer.theme,\n    collapsedContent: this.props.app.customizer.sidebarCollapsed,\n    sidebarHidden: false,\n    currentLang: \"en\",\n    appOverlay: false,\n    customizer: false,\n    // currRoute: this.props.location.pathname\n  };\n  collapsedPaths = [];\n  mounted = false;\n  updateWidth = () => {\n    if (this.mounted) {\n      this.setState(prevState => ({\n        width: window.innerWidth\n      }));\n    }\n  };\n\n  handleCustomizer = bool => {\n    this.setState({\n      customizer: bool\n    });\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    let {\n      location: { pathname },\n      app: {\n        customizer: { theme, direction }\n      }\n    } = this.props;\n\n    if (this.mounted) {\n      if (window !== \"undefined\") {\n        window.addEventListener(\"resize\", this.updateWidth, false);\n      }\n      if (this.collapsedPaths.includes(pathname)) {\n        this.props.collapseSidebar(true);\n      }\n\n      let layout = theme;\n      let dir = direction;\n      if (dir === \"rtl\")\n        document.getElementsByTagName(\"html\")[0].setAttribute(\"dir\", \"rtl\");\n      else document.getElementsByTagName(\"html\")[0].setAttribute(\"dir\", \"ltr\");\n      return layout === \"dark\"\n        ? document.body.classList.add(\"dark-layout\")\n        : layout === \"semi-dark\"\n        ? document.body.classList.add(\"semi-dark-layout\")\n        : null;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let {\n      location: { pathname },\n      app: {\n        customizer: { theme, sidebarCollapsed }\n      }\n    } = this.props;\n\n    let layout = theme;\n    if (this.mounted) {\n      if (layout === \"dark\") {\n        document.body.classList.remove(\"semi-dark-layout\");\n        document.body.classList.add(\"dark-layout\");\n      }\n      if (layout === \"semi-dark\") {\n        document.body.classList.remove(\"dark-layout\");\n        document.body.classList.add(\"semi-dark-layout\");\n      }\n      if (layout !== \"dark\" && layout !== \"semi-dark\") {\n        document.body.classList.remove(\"dark-layout\", \"semi-dark-layout\");\n      }\n\n      if (\n        prevProps.app.customizer.sidebarCollapsed !==\n        this.props.app.customizer.sidebarCollapsed\n      ) {\n        this.setState({\n          collapsedContent: sidebarCollapsed,\n          sidebarState: sidebarCollapsed\n        });\n      }\n      if (\n        prevProps.app.customizer.sidebarCollapsed ===\n          this.props.app.customizer.sidebarCollapsed &&\n        pathname !== prevProps.location.pathname &&\n        this.collapsedPaths.includes(pathname)\n      ) {\n        this.props.collapseSidebar(true);\n      }\n      if (\n        prevProps.app.customizer.sidebarCollapsed ===\n          this.props.app.customizer.sidebarCollapsed &&\n        pathname !== prevProps.location.pathname &&\n        !this.collapsedPaths.includes(pathname)\n      ) {\n        this.props.collapseSidebar(false);\n      }\n    }\n  }\n\n  handleCollapsedMenuPaths = item => {\n    let collapsedPaths = this.collapsedPaths;\n    if (!collapsedPaths.includes(item)) {\n      collapsedPaths.push(item);\n      this.collapsedPaths = collapsedPaths;\n    }\n  };\n\n  toggleSidebarMenu = val => {\n    this.setState({\n      sidebarState: !this.state.sidebarState,\n      collapsedContent: !this.state.collapsedContent\n    });\n  };\n\n  sidebarMenuHover = val => {\n    this.setState({\n      sidebarState: val\n    });\n  };\n\n  handleSidebarVisibility = () => {\n    if (this.mounted) {\n      if (window !== undefined) {\n        window.addEventListener(\"resize\", () => {\n          if (this.state.sidebarHidden) {\n            this.setState({\n              sidebarHidden: !this.state.sidebarHidden\n            });\n          }\n        });\n      }\n      this.setState({\n        sidebarHidden: !this.state.sidebarHidden\n      });\n    }\n  };\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCurrentLanguage = lang => {\n    this.setState({\n      currentLang: lang\n    });\n  };\n\n  handleAppOverlay = value => {\n    if (value.length > 0) {\n      this.setState({\n        appOverlay: true\n      });\n    } else if (value.length < 0 || value === \"\") {\n      this.setState({\n        appOverlay: false\n      });\n    }\n  };\n\n  handleAppOverlayClick = () => {\n    this.setState({\n      appOverlay: false\n    });\n  };\n\n  render() {\n    let appProps = this.props.app.customizer;\n    let menuThemeArr = [\n      \"primary\",\n      \"success\",\n      \"danger\",\n      \"info\",\n      \"warning\",\n      \"dark\"\n    ];\n    let sidebarProps = {\n      toggleSidebarMenu: this.props.collapseSidebar,\n      toggle: this.toggleSidebarMenu,\n      sidebarState: this.state.sidebarState,\n      sidebarHover: this.sidebarMenuHover,\n      sidebarVisibility: this.handleSidebarVisibility,\n      visibilityState: this.state.sidebarHidden,\n      activePath: this.props.match.path,\n      collapsedMenuPaths: this.handleCollapsedMenuPaths,\n      currentLang: this.state.currentLang,\n      activeTheme: appProps.menuTheme,\n      collapsed: this.state.collapsedContent,\n      permission: this.props.permission,\n      deviceWidth: this.state.width\n    };\n    let navbarProps = {\n      toggleSidebarMenu: this.toggleSidebarMenu,\n      sidebarState: this.state.sidebarState,\n      sidebarVisibility: this.handleSidebarVisibility,\n      currentLang: this.state.currentLang,\n      changeCurrentLang: this.handleCurrentLanguage,\n      handleAppOverlay: this.handleAppOverlay,\n      appOverlayState: this.state.appOverlay,\n      navbarColor: appProps.navbarColor,\n      navbarType: appProps.navbarType\n    };\n\n    let footerProps = {\n      footerType: appProps.footerType,\n      hideScrollToTop: appProps.hideScrollToTop\n    };\n\n    let customizerProps = {\n      customizerState: this.state.customizer,\n      handleCustomizer: this.handleCustomizer,\n      changeMode: this.props.changeMode,\n      changeNavbar: this.props.changeNavbarColor,\n      changeNavbarType: this.props.changeNavbarType,\n      changeFooterType: this.props.changeFooterType,\n      changeMenuTheme: this.props.changeMenuColor,\n      collapseSidebar: this.props.collapseSidebar,\n      hideScrollToTop: this.props.hideScrollToTop,\n      activeMode: appProps.theme,\n      activeNavbar: appProps.navbarColor,\n      navbarType: appProps.navbarType,\n      footerType: appProps.footerType,\n      menuTheme: appProps.menuTheme,\n      scrollToTop: appProps.hideScrollToTop,\n      sidebarState: appProps.sidebarCollapsed\n    };\n    return (\n      <div\n        className={classnames(\n          `wrapper vertical-layout theme-${appProps.menuTheme}`,\n          {\n            \"menu-collapsed\":\n              this.state.collapsedContent === true && this.state.width >= 1200,\n            \"fixed-footer\": appProps.footerType === \"sticky\",\n            \"navbar-static\": appProps.navbarType === \"static\",\n            \"navbar-sticky\": appProps.navbarType === \"sticky\",\n            \"navbar-floating\": appProps.navbarType === \"floating\",\n            \"navbar-hidden\": appProps.navbarType === \"hidden\",\n            \"theme-primary\": !menuThemeArr.includes(appProps.menuTheme)\n          }\n        )}\n      >\n        <Sidebar {...sidebarProps} />\n        <div\n          className={classnames(\"app-content content\", {\n            \"show-overlay\": this.state.appOverlay === true\n          })}\n          onClick={this.handleAppOverlayClick}\n        >\n          <Navbar {...navbarProps} />\n          <div className=\"content-wrapper\">{this.props.children}</div>\n        </div>\n\n        <Footer {...footerProps} />\n        {appProps.disableCustomizer !== true ? (\n          <Customizer {...customizerProps} />\n        ) : null}\n        <div\n          className=\"sidenav-overlay\"\n          onClick={this.handleSidebarVisibility}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    app: state.customizer\n  };\n};\nexport default connect(mapStateToProps, {\n  changeMode,\n  collapseSidebar,\n  changeNavbarColor,\n  changeNavbarType,\n  changeFooterType,\n  changeMenuColor,\n  hideScrollToTop\n})(VerticalLayout);\n"]},"metadata":{},"sourceType":"module"}