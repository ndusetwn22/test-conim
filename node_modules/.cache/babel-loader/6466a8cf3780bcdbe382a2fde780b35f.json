{"ast":null,"code":"import _classCallCheck from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandusetiawan/Documents/react/df-v1.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/views/forms/form-elements/input/InputValidation.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody, Form, FormGroup, Label, Input, Row, Col, Button } from \"reactstrap\";\n\nvar InputValidation = /*#__PURE__*/function (_React$Component) {\n  _inherits(InputValidation, _React$Component);\n\n  function InputValidation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InputValidation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InputValidation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      city: \"\",\n      isValid: null\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.firstName.length > 0) {\n        _this.setState({\n          isValid: true\n        });\n      } else if (_this.state.firstName.length === 0) {\n        _this.setState({\n          isValid: false\n        });\n      }\n\n      if (_this.state.city.length > 0) {\n        _this.setState({\n          isValid: true\n        });\n      } else if (_this.state.city.length === 0) {\n        _this.setState({\n          isValid: false\n        });\n      }\n\n      if (_this.state.lastName.length > 0) {\n        _this.setState({\n          isValid: true\n        });\n      } else if (_this.state.lastName.length === 0) {\n        _this.setState({\n          isValid: false\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(InputValidation, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"Input Validation With Tooltip\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, \"Use class \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }\n      }, \".valid/invalid-tooltip\"), \" to display validation tooltip.\"), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"4\",\n        sm: \"12\",\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"firstName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            firstName: e.target.value\n          });\n        },\n        value: this.state.firstName,\n        id: \"firstName\",\n        name: \"firstName\",\n        valid: this.state.isValid === true,\n        invalid: this.state.isValid === false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }), this.state.isValid ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"valid-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"Looks Good!\") : this.state.isValid === false ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, \"Please enter a First Name\") : \"\")), /*#__PURE__*/React.createElement(Col, {\n        md: \"4\",\n        sm: \"12\",\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"lastName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            lastName: e.target.value\n          });\n        },\n        value: this.state.lastName,\n        id: \"lastName\",\n        name: \"lastName\",\n        valid: this.state.isValid === true,\n        invalid: this.state.isValid === false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }\n      }), this.state.isValid ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"valid-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, \"Looks Good!\") : this.state.isValid === false ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, \"Please enter a Last Name\") : \"\")), /*#__PURE__*/React.createElement(Col, {\n        md: \"4\",\n        sm: \"12\",\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"city\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            city: e.target.value\n          });\n        },\n        value: this.state.city,\n        id: \"city\",\n        name: \"city\",\n        valid: this.state.isValid === true,\n        invalid: this.state.isValid === false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      }), this.state.isValid ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"valid-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, \"Looks Good!\") : this.state.isValid === false ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, \"Please enter a City\") : \"\"))), /*#__PURE__*/React.createElement(Button.Ripple, {\n        color: \"primary\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return InputValidation;\n}(React.Component);\n\nexport default InputValidation;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/views/forms/form-elements/input/InputValidation.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Form","FormGroup","Label","Input","Row","Col","Button","InputValidation","state","firstName","lastName","city","isValid","handleSubmit","e","preventDefault","length","setState","target","value","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n  Button\n} from \"reactstrap\"\n\nclass InputValidation extends React.Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    city: \"\",\n    isValid: null\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    if (this.state.firstName.length > 0) {\n      this.setState({ isValid: true })\n    } else if (this.state.firstName.length === 0) {\n      this.setState({ isValid: false })\n    }\n\n    if (this.state.city.length > 0) {\n      this.setState({ isValid: true })\n    } else if (this.state.city.length === 0) {\n      this.setState({ isValid: false })\n    }\n    if (this.state.lastName.length > 0) {\n      this.setState({ isValid: true })\n    } else if (this.state.lastName.length === 0) {\n      this.setState({ isValid: false })\n    }\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Input Validation With Tooltip</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <p>\n            Use class <code>.valid/invalid-tooltip</code> to display validation\n            tooltip.\n          </p>\n          <Form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col md=\"4\" sm=\"12\" className=\"mb-2\">\n                <FormGroup>\n                  <Label for=\"firstName\">First Name</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={e => this.setState({ firstName: e.target.value })}\n                    value={this.state.firstName}\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    valid={this.state.isValid === true}\n                    invalid={this.state.isValid === false}\n                  />\n                  {this.state.isValid ? (\n                    <span className=\"valid-tooltip\">Looks Good!</span>\n                  ) : this.state.isValid === false ? (\n                    <span className=\"invalid-tooltip\">\n                      Please enter a First Name\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </Col>\n              <Col md=\"4\" sm=\"12\" className=\"mb-2\">\n                <FormGroup>\n                  <Label for=\"lastName\">Last Name</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={e => this.setState({ lastName: e.target.value })}\n                    value={this.state.lastName}\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    valid={this.state.isValid === true}\n                    invalid={this.state.isValid === false}\n                  />\n                  {this.state.isValid ? (\n                    <span className=\"valid-tooltip\">Looks Good!</span>\n                  ) : this.state.isValid === false ? (\n                    <span className=\"invalid-tooltip\">\n                      Please enter a Last Name\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </Col>\n              <Col md=\"4\" sm=\"12\" className=\"mb-2\">\n                <FormGroup>\n                  <Label for=\"city\">City</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={e => this.setState({ city: e.target.value })}\n                    value={this.state.city}\n                    id=\"city\"\n                    name=\"city\"\n                    valid={this.state.isValid === true}\n                    invalid={this.state.isValid === false}\n                  />\n                  {this.state.isValid ? (\n                    <span className=\"valid-tooltip\">Looks Good!</span>\n                  ) : this.state.isValid === false ? (\n                    <span className=\"invalid-tooltip\">Please enter a City</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </Col>\n            </Row>\n            <Button.Ripple color=\"primary\" onClick={this.handleSubmit}>\n              Submit\n            </Button.Ripple>\n          </Form>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default InputValidation\n"]},"metadata":{},"sourceType":"module"}