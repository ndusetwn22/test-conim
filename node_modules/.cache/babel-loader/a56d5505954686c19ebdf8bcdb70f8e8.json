{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar dates = _interopRequireWildcard(require(\"../../utils/dates\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _Selection = _interopRequireWildcard(require(\"../../Selection\"));\n\nvar _TimeGridEvent = _interopRequireDefault(require(\"../../TimeGridEvent\"));\n\nvar _common = require(\"./common\");\n\nvar _NoopWrapper = _interopRequireDefault(require(\"../../NoopWrapper\"));\n\nvar pointInColumn = function pointInColumn(bounds, _ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var left = bounds.left,\n      right = bounds.right,\n      top = bounds.top;\n  return x < right + 10 && x > left && y > top;\n};\n\nvar propTypes = process.env.NODE_ENV !== \"production\" ? {} : {};\n\nvar EventContainerWrapper = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(EventContainerWrapper, _React$Component);\n\n  function EventContainerWrapper() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleMove = function (point, boundaryBox) {\n      var event = _this.context.draggable.dragAndDropAction.event;\n      var _this$props = _this.props,\n          accessors = _this$props.accessors,\n          slotMetrics = _this$props.slotMetrics;\n\n      if (!pointInColumn(boundaryBox, point)) {\n        _this.reset();\n\n        return;\n      }\n\n      var currentSlot = slotMetrics.closestSlotFromPoint({\n        y: point.y - _this.eventOffsetTop,\n        x: point.x\n      }, boundaryBox);\n      var eventStart = accessors.start(event);\n      var eventEnd = accessors.end(event);\n      var end = dates.add(currentSlot, dates.diff(eventStart, eventEnd, 'minutes'), 'minutes');\n\n      _this.update(event, slotMetrics.getRange(currentSlot, end, false, true));\n    };\n\n    _this.handleDropFromOutside = function (point, boundaryBox) {\n      var _this$props2 = _this.props,\n          slotMetrics = _this$props2.slotMetrics,\n          resource = _this$props2.resource;\n      var start = slotMetrics.closestSlotFromPoint({\n        y: point.y,\n        x: point.x\n      }, boundaryBox);\n\n      _this.context.draggable.onDropFromOutside({\n        start: start,\n        end: slotMetrics.nextSlot(start),\n        allDay: false,\n        resource: resource\n      });\n    };\n\n    _this._selectable = function () {\n      var node = (0, _reactDom.findDOMNode)((0, _assertThisInitialized2.default)(_this));\n      var isBeingDragged = false;\n      var selector = _this._selector = new _Selection.default(function () {\n        return node.closest('.rbc-time-view');\n      });\n      selector.on('beforeSelect', function (point) {\n        var dragAndDropAction = _this.context.draggable.dragAndDropAction;\n        if (!dragAndDropAction.action) return false;\n\n        if (dragAndDropAction.action === 'resize') {\n          return pointInColumn((0, _Selection.getBoundsForNode)(node), point);\n        }\n\n        var eventNode = (0, _Selection.getEventNodeFromPoint)(node, point);\n        if (!eventNode) return false;\n        _this.eventOffsetTop = point.y - (0, _Selection.getBoundsForNode)(eventNode).top;\n      });\n      selector.on('selecting', function (box) {\n        var bounds = (0, _Selection.getBoundsForNode)(node);\n        var dragAndDropAction = _this.context.draggable.dragAndDropAction;\n        if (dragAndDropAction.action === 'move') _this.handleMove(box, bounds);\n        if (dragAndDropAction.action === 'resize') _this.handleResize(box, bounds);\n      });\n      selector.on('dropFromOutside', function (point) {\n        if (!_this.context.draggable.onDropFromOutside) return;\n        var bounds = (0, _Selection.getBoundsForNode)(node);\n        if (!pointInColumn(bounds, point)) return;\n\n        _this.handleDropFromOutside(point, bounds);\n      });\n      selector.on('dragOver', function (point) {\n        if (!_this.context.draggable.dragFromOutsideItem) return;\n        var bounds = (0, _Selection.getBoundsForNode)(node);\n\n        _this.handleDropFromOutside(point, bounds);\n      });\n      selector.on('selectStart', function () {\n        isBeingDragged = true;\n\n        _this.context.draggable.onStart();\n      });\n      selector.on('select', function (point) {\n        var bounds = (0, _Selection.getBoundsForNode)(node);\n        isBeingDragged = false;\n        if (!_this.state.event || !pointInColumn(bounds, point)) return;\n\n        _this.handleInteractionEnd();\n      });\n      selector.on('click', function () {\n        if (isBeingDragged) _this.reset();\n\n        _this.context.draggable.onEnd(null);\n      });\n      selector.on('reset', function () {\n        _this.reset();\n\n        _this.context.draggable.onEnd(null);\n      });\n    };\n\n    _this.handleInteractionEnd = function () {\n      var resource = _this.props.resource;\n      var event = _this.state.event;\n\n      _this.reset();\n\n      _this.context.draggable.onEnd({\n        start: event.start,\n        end: event.end,\n        resourceId: resource\n      });\n    };\n\n    _this._teardownSelectable = function () {\n      if (!_this._selector) return;\n\n      _this._selector.teardown();\n\n      _this._selector = null;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  var _proto = EventContainerWrapper.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._selectable();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this._teardownSelectable();\n  };\n\n  _proto.reset = function reset() {\n    if (this.state.event) this.setState({\n      event: null,\n      top: null,\n      height: null\n    });\n  };\n\n  _proto.update = function update(event, _ref2) {\n    var startDate = _ref2.startDate,\n        endDate = _ref2.endDate,\n        top = _ref2.top,\n        height = _ref2.height;\n    var lastEvent = this.state.event;\n\n    if (lastEvent && startDate === lastEvent.start && endDate === lastEvent.end) {\n      return;\n    }\n\n    this.setState({\n      top: top,\n      height: height,\n      event: (0, _extends2.default)({}, event, {\n        start: startDate,\n        end: endDate\n      })\n    });\n  };\n\n  _proto.handleResize = function handleResize(point, boundaryBox) {\n    var start, end;\n    var _this$props3 = this.props,\n        accessors = _this$props3.accessors,\n        slotMetrics = _this$props3.slotMetrics;\n    var _this$context$draggab = this.context.draggable.dragAndDropAction,\n        event = _this$context$draggab.event,\n        direction = _this$context$draggab.direction;\n    var currentSlot = slotMetrics.closestSlotFromPoint(point, boundaryBox);\n\n    if (direction === 'UP') {\n      end = accessors.end(event);\n      start = dates.min(currentSlot, slotMetrics.closestSlotFromDate(end, -1));\n    } else if (direction === 'DOWN') {\n      start = accessors.start(event);\n      end = dates.max(currentSlot, slotMetrics.closestSlotFromDate(start));\n    }\n\n    this.update(event, slotMetrics.getRange(start, end));\n  };\n\n  _proto.render = function render() {\n    var _this$props4 = this.props,\n        children = _this$props4.children,\n        accessors = _this$props4.accessors,\n        components = _this$props4.components,\n        getters = _this$props4.getters,\n        slotMetrics = _this$props4.slotMetrics,\n        localizer = _this$props4.localizer;\n    var _this$state = this.state,\n        event = _this$state.event,\n        top = _this$state.top,\n        height = _this$state.height;\n    if (!event) return children;\n    var events = children.props.children;\n    var start = event.start,\n        end = event.end;\n    var label;\n    var format = 'eventTimeRangeFormat';\n    var startsBeforeDay = slotMetrics.startsBeforeDay(start);\n    var startsAfterDay = slotMetrics.startsAfterDay(end);\n    if (startsBeforeDay) format = 'eventTimeRangeEndFormat';else if (startsAfterDay) format = 'eventTimeRangeStartFormat';\n    if (startsBeforeDay && startsAfterDay) label = localizer.messages.allDay;else label = localizer.format({\n      start: start,\n      end: end\n    }, format);\n    return _react.default.cloneElement(children, {\n      children: _react.default.createElement(_react.default.Fragment, null, events, event && _react.default.createElement(_TimeGridEvent.default, {\n        event: event,\n        label: label,\n        className: \"rbc-addons-dnd-drag-preview\",\n        style: {\n          top: top,\n          height: height,\n          width: 100\n        },\n        getters: getters,\n        components: (0, _extends2.default)({}, components, {\n          eventWrapper: _NoopWrapper.default\n        }),\n        accessors: (0, _extends2.default)({}, accessors, _common.dragAccessors),\n        continuesEarlier: startsBeforeDay,\n        continuesLater: startsAfterDay\n      }))\n    });\n  };\n\n  return EventContainerWrapper;\n}(_react.default.Component);\n\nEventContainerWrapper.contextTypes = {\n  draggable: _propTypes.default.shape({\n    onStart: _propTypes.default.func,\n    onEnd: _propTypes.default.func,\n    onDropFromOutside: _propTypes.default.func,\n    onBeginAction: _propTypes.default.func,\n    dragAndDropAction: _propTypes.default.object,\n    dragFromOutsideItem: _propTypes.default.func\n  })\n};\nEventContainerWrapper.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  accessors: _propTypes.default.object.isRequired,\n  components: _propTypes.default.object.isRequired,\n  getters: _propTypes.default.object.isRequired,\n  localizer: _propTypes.default.object.isRequired,\n  slotMetrics: _propTypes.default.object.isRequired,\n  resource: _propTypes.default.any\n} : {};\nEventContainerWrapper.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nvar _default = EventContainerWrapper;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["E:/react/belajar-react/node_modules/react-big-calendar/lib/addons/dragAndDrop/EventContainerWrapper.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","exports","__esModule","default","_extends2","_assertThisInitialized2","_inheritsLoose2","_propTypes","_react","dates","_reactDom","_Selection","_TimeGridEvent","_common","_NoopWrapper","pointInColumn","bounds","_ref","x","y","left","right","top","propTypes","process","env","NODE_ENV","EventContainerWrapper","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleMove","point","boundaryBox","event","context","draggable","dragAndDropAction","_this$props","props","accessors","slotMetrics","reset","currentSlot","closestSlotFromPoint","eventOffsetTop","eventStart","start","eventEnd","end","add","diff","update","getRange","handleDropFromOutside","_this$props2","resource","onDropFromOutside","nextSlot","allDay","_selectable","node","findDOMNode","isBeingDragged","selector","_selector","closest","on","action","getBoundsForNode","eventNode","getEventNodeFromPoint","box","handleResize","dragFromOutsideItem","onStart","state","handleInteractionEnd","onEnd","resourceId","_teardownSelectable","teardown","_proto","prototype","componentDidMount","componentWillUnmount","setState","height","_ref2","startDate","endDate","lastEvent","_this$props3","_this$context$draggab","direction","min","closestSlotFromDate","max","render","_this$props4","children","components","getters","localizer","_this$state","events","label","format","startsBeforeDay","startsAfterDay","messages","cloneElement","createElement","Fragment","className","style","width","eventWrapper","dragAccessors","continuesEarlier","continuesLater","Component","contextTypes","shape","func","onBeginAction","object","isRequired","any","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar dates = _interopRequireWildcard(require(\"../../utils/dates\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _Selection = _interopRequireWildcard(require(\"../../Selection\"));\n\nvar _TimeGridEvent = _interopRequireDefault(require(\"../../TimeGridEvent\"));\n\nvar _common = require(\"./common\");\n\nvar _NoopWrapper = _interopRequireDefault(require(\"../../NoopWrapper\"));\n\nvar pointInColumn = function pointInColumn(bounds, _ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var left = bounds.left,\n      right = bounds.right,\n      top = bounds.top;\n  return x < right + 10 && x > left && y > top;\n};\n\nvar propTypes = process.env.NODE_ENV !== \"production\" ? {} : {};\n\nvar EventContainerWrapper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(EventContainerWrapper, _React$Component);\n\n  function EventContainerWrapper() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleMove = function (point, boundaryBox) {\n      var event = _this.context.draggable.dragAndDropAction.event;\n      var _this$props = _this.props,\n          accessors = _this$props.accessors,\n          slotMetrics = _this$props.slotMetrics;\n\n      if (!pointInColumn(boundaryBox, point)) {\n        _this.reset();\n\n        return;\n      }\n\n      var currentSlot = slotMetrics.closestSlotFromPoint({\n        y: point.y - _this.eventOffsetTop,\n        x: point.x\n      }, boundaryBox);\n      var eventStart = accessors.start(event);\n      var eventEnd = accessors.end(event);\n      var end = dates.add(currentSlot, dates.diff(eventStart, eventEnd, 'minutes'), 'minutes');\n\n      _this.update(event, slotMetrics.getRange(currentSlot, end, false, true));\n    };\n\n    _this.handleDropFromOutside = function (point, boundaryBox) {\n      var _this$props2 = _this.props,\n          slotMetrics = _this$props2.slotMetrics,\n          resource = _this$props2.resource;\n      var start = slotMetrics.closestSlotFromPoint({\n        y: point.y,\n        x: point.x\n      }, boundaryBox);\n\n      _this.context.draggable.onDropFromOutside({\n        start: start,\n        end: slotMetrics.nextSlot(start),\n        allDay: false,\n        resource: resource\n      });\n    };\n\n    _this._selectable = function () {\n      var node = (0, _reactDom.findDOMNode)((0, _assertThisInitialized2.default)(_this));\n      var isBeingDragged = false;\n      var selector = _this._selector = new _Selection.default(function () {\n        return node.closest('.rbc-time-view');\n      });\n      selector.on('beforeSelect', function (point) {\n        var dragAndDropAction = _this.context.draggable.dragAndDropAction;\n        if (!dragAndDropAction.action) return false;\n\n        if (dragAndDropAction.action === 'resize') {\n          return pointInColumn((0, _Selection.getBoundsForNode)(node), point);\n        }\n\n        var eventNode = (0, _Selection.getEventNodeFromPoint)(node, point);\n        if (!eventNode) return false;\n        _this.eventOffsetTop = point.y - (0, _Selection.getBoundsForNode)(eventNode).top;\n      });\n      selector.on('selecting', function (box) {\n        var bounds = (0, _Selection.getBoundsForNode)(node);\n        var dragAndDropAction = _this.context.draggable.dragAndDropAction;\n        if (dragAndDropAction.action === 'move') _this.handleMove(box, bounds);\n        if (dragAndDropAction.action === 'resize') _this.handleResize(box, bounds);\n      });\n      selector.on('dropFromOutside', function (point) {\n        if (!_this.context.draggable.onDropFromOutside) return;\n        var bounds = (0, _Selection.getBoundsForNode)(node);\n        if (!pointInColumn(bounds, point)) return;\n\n        _this.handleDropFromOutside(point, bounds);\n      });\n      selector.on('dragOver', function (point) {\n        if (!_this.context.draggable.dragFromOutsideItem) return;\n        var bounds = (0, _Selection.getBoundsForNode)(node);\n\n        _this.handleDropFromOutside(point, bounds);\n      });\n      selector.on('selectStart', function () {\n        isBeingDragged = true;\n\n        _this.context.draggable.onStart();\n      });\n      selector.on('select', function (point) {\n        var bounds = (0, _Selection.getBoundsForNode)(node);\n        isBeingDragged = false;\n        if (!_this.state.event || !pointInColumn(bounds, point)) return;\n\n        _this.handleInteractionEnd();\n      });\n      selector.on('click', function () {\n        if (isBeingDragged) _this.reset();\n\n        _this.context.draggable.onEnd(null);\n      });\n      selector.on('reset', function () {\n        _this.reset();\n\n        _this.context.draggable.onEnd(null);\n      });\n    };\n\n    _this.handleInteractionEnd = function () {\n      var resource = _this.props.resource;\n      var event = _this.state.event;\n\n      _this.reset();\n\n      _this.context.draggable.onEnd({\n        start: event.start,\n        end: event.end,\n        resourceId: resource\n      });\n    };\n\n    _this._teardownSelectable = function () {\n      if (!_this._selector) return;\n\n      _this._selector.teardown();\n\n      _this._selector = null;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  var _proto = EventContainerWrapper.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._selectable();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this._teardownSelectable();\n  };\n\n  _proto.reset = function reset() {\n    if (this.state.event) this.setState({\n      event: null,\n      top: null,\n      height: null\n    });\n  };\n\n  _proto.update = function update(event, _ref2) {\n    var startDate = _ref2.startDate,\n        endDate = _ref2.endDate,\n        top = _ref2.top,\n        height = _ref2.height;\n    var lastEvent = this.state.event;\n\n    if (lastEvent && startDate === lastEvent.start && endDate === lastEvent.end) {\n      return;\n    }\n\n    this.setState({\n      top: top,\n      height: height,\n      event: (0, _extends2.default)({}, event, {\n        start: startDate,\n        end: endDate\n      })\n    });\n  };\n\n  _proto.handleResize = function handleResize(point, boundaryBox) {\n    var start, end;\n    var _this$props3 = this.props,\n        accessors = _this$props3.accessors,\n        slotMetrics = _this$props3.slotMetrics;\n    var _this$context$draggab = this.context.draggable.dragAndDropAction,\n        event = _this$context$draggab.event,\n        direction = _this$context$draggab.direction;\n    var currentSlot = slotMetrics.closestSlotFromPoint(point, boundaryBox);\n\n    if (direction === 'UP') {\n      end = accessors.end(event);\n      start = dates.min(currentSlot, slotMetrics.closestSlotFromDate(end, -1));\n    } else if (direction === 'DOWN') {\n      start = accessors.start(event);\n      end = dates.max(currentSlot, slotMetrics.closestSlotFromDate(start));\n    }\n\n    this.update(event, slotMetrics.getRange(start, end));\n  };\n\n  _proto.render = function render() {\n    var _this$props4 = this.props,\n        children = _this$props4.children,\n        accessors = _this$props4.accessors,\n        components = _this$props4.components,\n        getters = _this$props4.getters,\n        slotMetrics = _this$props4.slotMetrics,\n        localizer = _this$props4.localizer;\n    var _this$state = this.state,\n        event = _this$state.event,\n        top = _this$state.top,\n        height = _this$state.height;\n    if (!event) return children;\n    var events = children.props.children;\n    var start = event.start,\n        end = event.end;\n    var label;\n    var format = 'eventTimeRangeFormat';\n    var startsBeforeDay = slotMetrics.startsBeforeDay(start);\n    var startsAfterDay = slotMetrics.startsAfterDay(end);\n    if (startsBeforeDay) format = 'eventTimeRangeEndFormat';else if (startsAfterDay) format = 'eventTimeRangeStartFormat';\n    if (startsBeforeDay && startsAfterDay) label = localizer.messages.allDay;else label = localizer.format({\n      start: start,\n      end: end\n    }, format);\n    return _react.default.cloneElement(children, {\n      children: _react.default.createElement(_react.default.Fragment, null, events, event && _react.default.createElement(_TimeGridEvent.default, {\n        event: event,\n        label: label,\n        className: \"rbc-addons-dnd-drag-preview\",\n        style: {\n          top: top,\n          height: height,\n          width: 100\n        },\n        getters: getters,\n        components: (0, _extends2.default)({}, components, {\n          eventWrapper: _NoopWrapper.default\n        }),\n        accessors: (0, _extends2.default)({}, accessors, _common.dragAccessors),\n        continuesEarlier: startsBeforeDay,\n        continuesLater: startsAfterDay\n      }))\n    });\n  };\n\n  return EventContainerWrapper;\n}(_react.default.Component);\n\nEventContainerWrapper.contextTypes = {\n  draggable: _propTypes.default.shape({\n    onStart: _propTypes.default.func,\n    onEnd: _propTypes.default.func,\n    onDropFromOutside: _propTypes.default.func,\n    onBeginAction: _propTypes.default.func,\n    dragAndDropAction: _propTypes.default.object,\n    dragFromOutsideItem: _propTypes.default.func\n  })\n};\nEventContainerWrapper.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  accessors: _propTypes.default.object.isRequired,\n  components: _propTypes.default.object.isRequired,\n  getters: _propTypes.default.object.isRequired,\n  localizer: _propTypes.default.object.isRequired,\n  slotMetrics: _propTypes.default.object.isRequired,\n  resource: _propTypes.default.any\n} : {};\nEventContainerWrapper.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nvar _default = EventContainerWrapper;\nexports.default = _default;\nmodule.exports = exports[\"default\"];"]},"metadata":{},"sourceType":"script"}