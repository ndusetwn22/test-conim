{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/df-v1.2/src/components/reactstrap/popovers/PopoverControlled.js\";\nimport React from \"react\";\nimport { Button, Popover, PopoverHeader, PopoverBody, Card, CardHeader, CardBody, CardTitle, TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { Eye, Code } from \"react-feather\";\nimport { popoverControlled } from \"./PopoverSourceCode\";\n\nclass PopoverControlled extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: \"1\",\n      popoverOpen: false\n    };\n\n    this.toggleTab = tab => {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    };\n\n    this.togglePopover = () => {\n      this.setState({\n        popoverOpen: !this.state.popoverOpen\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Controlled Popover\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"views\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      tabs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === \"1\"\n      }),\n      onClick: () => {\n        this.toggleTab(\"1\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Eye, {\n      size: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === \"2\"\n      }),\n      onClick: () => {\n        this.toggleTab(\"2\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Code, {\n      size: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"For controlled Popover you'll have to manage state of component.controlled Popover require \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 52\n      }\n    }, \"isOpen\"), \" and\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"toggle\"), \" props to work.\"), /*#__PURE__*/React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      className: \"justify-content-center d-flex\",\n      tabId: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button.Ripple, {\n      color: \"primary\",\n      outline: true,\n      id: \"controlledPopover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"Controlled\"), /*#__PURE__*/React.createElement(Popover, {\n      placement: \"top\",\n      target: \"controlledPopover\",\n      isOpen: this.state.popoverOpen,\n      toggle: this.togglePopover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, \"Controlled Popover\"), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, \"Macaroon chocolate candy. I love carrot cake gingerbread cake lemon drops. Muffin sugar plum marzipan pie.\"))), /*#__PURE__*/React.createElement(TabPane, {\n      className: \"component-code\",\n      tabId: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, popoverControlled)))));\n  }\n\n}\n\nexport default PopoverControlled;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/df-v1.2/src/components/reactstrap/popovers/PopoverControlled.js"],"names":["React","Button","Popover","PopoverHeader","PopoverBody","Card","CardHeader","CardBody","CardTitle","TabContent","TabPane","Nav","NavItem","NavLink","classnames","Eye","Code","popoverControlled","PopoverControlled","Component","state","activeTab","popoverOpen","toggleTab","tab","setState","togglePopover","render","active"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Button,\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { popoverControlled } from \"./PopoverSourceCode\"\n\nclass PopoverControlled extends React.Component {\n  state = {\n    activeTab: \"1\",\n    popoverOpen: false\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  togglePopover = () => {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Controlled Popover</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              For controlled Popover you'll have to manage state of\n              component.controlled Popover require <code>isOpen</code> and{\" \"}\n              <code>toggle</code> props to work.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane className=\"justify-content-center d-flex\" tabId=\"1\">\n                <Button.Ripple color=\"primary\" outline id=\"controlledPopover\">\n                  Controlled\n                </Button.Ripple>\n                <Popover\n                  placement=\"top\"\n                  target=\"controlledPopover\"\n                  isOpen={this.state.popoverOpen}\n                  toggle={this.togglePopover}\n                >\n                  <PopoverHeader>Controlled Popover</PopoverHeader>\n                  <PopoverBody>\n                    Macaroon chocolate candy. I love carrot cake gingerbread\n                    cake lemon drops. Muffin sugar plum marzipan pie.\n                  </PopoverBody>\n                </Popover>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {popoverControlled}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default PopoverControlled\n"]},"metadata":{},"sourceType":"module"}