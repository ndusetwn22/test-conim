{"ast":null,"code":"var _jsxFileName = \"/Users/pandusetiawan/Documents/react/rombak-react-vuexy2/src/views/admin/data-karyawan/component/KaryawanView.js\";\nimport React, { useState } from \"react\";\nimport { api_query } from \"../../../../api/ApiConstant\";\nimport axios from 'axios';\nimport { Card, CardHeader, CardTitle, CardBody, FormGroup, Row, Col, Input, Form, Button, Label, Modal, ModalHeader, ModalBody, ModalFooter, Alert } from \"reactstrap\";\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\nimport { Check, Star, Save, Send, X } from \"react-feather\"; // import { history } from \"../../../../../src/history\"\n\nimport Select from \"react-select\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport Toggle from \"react-toggle\";\nimport { history } from \"../../../../../src/history\";\nimport \"react-toggle/style.css\";\nimport \"../../../../assets/scss/plugins/forms/switch/react-toggle.scss\";\n\nclass KaryawanView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await this.isLogin('super_admin');\n      await this.tarikDepartemen(); // await this.tarikDataProfile();\n      // await this.tarikDataFormCff();\n      // await this.tarikKategori();\n      // await this.tarikAtasan();\n\n      console.log('props edit : ', this.props);\n    };\n\n    this.toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n    };\n\n    this.toggleModalFix = async () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n\n      if (this.state.kategoriSelected == '' || this.state.kategoriSelected == null) {\n        return await this.handleAlert('isSweetAlert', true, 'Warning', 'Kategori Tidak Boleh Kosong', 'warning');\n      } else {\n        if (this.state.isChecked) {\n          if (this.state.catatanCC == '' || this.state.catatanCC == null) {\n            return await this.handleAlert('isSweetAlert', true, 'Warning', 'Catatan CC Tidak Boleh Kosong', 'warning');\n          }\n        }\n      }\n\n      if (this.state.isChecked) {\n        console.log('isChecked');\n        let sql = `\n        with ins1 as(\n            update df_cff\n            set\n            change_control = 'Y',\n            catatan_cc = '` + this.state.catatanCC + `',\n            status_cff_id = 3,\n            update_by = ` + this.state.myProfile.id + `,\n            update_date = now()\n            where id = ` + this.props.editData.cff_id + `\n        returning id as return_id\n        )\n            update df_ss\n            set\n            ss_kategori_id = ` + this.state.kategoriSelected + `,\n            ss_status_id = 3,\n            update_by = ` + this.state.myProfile.id + `,\n            update_date = now()\n            where id = ` + this.props.editData.ds_id + `\n        `;\n        console.log('sql : ', sql);\n        var result = await axios.post(api_query, {\n          query: sql\n        }).then(async result => {\n          let res = result.data.response; // Beda dgn sweetAlert yg lain\n\n          return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Success', 'Berhasil Approve SS', 'success'); // this.props.changeViewPage('page')\n        }).catch(async err => {\n          console.log('error : ', err);\n          return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Danger', 'Gagal Approve SS', 'danger'); // return []\n        });\n      } else {\n        console.log('not Checked');\n        let sql = `\n        with ins1 as(\n            update df_cff\n            set\n            change_control = 'N',\n            status_cff_id = 3,\n            update_by = ` + this.state.myProfile.id + `,\n            update_date = now()\n            where id = ` + this.props.editData.cff_id + `\n        returning id as return_id\n        )\n            update df_ss\n            set\n            ss_kategori_id = ` + this.state.kategoriSelected + `,\n            ss_status_id = 3,\n            update_by = ` + this.state.myProfile.id + `,\n            update_date = now()\n            where id = ` + this.props.editData.ds_id + `\n        `;\n        console.log('sql : ', sql);\n        var result = await axios.post(api_query, {\n          query: sql\n        }).then(async result => {\n          let res = result.data.response; // Beda dgn sweetAlert yg lain\n\n          return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Success', 'Berhasil Approve SS', 'success'); // this.props.changeViewPage('page')\n        }).catch(async err => {\n          console.log('error : ', err);\n          return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Danger', 'Gagal Approve SS', 'danger'); // return []\n        });\n      }\n    };\n\n    this.toggleModalReject = () => {\n      this.setState(prevState => ({\n        modalReject: !prevState.modalReject\n      }));\n    };\n\n    this.toggleModalRejectFix = async () => {\n      this.setState(prevState => ({\n        modalReject: !prevState.modalReject\n      }));\n\n      if (this.state.alasanReject == '' || this.state.alasanReject == null) {\n        return await this.handleAlert('isSweetAlert', true, 'Warning', 'Alasan Reject Tidak Boleh Kosong', 'warning');\n      } else {\n        let sql = `\n        with ins1 as(\n            update df_cff\n            set\n            status_cff_id = 8,\n            update_by = ` + this.state.myProfile.id + `,\n            update_date = now()\n            where id = ` + this.props.editData.cff_id + `\n        returning id as return_id\n        )\n            update df_ss\n            set\n            catatan_reject_delete = '` + this.state.alasanReject + `',\n            ss_status_id = 8,\n            update_by = ` + this.state.myProfile.id + `,\n            update_date = now()\n            where id = ` + this.props.editData.ds_id + `\n        `;\n        console.log('sql : ', sql);\n        var result = await axios.post(api_query, {\n          query: sql\n        }).then(async result => {\n          let res = result.data.response; // Beda dgn sweetAlert yg lain\n\n          return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Success', 'Berhasil Reject SS', 'success'); // this.props.changeViewPage('page')\n        }).catch(async err => {\n          console.log('error : ', err);\n          return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Danger', 'Gagal Reject SS', 'danger'); // return []\n        });\n      }\n    };\n\n    this.saveForm = async () => {\n      var title = '';\n      var text = '';\n      var type = ''; // console.log('SUBMIT : ', this.state.first_name)\n      // console.log('SUBMIT : ', this.state.last_name)\n      // console.log('event : ', e)\n\n      if (this.state.nama == '' || this.state.nama == null) {\n        return await this.handleAlert('isSweetAlert', true, 'Warning', 'Nama Tidak Boleh Kosong', 'warning');\n      }\n\n      if (this.state.jobLevel == '' || this.state.jobLevel == null) {\n        return await this.handleAlert('isSweetAlert', true, 'Warning', 'Job Level Tidak Boleh Kosong', 'warning');\n      } // if (this.state.isChecked == '' || this.state.isChecked == null) {return await this.handleAlert('isSweetAlert', true, 'Warning', 'Status Karyawan Tidak Boleh Kosong', 'warning')}\n      else {\n          var aktif = this.state.isChecked ? 'Y' : 'N';\n          let sql = `\n          update df_master_user\n          set\n          name = '` + this.state.nama + `',\n          job_level = '` + this.state.jobLevel + `',\n          active = '` + aktif + `',\n          update_by = ` + this.state.myProfile.id + `,\n          update_date = now()\n          where nik = '` + this.state.nik + `'\n      `;\n          console.log('sql : ', sql);\n          var result = await axios.post(api_query, {\n            query: sql\n          }).then(async result => {\n            let res = result.data.response; // Beda dgn sweetAlert yg lain\n\n            return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Success', 'Berhasil edit karyawan', 'success'); // this.props.changeViewPage('page')\n          }).catch(async err => {\n            console.log('error : ', err);\n            return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Danger', 'Gagal edit karyawan', 'danger'); // return []\n          }); // this.setState({isLoading: true});\n          // console.log('result query : ', result)\n          // this.props.changeViewPage('page')\n          // // return await this.handleAlert('isSweetAlert', true, 'Success', 'Data Berhasil Ditambahkan '+this.state.first_name+ \" \"+ this.state.last_name, 'success')\n        }\n    };\n\n    this.isLogin = async role => {\n      if (localStorage.getItem('account') == undefined || localStorage.getItem('account') == null) {\n        history.push(\"/pages/login\");\n      } else if (JSON.parse(localStorage.getItem('account')).role !== role) {\n        history.push(\"/pages/login\");\n      } else {\n        var myProfile = JSON.parse(localStorage.getItem('account'));\n        console.log('myProfile ss : ', myProfile);\n        this.setState({\n          myProfile: myProfile\n        });\n      }\n    };\n\n    this.tarikDepartemen = async () => {\n      let sql = `\n    select  id as value,\n            nama_departemen as label\n    from df_master_departement\n  `;\n      var result = await axios.post(api_query, {\n        query: sql\n      }).then(async result => {\n        var res = result.data.response.rows;\n        console.log('result query kategori : ', res);\n\n        if (res.length == '') {\n          return [];\n        }\n\n        await this.setState({\n          dataDepartemen: res\n        });\n      }).catch(err => {\n        console.log('error : ', err);\n        return [];\n      }); // await this.setState({data: result})\n    };\n\n    this.tarikDataProfile = async () => {\n      let sql = `\n      select nik, name, departement_id, nama_departemen, job_level from df_master_user dmu\n      join df_master_departement dmd\n      on dmu.departement_id = dmd.id\n      where dmu.id = ` + this.props.editData.pengusul_id + `\n  `;\n      var result = await axios.post(api_query, {\n        query: sql\n      }).then(async result => {\n        var res = result.data.response.rows[0];\n        console.log('result query profile : ', res);\n\n        if (res.length == '') {\n          return;\n        } else {\n          await this.tarikAtasan(res.departement_id);\n          await this.setState({\n            cffNik: res.nik,\n            cffName: res.name,\n            cffNamaDepartemen: res.nama_departemen\n          });\n        } // await this.setState({dataAtasan: res})\n\n      }).catch(err => {\n        console.log('error : ', err);\n        return [];\n      }); // await this.setState({data: result})\n    };\n\n    this.handleAlertConfirm = (state, value, title, text, type) => {\n      if (value) {\n        this.setState({\n          [state]: value\n        });\n        this.setState({\n          sweetAlertTitleConfirm: title,\n          sweetAlertTextConfirm: text,\n          sweetAlertTypeConfirm: type\n        });\n      } else {\n        this.setState({\n          [state]: value\n        });\n        this.props.changeViewPage('page');\n      } // if(text == \"Berhasil membuat SS\"){\n      //   this.setState({ [state] : value })\n      //   this.setState({sweetAlertTitle: title, sweetAlertText: text, sweetAlertType: type});\n      //   // this.props.changeViewPage('page')\n      // }else{}\n\n    };\n\n    this.handleAlert = (state, value, title, text, type) => {\n      if (value) {\n        this.setState({\n          [state]: value\n        });\n        this.setState({\n          sweetAlertTitle: title,\n          sweetAlertText: text,\n          sweetAlertType: type\n        });\n      } else {\n        this.setState({\n          [state]: value\n        });\n      }\n    };\n\n    this.state = {\n      myProfile: null,\n      step: 0,\n      modal: false,\n      modalReject: false,\n      alasanReject: '',\n      dataDepartemen: [],\n      departemenSelected: this.props.editData.departement_id,\n      isChecked: this.props.editData.active == 'N' ? false : true,\n      catatanCC: '',\n      isSweetAlert: false,\n      sweetAlertTitle: 'Judul',\n      sweetAlertText: 'Text',\n      sweetAlertType: 'warning',\n      isSweetAlertConfirm: false,\n      sweetAlertTitleConfirm: 'Judul',\n      sweetAlertTextConfirm: 'Text',\n      sweetAlertTypeConfirm: 'warning',\n      dataAtasan: [],\n      /////////\n      // cffNik: '',\n      // cffName: '',\n      // cffKondisiSaatIni: this.props.editData.kondisi_sekarang,\n      // cffKondisiDiusulkan: this.props.editData.kondisi_diusulkan,\n      // cffAlasanPerubahan: this.props.editData.alasan_perubahan,\n      // cffDampakPerubahan: this.props.editData.dampak_perubahan,\n      nik: this.props.editData.nik,\n      nama: this.props.editData.name,\n      statusAktif: this.props.editData.active,\n      jobLevel: this.props.editData.job_level\n    };\n  }\n\n  render() {\n    // const [centeredModal, setCenteredModal] = useState(false)\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button.Ripple, {\n      color: \"none\",\n      className: \"bg-gradient-warning mb-1\",\n      onClick: () => this.props.changeViewPage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 7\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }\n    }, \"Data Karyawan\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"ssTema\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 21\n      }\n    }, \"NIK\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"nik\",\n      id: \"nik\",\n      placeholder: \"NIK\",\n      value: this.state.nik,\n      onChange: val => this.setState({\n        nik: val.target.value\n      }),\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"ssTema\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 21\n      }\n    }, \"Nama lengkap\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"nama\",\n      id: \"nama\",\n      placeholder: \"Nama lengkap\",\n      value: this.state.nama,\n      onChange: val => this.setState({\n        nama: val.target.value\n      }) // disabled\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 21\n      }\n    }, \"Pilih Departemen\"), /*#__PURE__*/React.createElement(Select, {\n      className: \"React\",\n      classNamePrefix: \"select\",\n      value: this.state.dataDepartemen.filter(option => option.value == this.state.departemenSelected) // defaultValue={this.state.kategoriSelected != null? this.state.kategoriSelected:null}\n      ,\n      name: \"clear\",\n      options: this.state.dataDepartemen // isClearable={true}\n      ,\n      onChange: val => this.setState({\n        departemenSelected: val.value\n      }) // onChange={(val)=>this.setState({ssAtasanSelected: val.target.value})}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"ssTema\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }\n    }, \"Job Level\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"jobLevel\",\n      id: \"jobLevel\",\n      placeholder: \"Job Level\",\n      value: this.state.jobLevel,\n      onChange: val => this.setState({\n        jobLevel: val.target.value\n      }),\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"react-toggle-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 21\n      }\n    }, \"Status Karyawan :\", /*#__PURE__*/React.createElement(Toggle, {\n      checked: this.state.isChecked // onChange={this.handleSwitchChange}\n      ,\n      onChange: () => this.setState({\n        isChecked: !this.state.isChecked\n      }),\n      name: \"controlledSwitch\",\n      className: \"ml-1\" // value=\"yes\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"none\",\n      className: \"bg-gradient-success\",\n      onClick: () => this.saveForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"align-middle ml-25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 27\n      }\n    }, \"Simpan \"), /*#__PURE__*/React.createElement(Check, {\n      size: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 27\n      }\n    }))))))))), /*#__PURE__*/React.createElement(SweetAlert, {\n      type: this.state.sweetAlertType,\n      title: this.state.sweetAlertTitle,\n      show: this.state.isSweetAlert,\n      onConfirm: () => this.handleAlert(\"isSweetAlert\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sweet-alert-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 13\n      }\n    }, this.state.sweetAlertText)), /*#__PURE__*/React.createElement(SweetAlert, {\n      type: this.state.sweetAlertTypeConfirm,\n      title: this.state.sweetAlertTitleConfirm,\n      show: this.state.isSweetAlertConfirm,\n      onConfirm: () => this.handleAlertConfirm(\"isSweetAlertConfirm\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sweet-alert-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 13\n      }\n    }, this.state.sweetAlertTextConfirm)));\n  }\n\n}\n\nexport default KaryawanView;","map":{"version":3,"sources":["/Users/pandusetiawan/Documents/react/rombak-react-vuexy2/src/views/admin/data-karyawan/component/KaryawanView.js"],"names":["React","useState","api_query","axios","Card","CardHeader","CardTitle","CardBody","FormGroup","Row","Col","Input","Form","Button","Label","Modal","ModalHeader","ModalBody","ModalFooter","Alert","Checkbox","Check","Star","Save","Send","X","Select","SweetAlert","Toggle","history","KaryawanView","Component","constructor","props","componentDidMount","isLogin","tarikDepartemen","console","log","toggleModal","setState","prevState","modal","toggleModalFix","state","kategoriSelected","handleAlert","isChecked","catatanCC","sql","myProfile","id","editData","cff_id","ds_id","result","post","query","then","res","data","response","handleAlertConfirm","catch","err","toggleModalReject","modalReject","toggleModalRejectFix","alasanReject","saveForm","title","text","type","nama","jobLevel","aktif","nik","role","localStorage","getItem","undefined","push","JSON","parse","rows","length","dataDepartemen","tarikDataProfile","pengusul_id","tarikAtasan","departement_id","cffNik","cffName","name","cffNamaDepartemen","nama_departemen","value","sweetAlertTitleConfirm","sweetAlertTextConfirm","sweetAlertTypeConfirm","changeViewPage","sweetAlertTitle","sweetAlertText","sweetAlertType","step","departemenSelected","active","isSweetAlert","isSweetAlertConfirm","dataAtasan","statusAktif","job_level","render","val","target","filter","option"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { api_query } from \"../../../../api/ApiConstant\"\nimport axios from 'axios'\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Row,\n  Col,\n  Input,\n  Form,\n  Button,\n  Label, Modal, ModalHeader, ModalBody, ModalFooter, Alert\n} from \"reactstrap\"\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport { Check, Star, Save, Send, X } from \"react-feather\"\n// import { history } from \"../../../../../src/history\"\nimport Select from \"react-select\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\nimport Toggle from \"react-toggle\"\nimport { history } from \"../../../../../src/history\"\nimport \"react-toggle/style.css\"\nimport \"../../../../assets/scss/plugins/forms/switch/react-toggle.scss\"\n\nclass KaryawanView extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      myProfile:null,\n      step: 0,\n      modal: false,\n      modalReject: false,\n      alasanReject: '',\n      dataDepartemen: [],\n      departemenSelected: this.props.editData.departement_id,\n      isChecked: this.props.editData.active == 'N' ? false:true,\n      catatanCC: '',\n      isSweetAlert: false,\n      sweetAlertTitle: 'Judul',\n      sweetAlertText: 'Text',\n      sweetAlertType: 'warning',\n      isSweetAlertConfirm: false,\n      sweetAlertTitleConfirm: 'Judul',\n      sweetAlertTextConfirm: 'Text',\n      sweetAlertTypeConfirm: 'warning',\n      dataAtasan: [],\n      /////////\n      // cffNik: '',\n      // cffName: '',\n      // cffKondisiSaatIni: this.props.editData.kondisi_sekarang,\n      // cffKondisiDiusulkan: this.props.editData.kondisi_diusulkan,\n      // cffAlasanPerubahan: this.props.editData.alasan_perubahan,\n      // cffDampakPerubahan: this.props.editData.dampak_perubahan,\n      nik: this.props.editData.nik,\n      nama: this.props.editData.name,\n      statusAktif: this.props.editData.active,\n      jobLevel : this.props.editData.job_level\n    }\n}\n\ncomponentDidMount = async() => {\n  await this.isLogin('super_admin');\n  await this.tarikDepartemen();\n  // await this.tarikDataProfile();\n  // await this.tarikDataFormCff();\n  // await this.tarikKategori();\n  // await this.tarikAtasan();\n\n  console.log('props edit : ', this.props)\n}\n\ntoggleModal = () => {\n  this.setState(prevState => ({\n    modal: !prevState.modal\n  }))\n}\n\ntoggleModalFix = async() => {\n  this.setState(prevState => ({\n    modal: !prevState.modal\n  }))\n\n  if (this.state.kategoriSelected == '' || this.state.kategoriSelected == null) {return await this.handleAlert('isSweetAlert', true, 'Warning', 'Kategori Tidak Boleh Kosong', 'warning')}\n  else{\n      if(this.state.isChecked){\n        if (this.state.catatanCC == '' || this.state.catatanCC == null) {return await this.handleAlert('isSweetAlert', true, 'Warning', 'Catatan CC Tidak Boleh Kosong', 'warning')}\n      }\n  }\n\n  if (this.state.isChecked) {\n    console.log('isChecked')\n    let sql = `\n        with ins1 as(\n            update df_cff\n            set\n            change_control = 'Y',\n            catatan_cc = '`+this.state.catatanCC+`',\n            status_cff_id = 3,\n            update_by = `+this.state.myProfile.id+`,\n            update_date = now()\n            where id = `+this.props.editData.cff_id+`\n        returning id as return_id\n        )\n            update df_ss\n            set\n            ss_kategori_id = `+this.state.kategoriSelected+`,\n            ss_status_id = 3,\n            update_by = `+this.state.myProfile.id+`,\n            update_date = now()\n            where id = `+this.props.editData.ds_id+`\n        `\n        console.log('sql : ', sql)\n\n        var result = await axios.post(api_query, {\n                                    query : sql\n                                })\n                                    .then(async(result) => {\n                                    let res = result.data.response\n                                    // Beda dgn sweetAlert yg lain\n                                    return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Success', 'Berhasil Approve SS', 'success')\n                                    // this.props.changeViewPage('page')\n                                }).catch(async(err) => {\n                                    console.log('error : ', err)\n                                    return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Danger', 'Gagal Approve SS', 'danger')\n                                    // return []\n                                })\n\n  }else{\n    console.log('not Checked')\n    let sql = `\n        with ins1 as(\n            update df_cff\n            set\n            change_control = 'N',\n            status_cff_id = 3,\n            update_by = `+this.state.myProfile.id+`,\n            update_date = now()\n            where id = `+this.props.editData.cff_id+`\n        returning id as return_id\n        )\n            update df_ss\n            set\n            ss_kategori_id = `+this.state.kategoriSelected+`,\n            ss_status_id = 3,\n            update_by = `+this.state.myProfile.id+`,\n            update_date = now()\n            where id = `+this.props.editData.ds_id+`\n        `\n        console.log('sql : ', sql)\n\n        var result = await axios.post(api_query, {\n                                    query : sql\n                                })\n                                    .then(async(result) => {\n                                    let res = result.data.response\n                                    // Beda dgn sweetAlert yg lain\n                                    return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Success', 'Berhasil Approve SS', 'success')\n                                    // this.props.changeViewPage('page')\n                                }).catch(async(err) => {\n                                    console.log('error : ', err)\n                                    return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Danger', 'Gagal Approve SS', 'danger')\n                                    // return []\n                                })\n  }\n\n}\n\ntoggleModalReject = () => {\n  this.setState(prevState => ({\n    modalReject: !prevState.modalReject\n  }))\n}\n\ntoggleModalRejectFix = async() => {\n  this.setState(prevState => ({\n    modalReject: !prevState.modalReject\n  }))\n\n  if (this.state.alasanReject == '' || this.state.alasanReject == null) {return await this.handleAlert('isSweetAlert', true, 'Warning', 'Alasan Reject Tidak Boleh Kosong', 'warning')}\n  else{\n    let sql = `\n        with ins1 as(\n            update df_cff\n            set\n            status_cff_id = 8,\n            update_by = `+this.state.myProfile.id+`,\n            update_date = now()\n            where id = `+this.props.editData.cff_id+`\n        returning id as return_id\n        )\n            update df_ss\n            set\n            catatan_reject_delete = '`+this.state.alasanReject+`',\n            ss_status_id = 8,\n            update_by = `+this.state.myProfile.id+`,\n            update_date = now()\n            where id = `+this.props.editData.ds_id+`\n        `\n        console.log('sql : ', sql)\n\n        var result = await axios.post(api_query, {\n                                    query : sql\n                                })\n                                    .then(async(result) => {\n                                    let res = result.data.response\n                                    // Beda dgn sweetAlert yg lain\n                                    return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Success', 'Berhasil Reject SS', 'success')\n                                    // this.props.changeViewPage('page')\n                                }).catch(async(err) => {\n                                    console.log('error : ', err)\n                                    return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Danger', 'Gagal Reject SS', 'danger')\n                                    // return []\n                                })\n\n      }\n}\n\nsaveForm = async() =>{\n\n  var title = ''\n  var text = ''\n  var type = ''\n  // console.log('SUBMIT : ', this.state.first_name)\n  // console.log('SUBMIT : ', this.state.last_name)\n  // console.log('event : ', e)\n\n\n  if (this.state.nama == '' || this.state.nama == null) {return await this.handleAlert('isSweetAlert', true, 'Warning', 'Nama Tidak Boleh Kosong', 'warning')}\n  if (this.state.jobLevel == '' || this.state.jobLevel == null) {return await this.handleAlert('isSweetAlert', true, 'Warning', 'Job Level Tidak Boleh Kosong', 'warning')}\n  // if (this.state.isChecked == '' || this.state.isChecked == null) {return await this.handleAlert('isSweetAlert', true, 'Warning', 'Status Karyawan Tidak Boleh Kosong', 'warning')}\n  else {\n\n      var aktif = this.state.isChecked? 'Y':'N'\n\n      let sql = `\n          update df_master_user\n          set\n          name = '`+this.state.nama+`',\n          job_level = '`+this.state.jobLevel+`',\n          active = '`+aktif+`',\n          update_by = `+this.state.myProfile.id+`,\n          update_date = now()\n          where nik = '`+this.state.nik+`'\n      `\n      console.log('sql : ', sql)\n\n      var result = await axios.post(api_query, {\n                                  query : sql\n                              })\n                                  .then(async(result) => {\n                                  let res = result.data.response\n                                  // Beda dgn sweetAlert yg lain\n                                  return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Success', 'Berhasil edit karyawan', 'success')\n                                  // this.props.changeViewPage('page')\n                              }).catch(async(err) => {\n                                  console.log('error : ', err)\n                                  return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Danger', 'Gagal edit karyawan', 'danger')\n                                  // return []\n                              })\n\n      // this.setState({isLoading: true});\n      // console.log('result query : ', result)\n      // this.props.changeViewPage('page')\n      // // return await this.handleAlert('isSweetAlert', true, 'Success', 'Data Berhasil Ditambahkan '+this.state.first_name+ \" \"+ this.state.last_name, 'success')\n  }\n\n}\n\nisLogin = async(role) =>{\n  if (localStorage.getItem('account') == undefined || localStorage.getItem('account') == null) {\n    history.push(\"/pages/login\")\n  }else if(JSON.parse(localStorage.getItem('account')).role !== role){\n    history.push(\"/pages/login\")\n  }\n  else{\n    var myProfile = JSON.parse(localStorage.getItem('account'))\n    console.log('myProfile ss : ', myProfile)\n    this.setState({myProfile: myProfile})\n  }\n}\n\n\ntarikDepartemen = async() =>{\n\n  let sql = `\n    select  id as value,\n            nama_departemen as label\n    from df_master_departement\n  `\n\n  var result = await axios.post(api_query, {\n                              query : sql\n                          })\n                              .then(async(result) => {\n                                var res = result.data.response.rows\n                                console.log('result query kategori : ', res)\n                                if (res.length == '') {\n                                    return []\n                                }\n\n                                await this.setState({dataDepartemen: res})\n\n                              }).catch(err => {\n                                  console.log('error : ', err)\n                                  return []\n                              })\n    // await this.setState({data: result})\n}\n\n\ntarikDataProfile = async() =>{\n  let sql = `\n      select nik, name, departement_id, nama_departemen, job_level from df_master_user dmu\n      join df_master_departement dmd\n      on dmu.departement_id = dmd.id\n      where dmu.id = `+this.props.editData.pengusul_id+`\n  `\n  var result = await axios.post(api_query, {\n                              query : sql\n                          })\n                              .then(async(result) => {\n                                var res = result.data.response.rows[0]\n                                console.log('result query profile : ', res)\n                                if (res.length == '') {\n                                    return\n                                }else{\n\n                                  await this.tarikAtasan(res.departement_id);\n                                  await this.setState({\n                                    cffNik: res.nik,\n                                    cffName: res.name,\n                                    cffNamaDepartemen: res.nama_departemen,\n                                  })\n                                }\n\n                                // await this.setState({dataAtasan: res})\n\n                              }).catch(err => {\n                                  console.log('error : ', err)\n                                  return []\n                              })\n    // await this.setState({data: result})\n}\n\n\nhandleAlertConfirm = (state, value, title, text, type) => {\n\n  if (value) {\n    this.setState({ [state] : value })\n    this.setState({sweetAlertTitleConfirm: title, sweetAlertTextConfirm: text, sweetAlertTypeConfirm: type});\n  }else{\n    this.setState({ [state] : value })\n    this.props.changeViewPage('page')\n}\n  // if(text == \"Berhasil membuat SS\"){\n  //   this.setState({ [state] : value })\n  //   this.setState({sweetAlertTitle: title, sweetAlertText: text, sweetAlertType: type});\n  //   // this.props.changeViewPage('page')\n  // }else{}\n}\n\nhandleAlert = (state, value, title, text, type) => {\n    if (value) {\n      this.setState({ [state] : value })\n      this.setState({sweetAlertTitle: title, sweetAlertText: text, sweetAlertType: type});\n    }else{\n      this.setState({ [state] : value })\n    }\n}\n\n  render() {\n    // const [centeredModal, setCenteredModal] = useState(false)\n    return (\n      <>\n      <Button.Ripple color=\"none\" className=\"bg-gradient-warning mb-1\" onClick={() => this.props.changeViewPage()}>Back</Button.Ripple>\n        <Card>\n          <CardHeader>\n            <CardTitle>Data Karyawan</CardTitle>\n          </CardHeader>\n          <CardBody>\n            <Form>\n              <Row>\n                <Col sm=\"12\">\n                  <FormGroup>\n                    <Label for=\"ssTema\">NIK</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"nik\"\n                      id=\"nik\"\n                      placeholder=\"NIK\"\n                      value={this.state.nik}\n                      onChange={(val)=>this.setState({nik: val.target.value})}\n                      disabled\n                    />\n                  </FormGroup>\n                </Col>\n                <Col sm=\"12\">\n                  <FormGroup>\n                    <Label for=\"ssTema\">Nama lengkap</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"nama\"\n                      id=\"nama\"\n                      placeholder=\"Nama lengkap\"\n                      value={this.state.nama}\n                      onChange={(val)=>this.setState({nama: val.target.value})}\n                      // disabled\n                    />\n                  </FormGroup>\n                </Col>\n                <Col sm=\"12\">\n                  <FormGroup>\n                    <Label for=\"\">Pilih Departemen</Label>\n                    <Select\n                      className=\"React\"\n                      classNamePrefix=\"select\"\n                      value={this.state.dataDepartemen.filter(option => option.value == this.state.departemenSelected)}\n                      // defaultValue={this.state.kategoriSelected != null? this.state.kategoriSelected:null}\n                      name=\"clear\"\n                      options={this.state.dataDepartemen}\n                      // isClearable={true}\n                      onChange={(val)=>this.setState({departemenSelected: val.value})}\n                      // onChange={(val)=>this.setState({ssAtasanSelected: val.target.value})}\n                    />\n                  </FormGroup>\n                </Col>\n                <Col sm=\"12\">\n                  <FormGroup>\n                    <Label for=\"ssTema\">Job Level</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"jobLevel\"\n                      id=\"jobLevel\"\n                      placeholder=\"Job Level\"\n                      value={this.state.jobLevel}\n                      onChange={(val)=>this.setState({jobLevel: val.target.value})}\n                      disabled\n                    />\n                  </FormGroup>\n                </Col>\n                <Col sm=\"3\">\n                  <FormGroup>\n                    <label className=\"react-toggle-wrapper\">\n                      Status Karyawan :\n                      <Toggle\n                        checked={this.state.isChecked}\n                        // onChange={this.handleSwitchChange}\n                        onChange={()=> this.setState({isChecked: !this.state.isChecked})}\n                        name=\"controlledSwitch\"\n                        className={\"ml-1\"}\n                        // value=\"yes\"\n                      />\n                    </label>\n                  </FormGroup>\n                </Col>\n                <Col sm=\"12\">\n                  <FormGroup>\n                      <div className=\"d-flex justify-content-end\">\n                        <Button color=\"none\" className=\"bg-gradient-success\" onClick={() => this.saveForm()}>\n                          <span className='align-middle ml-25'>Simpan </span>\n                          <Check size={14}/>\n                        </Button>\n                      </div>\n                  </FormGroup>\n                </Col>\n                {/* <Col sm=\"12\">\n                  <FormGroup>\n                    <div className=\"d-flex flex-wrap justify-content-between\">\n                      <div>\n                        <Button color=\"none\" className=\"bg-gradient-warning\" onClick={() => this.setState({step: 0})}>Prev</Button>\n                      </div>\n                      <div className=\"justify-content-end\">\n                        <Button color=\"none\" className=\"bg-gradient-warning mr-1\" onClick={() => this.saveForm()}>\n                          <span className='align-middle ml-25'>Simpan  </span>\n                          <Save size={14}/>\n                        </Button>\n                        <Button color=\"none\" className=\"bg-gradient-success\" onClick={() => this.submitForm()}>\n                          <span className='align-middle ml-25'>Kirim  </span>\n                          <Send size={14}/>\n                        </Button>\n                      </div>\n                    </div>\n                  </FormGroup>\n                </Col> */}\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n\n        <SweetAlert type={this.state.sweetAlertType} title={this.state.sweetAlertTitle}\n          show={this.state.isSweetAlert}\n          onConfirm={() => this.handleAlert(\"isSweetAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              {this.state.sweetAlertText}\n            </p>\n        </SweetAlert>\n\n        <SweetAlert type={this.state.sweetAlertTypeConfirm} title={this.state.sweetAlertTitleConfirm}\n          show={this.state.isSweetAlertConfirm}\n          onConfirm={() => this.handleAlertConfirm(\"isSweetAlertConfirm\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              {this.state.sweetAlertTextConfirm}\n            </p>\n        </SweetAlert>\n      </>\n    )\n  }\n}\nexport default KaryawanView\n"]},"metadata":{},"sourceType":"module"}